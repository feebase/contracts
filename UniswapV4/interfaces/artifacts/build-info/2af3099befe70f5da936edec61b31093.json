{
	"id": "2af3099befe70f5da936edec61b31093",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"UniswapV4/interfaces/IV4Router.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {PoolKey} from \"../types/PoolKey.sol\";\nimport {Currency} from \"../types/Currency.sol\";\nimport {PathKey} from \"../libraries/PathKey.sol\";\nimport {IImmutableState} from \"./IImmutableState.sol\";\n\n/// @title IV4Router\n/// @notice Interface for the V4Router contract\ninterface IV4Router is IImmutableState {\n    /// @notice Emitted when an exactInput swap does not receive its minAmountOut\n    error V4TooLittleReceived(uint256 minAmountOutReceived, uint256 amountReceived);\n    /// @notice Emitted when an exactOutput is asked for more than its maxAmountIn\n    error V4TooMuchRequested(uint256 maxAmountInRequested, uint256 amountRequested);\n\n    /// @notice Parameters for a single-hop exact-input swap\n    struct ExactInputSingleParams {\n        PoolKey poolKey;\n        bool zeroForOne;\n        uint128 amountIn;\n        uint128 amountOutMinimum;\n        bytes hookData;\n    }\n\n    /// @notice Parameters for a multi-hop exact-input swap\n    struct ExactInputParams {\n        Currency currencyIn;\n        PathKey[] path;\n        uint128 amountIn;\n        uint128 amountOutMinimum;\n    }\n\n    /// @notice Parameters for a single-hop exact-output swap\n    struct ExactOutputSingleParams {\n        PoolKey poolKey;\n        bool zeroForOne;\n        uint128 amountOut;\n        uint128 amountInMaximum;\n        bytes hookData;\n    }\n\n    /// @notice Parameters for a multi-hop exact-output swap\n    struct ExactOutputParams {\n        Currency currencyOut;\n        PathKey[] path;\n        uint128 amountOut;\n        uint128 amountInMaximum;\n    }\n}"
			},
			"UniswapV4/interfaces/IImmutableState.sol": {
				"content": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IPoolManager} from \"./IPoolManager.sol\";\n\n/// @title IImmutableState\n/// @notice Interface for the ImmutableState contract\ninterface IImmutableState {\n    /// @notice The Uniswap v4 PoolManager contract\n    function poolManager() external view returns (IPoolManager);\n}\n"
			},
			"UniswapV4/libraries/PathKey.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {Currency} from \"../types/Currency.sol\";\nimport {IHooks} from \"../interfaces/IHooks.sol\";\nimport {PoolKey} from \"../types/PoolKey.sol\";\n\nstruct PathKey {\n    Currency intermediateCurrency;\n    uint24 fee;\n    int24 tickSpacing;\n    IHooks hooks;\n    bytes hookData;\n}\n\nusing PathKeyLibrary for PathKey global;\n\n/// @title PathKey Library\n/// @notice Functions for working with PathKeys\nlibrary PathKeyLibrary {\n    /// @notice Get the pool and swap direction for a given PathKey\n    /// @param params the given PathKey\n    /// @param currencyIn the input currency\n    /// @return poolKey the pool key of the swap\n    /// @return zeroForOne the direction of the swap, true if currency0 is being swapped for currency1\n    function getPoolAndSwapDirection(PathKey calldata params, Currency currencyIn)\n        internal\n        pure\n        returns (PoolKey memory poolKey, bool zeroForOne)\n    {\n        Currency currencyOut = params.intermediateCurrency;\n        (Currency currency0, Currency currency1) =\n            currencyIn < currencyOut ? (currencyIn, currencyOut) : (currencyOut, currencyIn);\n\n        zeroForOne = currencyIn == currency0;\n        poolKey = PoolKey(currency0, currency1, params.fee, params.tickSpacing, params.hooks);\n    }\n}"
			},
			"UniswapV4/types/Currency.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IERC20Minimal} from \"../interfaces/external/IERC20Minimal.sol\";\nimport {CustomRevert} from \"../libraries/CustomRevert.sol\";\n\ntype Currency is address;\n\nusing {greaterThan as >, lessThan as <, greaterThanOrEqualTo as >=, equals as ==} for Currency global;\nusing CurrencyLibrary for Currency global;\n\nfunction equals(Currency currency, Currency other) pure returns (bool) {\n    return Currency.unwrap(currency) == Currency.unwrap(other);\n}\n\nfunction greaterThan(Currency currency, Currency other) pure returns (bool) {\n    return Currency.unwrap(currency) > Currency.unwrap(other);\n}\n\nfunction lessThan(Currency currency, Currency other) pure returns (bool) {\n    return Currency.unwrap(currency) < Currency.unwrap(other);\n}\n\nfunction greaterThanOrEqualTo(Currency currency, Currency other) pure returns (bool) {\n    return Currency.unwrap(currency) >= Currency.unwrap(other);\n}\n\n/// @title CurrencyLibrary\n/// @dev This library allows for transferring and holding native tokens and ERC20 tokens\nlibrary CurrencyLibrary {\n    /// @notice Additional context for ERC-7751 wrapped error when a native transfer fails\n    error NativeTransferFailed();\n\n    /// @notice Additional context for ERC-7751 wrapped error when an ERC20 transfer fails\n    error ERC20TransferFailed();\n\n    /// @notice A constant to represent the native currency\n    Currency public constant ADDRESS_ZERO = Currency.wrap(address(0));\n\n    function transfer(Currency currency, address to, uint256 amount) internal {\n        // altered from https://github.com/transmissions11/solmate/blob/44a9963d4c78111f77caa0e65d677b8b46d6f2e6/src/utils/SafeTransferLib.sol\n        // modified custom error selectors\n\n        bool success;\n        if (currency.isAddressZero()) {\n            assembly (\"memory-safe\") {\n                // Transfer the ETH and revert if it fails.\n                success := call(gas(), to, amount, 0, 0, 0, 0)\n            }\n            // revert with NativeTransferFailed, containing the bubbled up error as an argument\n            if (!success) {\n                CustomRevert.bubbleUpAndRevertWith(to, bytes4(0), NativeTransferFailed.selector);\n            }\n        } else {\n            assembly (\"memory-safe\") {\n                // Get a pointer to some free memory.\n                let fmp := mload(0x40)\n\n                // Write the abi-encoded calldata into memory, beginning with the function selector.\n                mstore(fmp, 0xa9059cbb00000000000000000000000000000000000000000000000000000000)\n                mstore(add(fmp, 4), and(to, 0xffffffffffffffffffffffffffffffffffffffff)) // Append and mask the \"to\" argument.\n                mstore(add(fmp, 36), amount) // Append the \"amount\" argument. Masking not required as it's a full 32 byte type.\n\n                success :=\n                    and(\n                        // Set success to whether the call reverted, if not we check it either\n                        // returned exactly 1 (can't just be non-zero data), or had no return data.\n                        or(and(eq(mload(0), 1), gt(returndatasize(), 31)), iszero(returndatasize())),\n                        // We use 68 because the length of our calldata totals up like so: 4 + 32 * 2.\n                        // We use 0 and 32 to copy up to 32 bytes of return data into the scratch space.\n                        // Counterintuitively, this call must be positioned second to the or() call in the\n                        // surrounding and() call or else returndatasize() will be zero during the computation.\n                        call(gas(), currency, 0, fmp, 68, 0, 32)\n                    )\n\n                // Now clean the memory we used\n                mstore(fmp, 0) // 4 byte `selector` and 28 bytes of `to` were stored here\n                mstore(add(fmp, 0x20), 0) // 4 bytes of `to` and 28 bytes of `amount` were stored here\n                mstore(add(fmp, 0x40), 0) // 4 bytes of `amount` were stored here\n            }\n            // revert with ERC20TransferFailed, containing the bubbled up error as an argument\n            if (!success) {\n                CustomRevert.bubbleUpAndRevertWith(\n                    Currency.unwrap(currency), IERC20Minimal.transfer.selector, ERC20TransferFailed.selector\n                );\n            }\n        }\n    }\n\n    function balanceOfSelf(Currency currency) internal view returns (uint256) {\n        if (currency.isAddressZero()) {\n            return address(this).balance;\n        } else {\n            return IERC20Minimal(Currency.unwrap(currency)).balanceOf(address(this));\n        }\n    }\n\n    function balanceOf(Currency currency, address owner) internal view returns (uint256) {\n        if (currency.isAddressZero()) {\n            return owner.balance;\n        } else {\n            return IERC20Minimal(Currency.unwrap(currency)).balanceOf(owner);\n        }\n    }\n\n    function isAddressZero(Currency currency) internal pure returns (bool) {\n        return Currency.unwrap(currency) == Currency.unwrap(ADDRESS_ZERO);\n    }\n\n    function toId(Currency currency) internal pure returns (uint256) {\n        return uint160(Currency.unwrap(currency));\n    }\n\n    // If the upper 12 bytes are non-zero, they will be zero-ed out\n    // Therefore, fromId() and toId() are not inverses of each other\n    function fromId(uint256 id) internal pure returns (Currency) {\n        return Currency.wrap(address(uint160(id)));\n    }\n}\n"
			},
			"UniswapV4/types/PoolKey.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {Currency} from \"./Currency.sol\";\nimport {IHooks} from \"../interfaces/IHooks.sol\";\nimport {PoolIdLibrary} from \"./PoolId.sol\";\n\nusing PoolIdLibrary for PoolKey global;\n\n/// @notice Returns the key for identifying a pool\nstruct PoolKey {\n    /// @notice The lower currency of the pool, sorted numerically\n    Currency currency0;\n    /// @notice The higher currency of the pool, sorted numerically\n    Currency currency1;\n    /// @notice The pool LP fee, capped at 1_000_000. If the highest bit is 1, the pool has a dynamic fee and must be exactly equal to 0x800000\n    uint24 fee;\n    /// @notice Ticks that involve positions must be a multiple of tick spacing\n    int24 tickSpacing;\n    /// @notice The hooks of the pool\n    IHooks hooks;\n}\n"
			},
			"UniswapV4/types/PoolId.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {PoolKey} from \"./PoolKey.sol\";\n\ntype PoolId is bytes32;\n\n/// @notice Library for computing the ID of a pool\nlibrary PoolIdLibrary {\n    /// @notice Returns value equal to keccak256(abi.encode(poolKey))\n    function toId(PoolKey memory poolKey) internal pure returns (PoolId poolId) {\n        assembly (\"memory-safe\") {\n            // 0xa0 represents the total size of the poolKey struct (5 slots of 32 bytes)\n            poolId := keccak256(poolKey, 0xa0)\n        }\n    }\n}\n"
			},
			"UniswapV4/interfaces/IHooks.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {PoolKey} from \"../types/PoolKey.sol\";\nimport {BalanceDelta} from \"../types/BalanceDelta.sol\";\nimport {IPoolManager} from \"./IPoolManager.sol\";\nimport {BeforeSwapDelta} from \"../types/BeforeSwapDelta.sol\";\n\n/// @notice V4 decides whether to invoke specific hooks by inspecting the least significant bits\n/// of the address that the hooks contract is deployed to.\n/// For example, a hooks contract deployed to address: 0x0000000000000000000000000000000000002400\n/// has the lowest bits '10 0100 0000 0000' which would cause the 'before initialize' and 'after add liquidity' hooks to be used.\n/// See the Hooks library for the full spec.\n/// @dev Should only be callable by the v4 PoolManager.\ninterface IHooks {\n    /// @notice The hook called before the state of a pool is initialized\n    /// @param sender The initial msg.sender for the initialize call\n    /// @param key The key for the pool being initialized\n    /// @param sqrtPriceX96 The sqrt(price) of the pool as a Q64.96\n    /// @return bytes4 The function selector for the hook\n    function beforeInitialize(address sender, PoolKey calldata key, uint160 sqrtPriceX96) external returns (bytes4);\n\n    /// @notice The hook called after the state of a pool is initialized\n    /// @param sender The initial msg.sender for the initialize call\n    /// @param key The key for the pool being initialized\n    /// @param sqrtPriceX96 The sqrt(price) of the pool as a Q64.96\n    /// @param tick The current tick after the state of a pool is initialized\n    /// @return bytes4 The function selector for the hook\n    function afterInitialize(address sender, PoolKey calldata key, uint160 sqrtPriceX96, int24 tick)\n        external\n        returns (bytes4);\n\n    /// @notice The hook called before liquidity is added\n    /// @param sender The initial msg.sender for the add liquidity call\n    /// @param key The key for the pool\n    /// @param params The parameters for adding liquidity\n    /// @param hookData Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\n    /// @return bytes4 The function selector for the hook\n    function beforeAddLiquidity(\n        address sender,\n        PoolKey calldata key,\n        IPoolManager.ModifyLiquidityParams calldata params,\n        bytes calldata hookData\n    ) external returns (bytes4);\n\n    /// @notice The hook called after liquidity is added\n    /// @param sender The initial msg.sender for the add liquidity call\n    /// @param key The key for the pool\n    /// @param params The parameters for adding liquidity\n    /// @param delta The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta\n    /// @param feesAccrued The fees accrued since the last time fees were collected from this position\n    /// @param hookData Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\n    /// @return bytes4 The function selector for the hook\n    /// @return BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\n    function afterAddLiquidity(\n        address sender,\n        PoolKey calldata key,\n        IPoolManager.ModifyLiquidityParams calldata params,\n        BalanceDelta delta,\n        BalanceDelta feesAccrued,\n        bytes calldata hookData\n    ) external returns (bytes4, BalanceDelta);\n\n    /// @notice The hook called before liquidity is removed\n    /// @param sender The initial msg.sender for the remove liquidity call\n    /// @param key The key for the pool\n    /// @param params The parameters for removing liquidity\n    /// @param hookData Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\n    /// @return bytes4 The function selector for the hook\n    function beforeRemoveLiquidity(\n        address sender,\n        PoolKey calldata key,\n        IPoolManager.ModifyLiquidityParams calldata params,\n        bytes calldata hookData\n    ) external returns (bytes4);\n\n    /// @notice The hook called after liquidity is removed\n    /// @param sender The initial msg.sender for the remove liquidity call\n    /// @param key The key for the pool\n    /// @param params The parameters for removing liquidity\n    /// @param delta The caller's balance delta after removing liquidity; the sum of principal delta, fees accrued, and hook delta\n    /// @param feesAccrued The fees accrued since the last time fees were collected from this position\n    /// @param hookData Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\n    /// @return bytes4 The function selector for the hook\n    /// @return BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\n    function afterRemoveLiquidity(\n        address sender,\n        PoolKey calldata key,\n        IPoolManager.ModifyLiquidityParams calldata params,\n        BalanceDelta delta,\n        BalanceDelta feesAccrued,\n        bytes calldata hookData\n    ) external returns (bytes4, BalanceDelta);\n\n    /// @notice The hook called before a swap\n    /// @param sender The initial msg.sender for the swap call\n    /// @param key The key for the pool\n    /// @param params The parameters for the swap\n    /// @param hookData Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\n    /// @return bytes4 The function selector for the hook\n    /// @return BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\n    /// @return uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)\n    function beforeSwap(\n        address sender,\n        PoolKey calldata key,\n        IPoolManager.SwapParams calldata params,\n        bytes calldata hookData\n    ) external returns (bytes4, BeforeSwapDelta, uint24);\n\n    /// @notice The hook called after a swap\n    /// @param sender The initial msg.sender for the swap call\n    /// @param key The key for the pool\n    /// @param params The parameters for the swap\n    /// @param delta The amount owed to the caller (positive) or owed to the pool (negative)\n    /// @param hookData Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\n    /// @return bytes4 The function selector for the hook\n    /// @return int128 The hook's delta in unspecified currency. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\n    function afterSwap(\n        address sender,\n        PoolKey calldata key,\n        IPoolManager.SwapParams calldata params,\n        BalanceDelta delta,\n        bytes calldata hookData\n    ) external returns (bytes4, int128);\n\n    /// @notice The hook called before donate\n    /// @param sender The initial msg.sender for the donate call\n    /// @param key The key for the pool\n    /// @param amount0 The amount of token0 being donated\n    /// @param amount1 The amount of token1 being donated\n    /// @param hookData Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\n    /// @return bytes4 The function selector for the hook\n    function beforeDonate(\n        address sender,\n        PoolKey calldata key,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata hookData\n    ) external returns (bytes4);\n\n    /// @notice The hook called after donate\n    /// @param sender The initial msg.sender for the donate call\n    /// @param key The key for the pool\n    /// @param amount0 The amount of token0 being donated\n    /// @param amount1 The amount of token1 being donated\n    /// @param hookData Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\n    /// @return bytes4 The function selector for the hook\n    function afterDonate(\n        address sender,\n        PoolKey calldata key,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata hookData\n    ) external returns (bytes4);\n}\n"
			},
			"UniswapV4/libraries/CustomRevert.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @title Library for reverting with custom errors efficiently\n/// @notice Contains functions for reverting with custom errors with different argument types efficiently\n/// @dev To use this library, declare `using CustomRevert for bytes4;` and replace `revert CustomError()` with\n/// `CustomError.selector.revertWith()`\n/// @dev The functions may tamper with the free memory pointer but it is fine since the call context is exited immediately\nlibrary CustomRevert {\n    /// @dev ERC-7751 error for wrapping bubbled up reverts\n    error WrappedError(address target, bytes4 selector, bytes reason, bytes details);\n\n    /// @dev Reverts with the selector of a custom error in the scratch space\n    function revertWith(bytes4 selector) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0, selector)\n            revert(0, 0x04)\n        }\n    }\n\n    /// @dev Reverts with a custom error with an address argument in the scratch space\n    function revertWith(bytes4 selector, address addr) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0, selector)\n            mstore(0x04, and(addr, 0xffffffffffffffffffffffffffffffffffffffff))\n            revert(0, 0x24)\n        }\n    }\n\n    /// @dev Reverts with a custom error with an int24 argument in the scratch space\n    function revertWith(bytes4 selector, int24 value) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0, selector)\n            mstore(0x04, signextend(2, value))\n            revert(0, 0x24)\n        }\n    }\n\n    /// @dev Reverts with a custom error with a uint160 argument in the scratch space\n    function revertWith(bytes4 selector, uint160 value) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0, selector)\n            mstore(0x04, and(value, 0xffffffffffffffffffffffffffffffffffffffff))\n            revert(0, 0x24)\n        }\n    }\n\n    /// @dev Reverts with a custom error with two int24 arguments\n    function revertWith(bytes4 selector, int24 value1, int24 value2) internal pure {\n        assembly (\"memory-safe\") {\n            let fmp := mload(0x40)\n            mstore(fmp, selector)\n            mstore(add(fmp, 0x04), signextend(2, value1))\n            mstore(add(fmp, 0x24), signextend(2, value2))\n            revert(fmp, 0x44)\n        }\n    }\n\n    /// @dev Reverts with a custom error with two uint160 arguments\n    function revertWith(bytes4 selector, uint160 value1, uint160 value2) internal pure {\n        assembly (\"memory-safe\") {\n            let fmp := mload(0x40)\n            mstore(fmp, selector)\n            mstore(add(fmp, 0x04), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n            mstore(add(fmp, 0x24), and(value2, 0xffffffffffffffffffffffffffffffffffffffff))\n            revert(fmp, 0x44)\n        }\n    }\n\n    /// @dev Reverts with a custom error with two address arguments\n    function revertWith(bytes4 selector, address value1, address value2) internal pure {\n        assembly (\"memory-safe\") {\n            let fmp := mload(0x40)\n            mstore(fmp, selector)\n            mstore(add(fmp, 0x04), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n            mstore(add(fmp, 0x24), and(value2, 0xffffffffffffffffffffffffffffffffffffffff))\n            revert(fmp, 0x44)\n        }\n    }\n\n    /// @notice bubble up the revert message returned by a call and revert with a wrapped ERC-7751 error\n    /// @dev this method can be vulnerable to revert data bombs\n    function bubbleUpAndRevertWith(\n        address revertingContract,\n        bytes4 revertingFunctionSelector,\n        bytes4 additionalContext\n    ) internal pure {\n        bytes4 wrappedErrorSelector = WrappedError.selector;\n        assembly (\"memory-safe\") {\n            // Ensure the size of the revert data is a multiple of 32 bytes\n            let encodedDataSize := mul(div(add(returndatasize(), 31), 32), 32)\n\n            let fmp := mload(0x40)\n\n            // Encode wrapped error selector, address, function selector, offset, additional context, size, revert reason\n            mstore(fmp, wrappedErrorSelector)\n            mstore(add(fmp, 0x04), and(revertingContract, 0xffffffffffffffffffffffffffffffffffffffff))\n            mstore(\n                add(fmp, 0x24),\n                and(revertingFunctionSelector, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n            )\n            // offset revert reason\n            mstore(add(fmp, 0x44), 0x80)\n            // offset additional context\n            mstore(add(fmp, 0x64), add(0xa0, encodedDataSize))\n            // size revert reason\n            mstore(add(fmp, 0x84), returndatasize())\n            // revert reason\n            returndatacopy(add(fmp, 0xa4), 0, returndatasize())\n            // size additional context\n            mstore(add(fmp, add(0xa4, encodedDataSize)), 0x04)\n            // additional context\n            mstore(\n                add(fmp, add(0xc4, encodedDataSize)),\n                and(additionalContext, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n            )\n            revert(fmp, add(0xe4, encodedDataSize))\n        }\n    }\n}\n"
			},
			"UniswapV4/interfaces/external/IERC20Minimal.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @title Minimal ERC20 interface for Uniswap\n/// @notice Contains a subset of the full ERC20 interface that is used in Uniswap V3\ninterface IERC20Minimal {\n    /// @notice Returns an account's balance in the token\n    /// @param account The account for which to look up the number of tokens it has, i.e. its balance\n    /// @return The number of tokens held by the account\n    function balanceOf(address account) external view returns (uint256);\n\n    /// @notice Transfers the amount of token from the `msg.sender` to the recipient\n    /// @param recipient The account that will receive the amount transferred\n    /// @param amount The number of tokens to send from the sender to the recipient\n    /// @return Returns true for a successful transfer, false for an unsuccessful transfer\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /// @notice Returns the current allowance given to a spender by an owner\n    /// @param owner The account of the token owner\n    /// @param spender The account of the token spender\n    /// @return The current allowance granted by `owner` to `spender`\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /// @notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\n    /// @param spender The account which will be allowed to spend a given amount of the owners tokens\n    /// @param amount The amount of tokens allowed to be used by `spender`\n    /// @return Returns true for a successful approval, false for unsuccessful\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /// @notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\n    /// @param sender The account from which the transfer will be initiated\n    /// @param recipient The recipient of the transfer\n    /// @param amount The amount of the transfer\n    /// @return Returns true for a successful transfer, false for unsuccessful\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /// @notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\n    /// @param from The account from which the tokens were sent, i.e. the balance decreased\n    /// @param to The account to which the tokens were sent, i.e. the balance increased\n    /// @param value The amount of tokens that were transferred\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /// @notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\n    /// @param owner The account that approved spending of its tokens\n    /// @param spender The account for which the spending allowance was modified\n    /// @param value The new allowance from the owner to the spender\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"UniswapV4/interfaces/IPoolManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport {Currency} from \"../types/Currency.sol\";\nimport {PoolKey} from \"../types/PoolKey.sol\";\nimport {IHooks} from \"./IHooks.sol\";\nimport {IERC6909Claims} from \"./external/IERC6909Claims.sol\";\nimport {IProtocolFees} from \"./IProtocolFees.sol\";\nimport {BalanceDelta} from \"../types/BalanceDelta.sol\";\nimport {PoolId} from \"../types/PoolId.sol\";\nimport {IExtsload} from \"./IExtsload.sol\";\nimport {IExttload} from \"./IExttload.sol\";\n\n/// @notice Interface for the PoolManager\ninterface IPoolManager is IProtocolFees, IERC6909Claims, IExtsload, IExttload {\n    /// @notice Thrown when a currency is not netted out after the contract is unlocked\n    error CurrencyNotSettled();\n\n    /// @notice Thrown when trying to interact with a non-initialized pool\n    error PoolNotInitialized();\n\n    /// @notice Thrown when unlock is called, but the contract is already unlocked\n    error AlreadyUnlocked();\n\n    /// @notice Thrown when a function is called that requires the contract to be unlocked, but it is not\n    error ManagerLocked();\n\n    /// @notice Pools are limited to type(int16).max tickSpacing in #initialize, to prevent overflow\n    error TickSpacingTooLarge(int24 tickSpacing);\n\n    /// @notice Pools must have a positive non-zero tickSpacing passed to #initialize\n    error TickSpacingTooSmall(int24 tickSpacing);\n\n    /// @notice PoolKey must have currencies where address(currency0) < address(currency1)\n    error CurrenciesOutOfOrderOrEqual(address currency0, address currency1);\n\n    /// @notice Thrown when a call to updateDynamicLPFee is made by an address that is not the hook,\n    /// or on a pool that does not have a dynamic swap fee.\n    error UnauthorizedDynamicLPFeeUpdate();\n\n    /// @notice Thrown when trying to swap amount of 0\n    error SwapAmountCannotBeZero();\n\n    ///@notice Thrown when native currency is passed to a non native settlement\n    error NonzeroNativeValue();\n\n    /// @notice Thrown when `clear` is called with an amount that is not exactly equal to the open currency delta.\n    error MustClearExactPositiveDelta();\n\n    /// @notice Emitted when a new pool is initialized\n    /// @param id The abi encoded hash of the pool key struct for the new pool\n    /// @param currency0 The first currency of the pool by address sort order\n    /// @param currency1 The second currency of the pool by address sort order\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\n    /// @param hooks The hooks contract address for the pool, or address(0) if none\n    /// @param sqrtPriceX96 The price of the pool on initialization\n    /// @param tick The initial tick of the pool corresponding to the initialized price\n    event Initialize(\n        PoolId indexed id,\n        Currency indexed currency0,\n        Currency indexed currency1,\n        uint24 fee,\n        int24 tickSpacing,\n        IHooks hooks,\n        uint160 sqrtPriceX96,\n        int24 tick\n    );\n\n    /// @notice Emitted when a liquidity position is modified\n    /// @param id The abi encoded hash of the pool key struct for the pool that was modified\n    /// @param sender The address that modified the pool\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param liquidityDelta The amount of liquidity that was added or removed\n    /// @param salt The extra data to make positions unique\n    event ModifyLiquidity(\n        PoolId indexed id, address indexed sender, int24 tickLower, int24 tickUpper, int256 liquidityDelta, bytes32 salt\n    );\n\n    /// @notice Emitted for swaps between currency0 and currency1\n    /// @param id The abi encoded hash of the pool key struct for the pool that was modified\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param amount0 The delta of the currency0 balance of the pool\n    /// @param amount1 The delta of the currency1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of the price of the pool after the swap\n    /// @param fee The swap fee in hundredths of a bip\n    event Swap(\n        PoolId indexed id,\n        address indexed sender,\n        int128 amount0,\n        int128 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick,\n        uint24 fee\n    );\n\n    /// @notice Emitted for donations\n    /// @param id The abi encoded hash of the pool key struct for the pool that was donated to\n    /// @param sender The address that initiated the donate call\n    /// @param amount0 The amount donated in currency0\n    /// @param amount1 The amount donated in currency1\n    event Donate(PoolId indexed id, address indexed sender, uint256 amount0, uint256 amount1);\n\n    /// @notice All interactions on the contract that account deltas require unlocking. A caller that calls `unlock` must implement\n    /// `IUnlockCallback(msg.sender).unlockCallback(data)`, where they interact with the remaining functions on this contract.\n    /// @dev The only functions callable without an unlocking are `initialize` and `updateDynamicLPFee`\n    /// @param data Any data to pass to the callback, via `IUnlockCallback(msg.sender).unlockCallback(data)`\n    /// @return The data returned by the call to `IUnlockCallback(msg.sender).unlockCallback(data)`\n    function unlock(bytes calldata data) external returns (bytes memory);\n\n    /// @notice Initialize the state for a given pool ID\n    /// @dev A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee\n    /// @param key The pool key for the pool to initialize\n    /// @param sqrtPriceX96 The initial square root price\n    /// @return tick The initial tick of the pool\n    function initialize(PoolKey memory key, uint160 sqrtPriceX96) external returns (int24 tick);\n\n    struct ModifyLiquidityParams {\n        // the lower and upper tick of the position\n        int24 tickLower;\n        int24 tickUpper;\n        // how to modify the liquidity\n        int256 liquidityDelta;\n        // a value to set if you want unique liquidity positions at the same range\n        bytes32 salt;\n    }\n\n    /// @notice Modify the liquidity for the given pool\n    /// @dev Poke by calling with a zero liquidityDelta\n    /// @param key The pool to modify liquidity in\n    /// @param params The parameters for modifying the liquidity\n    /// @param hookData The data to pass through to the add/removeLiquidity hooks\n    /// @return callerDelta The balance delta of the caller of modifyLiquidity. This is the total of both principal, fee deltas, and hook deltas if applicable\n    /// @return feesAccrued The balance delta of the fees generated in the liquidity range. Returned for informational purposes\n    /// @dev Note that feesAccrued can be artificially inflated by a malicious actor and integrators should be careful using the value\n    /// For pools with a single liquidity position, actors can donate to themselves to inflate feeGrowthGlobal (and consequently feesAccrued)\n    /// atomically donating and collecting fees in the same unlockCallback may make the inflated value more extreme\n    function modifyLiquidity(PoolKey memory key, ModifyLiquidityParams memory params, bytes calldata hookData)\n        external\n        returns (BalanceDelta callerDelta, BalanceDelta feesAccrued);\n\n    struct SwapParams {\n        /// Whether to swap token0 for token1 or vice versa\n        bool zeroForOne;\n        /// The desired input amount if negative (exactIn), or the desired output amount if positive (exactOut)\n        int256 amountSpecified;\n        /// The sqrt price at which, if reached, the swap will stop executing\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swap against the given pool\n    /// @param key The pool to swap in\n    /// @param params The parameters for swapping\n    /// @param hookData The data to pass through to the swap hooks\n    /// @return swapDelta The balance delta of the address swapping\n    /// @dev Swapping on low liquidity pools may cause unexpected swap amounts when liquidity available is less than amountSpecified.\n    /// Additionally note that if interacting with hooks that have the BEFORE_SWAP_RETURNS_DELTA_FLAG or AFTER_SWAP_RETURNS_DELTA_FLAG\n    /// the hook may alter the swap input/output. Integrators should perform checks on the returned swapDelta.\n    function swap(PoolKey memory key, SwapParams memory params, bytes calldata hookData)\n        external\n        returns (BalanceDelta swapDelta);\n\n    /// @notice Donate the given currency amounts to the in-range liquidity providers of a pool\n    /// @dev Calls to donate can be frontrun adding just-in-time liquidity, with the aim of receiving a portion donated funds.\n    /// Donors should keep this in mind when designing donation mechanisms.\n    /// @dev This function donates to in-range LPs at slot0.tick. In certain edge-cases of the swap algorithm, the `sqrtPrice` of\n    /// a pool can be at the lower boundary of tick `n`, but the `slot0.tick` of the pool is already `n - 1`. In this case a call to\n    /// `donate` would donate to tick `n - 1` (slot0.tick) not tick `n` (getTickAtSqrtPrice(slot0.sqrtPriceX96)).\n    /// Read the comments in `Pool.swap()` for more information about this.\n    /// @param key The key of the pool to donate to\n    /// @param amount0 The amount of currency0 to donate\n    /// @param amount1 The amount of currency1 to donate\n    /// @param hookData The data to pass through to the donate hooks\n    /// @return BalanceDelta The delta of the caller after the donate\n    function donate(PoolKey memory key, uint256 amount0, uint256 amount1, bytes calldata hookData)\n        external\n        returns (BalanceDelta);\n\n    /// @notice Writes the current ERC20 balance of the specified currency to transient storage\n    /// This is used to checkpoint balances for the manager and derive deltas for the caller.\n    /// @dev This MUST be called before any ERC20 tokens are sent into the contract, but can be skipped\n    /// for native tokens because the amount to settle is determined by the sent value.\n    /// However, if an ERC20 token has been synced and not settled, and the caller instead wants to settle\n    /// native funds, this function can be called with the native currency to then be able to settle the native currency\n    function sync(Currency currency) external;\n\n    /// @notice Called by the user to net out some value owed to the user\n    /// @dev Will revert if the requested amount is not available, consider using `mint` instead\n    /// @dev Can also be used as a mechanism for free flash loans\n    /// @param currency The currency to withdraw from the pool manager\n    /// @param to The address to withdraw to\n    /// @param amount The amount of currency to withdraw\n    function take(Currency currency, address to, uint256 amount) external;\n\n    /// @notice Called by the user to pay what is owed\n    /// @return paid The amount of currency settled\n    function settle() external payable returns (uint256 paid);\n\n    /// @notice Called by the user to pay on behalf of another address\n    /// @param recipient The address to credit for the payment\n    /// @return paid The amount of currency settled\n    function settleFor(address recipient) external payable returns (uint256 paid);\n\n    /// @notice WARNING - Any currency that is cleared, will be non-retrievable, and locked in the contract permanently.\n    /// A call to clear will zero out a positive balance WITHOUT a corresponding transfer.\n    /// @dev This could be used to clear a balance that is considered dust.\n    /// Additionally, the amount must be the exact positive balance. This is to enforce that the caller is aware of the amount being cleared.\n    function clear(Currency currency, uint256 amount) external;\n\n    /// @notice Called by the user to move value into ERC6909 balance\n    /// @param to The address to mint the tokens to\n    /// @param id The currency address to mint to ERC6909s, as a uint256\n    /// @param amount The amount of currency to mint\n    /// @dev The id is converted to a uint160 to correspond to a currency address\n    /// If the upper 12 bytes are not 0, they will be 0-ed out\n    function mint(address to, uint256 id, uint256 amount) external;\n\n    /// @notice Called by the user to move value from ERC6909 balance\n    /// @param from The address to burn the tokens from\n    /// @param id The currency address to burn from ERC6909s, as a uint256\n    /// @param amount The amount of currency to burn\n    /// @dev The id is converted to a uint160 to correspond to a currency address\n    /// If the upper 12 bytes are not 0, they will be 0-ed out\n    function burn(address from, uint256 id, uint256 amount) external;\n\n    /// @notice Updates the pools lp fees for the a pool that has enabled dynamic lp fees.\n    /// @dev A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee\n    /// @param key The key of the pool to update dynamic LP fees for\n    /// @param newDynamicLPFee The new dynamic pool LP fee\n    function updateDynamicLPFee(PoolKey memory key, uint24 newDynamicLPFee) external;\n}\n"
			},
			"UniswapV4/interfaces/IExttload.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n/// @notice Interface for functions to access any transient storage slot in a contract\ninterface IExttload {\n    /// @notice Called by external contracts to access transient storage of the contract\n    /// @param slot Key of slot to tload\n    /// @return value The value of the slot as bytes32\n    function exttload(bytes32 slot) external view returns (bytes32 value);\n\n    /// @notice Called by external contracts to access sparse transient pool state\n    /// @param slots List of slots to tload\n    /// @return values List of loaded values\n    function exttload(bytes32[] calldata slots) external view returns (bytes32[] memory values);\n}\n"
			},
			"UniswapV4/interfaces/IExtsload.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @notice Interface for functions to access any storage slot in a contract\ninterface IExtsload {\n    /// @notice Called by external contracts to access granular pool state\n    /// @param slot Key of slot to sload\n    /// @return value The value of the slot as bytes32\n    function extsload(bytes32 slot) external view returns (bytes32 value);\n\n    /// @notice Called by external contracts to access granular pool state\n    /// @param startSlot Key of slot to start sloading from\n    /// @param nSlots Number of slots to load into return value\n    /// @return values List of loaded values.\n    function extsload(bytes32 startSlot, uint256 nSlots) external view returns (bytes32[] memory values);\n\n    /// @notice Called by external contracts to access sparse pool state\n    /// @param slots List of slots to SLOAD from.\n    /// @return values List of loaded values.\n    function extsload(bytes32[] calldata slots) external view returns (bytes32[] memory values);\n}\n"
			},
			"UniswapV4/types/BalanceDelta.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {SafeCast} from \"../libraries/SafeCast.sol\";\n\n/// @dev Two `int128` values packed into a single `int256` where the upper 128 bits represent the amount0\n/// and the lower 128 bits represent the amount1.\ntype BalanceDelta is int256;\n\nusing {add as +, sub as -, eq as ==, neq as !=} for BalanceDelta global;\nusing BalanceDeltaLibrary for BalanceDelta global;\nusing SafeCast for int256;\n\nfunction toBalanceDelta(int128 _amount0, int128 _amount1) pure returns (BalanceDelta balanceDelta) {\n    assembly (\"memory-safe\") {\n        balanceDelta := or(shl(128, _amount0), and(sub(shl(128, 1), 1), _amount1))\n    }\n}\n\nfunction add(BalanceDelta a, BalanceDelta b) pure returns (BalanceDelta) {\n    int256 res0;\n    int256 res1;\n    assembly (\"memory-safe\") {\n        let a0 := sar(128, a)\n        let a1 := signextend(15, a)\n        let b0 := sar(128, b)\n        let b1 := signextend(15, b)\n        res0 := add(a0, b0)\n        res1 := add(a1, b1)\n    }\n    return toBalanceDelta(res0.toInt128(), res1.toInt128());\n}\n\nfunction sub(BalanceDelta a, BalanceDelta b) pure returns (BalanceDelta) {\n    int256 res0;\n    int256 res1;\n    assembly (\"memory-safe\") {\n        let a0 := sar(128, a)\n        let a1 := signextend(15, a)\n        let b0 := sar(128, b)\n        let b1 := signextend(15, b)\n        res0 := sub(a0, b0)\n        res1 := sub(a1, b1)\n    }\n    return toBalanceDelta(res0.toInt128(), res1.toInt128());\n}\n\nfunction eq(BalanceDelta a, BalanceDelta b) pure returns (bool) {\n    return BalanceDelta.unwrap(a) == BalanceDelta.unwrap(b);\n}\n\nfunction neq(BalanceDelta a, BalanceDelta b) pure returns (bool) {\n    return BalanceDelta.unwrap(a) != BalanceDelta.unwrap(b);\n}\n\n/// @notice Library for getting the amount0 and amount1 deltas from the BalanceDelta type\nlibrary BalanceDeltaLibrary {\n    /// @notice A BalanceDelta of 0\n    BalanceDelta public constant ZERO_DELTA = BalanceDelta.wrap(0);\n\n    function amount0(BalanceDelta balanceDelta) internal pure returns (int128 _amount0) {\n        assembly (\"memory-safe\") {\n            _amount0 := sar(128, balanceDelta)\n        }\n    }\n\n    function amount1(BalanceDelta balanceDelta) internal pure returns (int128 _amount1) {\n        assembly (\"memory-safe\") {\n            _amount1 := signextend(15, balanceDelta)\n        }\n    }\n}\n"
			},
			"UniswapV4/interfaces/IProtocolFees.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {Currency} from \"../types/Currency.sol\";\nimport {PoolId} from \"../types/PoolId.sol\";\nimport {PoolKey} from \"../types/PoolKey.sol\";\n\n/// @notice Interface for all protocol-fee related functions in the pool manager\ninterface IProtocolFees {\n    /// @notice Thrown when protocol fee is set too high\n    error ProtocolFeeTooLarge(uint24 fee);\n\n    /// @notice Thrown when collectProtocolFees or setProtocolFee is not called by the controller.\n    error InvalidCaller();\n\n    /// @notice Thrown when collectProtocolFees is attempted on a token that is synced.\n    error ProtocolFeeCurrencySynced();\n\n    /// @notice Emitted when the protocol fee controller address is updated in setProtocolFeeController.\n    event ProtocolFeeControllerUpdated(address indexed protocolFeeController);\n\n    /// @notice Emitted when the protocol fee is updated for a pool.\n    event ProtocolFeeUpdated(PoolId indexed id, uint24 protocolFee);\n\n    /// @notice Given a currency address, returns the protocol fees accrued in that currency\n    /// @param currency The currency to check\n    /// @return amount The amount of protocol fees accrued in the currency\n    function protocolFeesAccrued(Currency currency) external view returns (uint256 amount);\n\n    /// @notice Sets the protocol fee for the given pool\n    /// @param key The key of the pool to set a protocol fee for\n    /// @param newProtocolFee The fee to set\n    function setProtocolFee(PoolKey memory key, uint24 newProtocolFee) external;\n\n    /// @notice Sets the protocol fee controller\n    /// @param controller The new protocol fee controller\n    function setProtocolFeeController(address controller) external;\n\n    /// @notice Collects the protocol fees for a given recipient and currency, returning the amount collected\n    /// @dev This will revert if the contract is unlocked\n    /// @param recipient The address to receive the protocol fees\n    /// @param currency The currency to withdraw\n    /// @param amount The amount of currency to withdraw\n    /// @return amountCollected The amount of currency successfully withdrawn\n    function collectProtocolFees(address recipient, Currency currency, uint256 amount)\n        external\n        returns (uint256 amountCollected);\n\n    /// @notice Returns the current protocol fee controller address\n    /// @return address The current protocol fee controller address\n    function protocolFeeController() external view returns (address);\n}\n"
			},
			"UniswapV4/interfaces/external/IERC6909Claims.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @notice Interface for claims over a contract balance, wrapped as a ERC6909\ninterface IERC6909Claims {\n    /*//////////////////////////////////////////////////////////////\n                                 EVENTS\n    //////////////////////////////////////////////////////////////*/\n\n    event OperatorSet(address indexed owner, address indexed operator, bool approved);\n\n    event Approval(address indexed owner, address indexed spender, uint256 indexed id, uint256 amount);\n\n    event Transfer(address caller, address indexed from, address indexed to, uint256 indexed id, uint256 amount);\n\n    /*//////////////////////////////////////////////////////////////\n                                 FUNCTIONS\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Owner balance of an id.\n    /// @param owner The address of the owner.\n    /// @param id The id of the token.\n    /// @return amount The balance of the token.\n    function balanceOf(address owner, uint256 id) external view returns (uint256 amount);\n\n    /// @notice Spender allowance of an id.\n    /// @param owner The address of the owner.\n    /// @param spender The address of the spender.\n    /// @param id The id of the token.\n    /// @return amount The allowance of the token.\n    function allowance(address owner, address spender, uint256 id) external view returns (uint256 amount);\n\n    /// @notice Checks if a spender is approved by an owner as an operator\n    /// @param owner The address of the owner.\n    /// @param spender The address of the spender.\n    /// @return approved The approval status.\n    function isOperator(address owner, address spender) external view returns (bool approved);\n\n    /// @notice Transfers an amount of an id from the caller to a receiver.\n    /// @param receiver The address of the receiver.\n    /// @param id The id of the token.\n    /// @param amount The amount of the token.\n    /// @return bool True, always, unless the function reverts\n    function transfer(address receiver, uint256 id, uint256 amount) external returns (bool);\n\n    /// @notice Transfers an amount of an id from a sender to a receiver.\n    /// @param sender The address of the sender.\n    /// @param receiver The address of the receiver.\n    /// @param id The id of the token.\n    /// @param amount The amount of the token.\n    /// @return bool True, always, unless the function reverts\n    function transferFrom(address sender, address receiver, uint256 id, uint256 amount) external returns (bool);\n\n    /// @notice Approves an amount of an id to a spender.\n    /// @param spender The address of the spender.\n    /// @param id The id of the token.\n    /// @param amount The amount of the token.\n    /// @return bool True, always\n    function approve(address spender, uint256 id, uint256 amount) external returns (bool);\n\n    /// @notice Sets or removes an operator for the caller.\n    /// @param operator The address of the operator.\n    /// @param approved The approval status.\n    /// @return bool True, always\n    function setOperator(address operator, bool approved) external returns (bool);\n}\n"
			},
			"UniswapV4/types/BeforeSwapDelta.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// Return type of the beforeSwap hook.\n// Upper 128 bits is the delta in specified tokens. Lower 128 bits is delta in unspecified tokens (to match the afterSwap hook)\ntype BeforeSwapDelta is int256;\n\n// Creates a BeforeSwapDelta from specified and unspecified\nfunction toBeforeSwapDelta(int128 deltaSpecified, int128 deltaUnspecified)\n    pure\n    returns (BeforeSwapDelta beforeSwapDelta)\n{\n    assembly (\"memory-safe\") {\n        beforeSwapDelta := or(shl(128, deltaSpecified), and(sub(shl(128, 1), 1), deltaUnspecified))\n    }\n}\n\n/// @notice Library for getting the specified and unspecified deltas from the BeforeSwapDelta type\nlibrary BeforeSwapDeltaLibrary {\n    /// @notice A BeforeSwapDelta of 0\n    BeforeSwapDelta public constant ZERO_DELTA = BeforeSwapDelta.wrap(0);\n\n    /// extracts int128 from the upper 128 bits of the BeforeSwapDelta\n    /// returned by beforeSwap\n    function getSpecifiedDelta(BeforeSwapDelta delta) internal pure returns (int128 deltaSpecified) {\n        assembly (\"memory-safe\") {\n            deltaSpecified := sar(128, delta)\n        }\n    }\n\n    /// extracts int128 from the lower 128 bits of the BeforeSwapDelta\n    /// returned by beforeSwap and afterSwap\n    function getUnspecifiedDelta(BeforeSwapDelta delta) internal pure returns (int128 deltaUnspecified) {\n        assembly (\"memory-safe\") {\n            deltaUnspecified := signextend(15, delta)\n        }\n    }\n}\n"
			},
			"UniswapV4/libraries/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {CustomRevert} from \"./CustomRevert.sol\";\n\n/// @title Safe casting methods\n/// @notice Contains methods for safely casting between types\nlibrary SafeCast {\n    using CustomRevert for bytes4;\n\n    error SafeCastOverflow();\n\n    /// @notice Cast a uint256 to a uint160, revert on overflow\n    /// @param x The uint256 to be downcasted\n    /// @return y The downcasted integer, now type uint160\n    function toUint160(uint256 x) internal pure returns (uint160 y) {\n        y = uint160(x);\n        if (y != x) SafeCastOverflow.selector.revertWith();\n    }\n\n    /// @notice Cast a uint256 to a uint128, revert on overflow\n    /// @param x The uint256 to be downcasted\n    /// @return y The downcasted integer, now type uint128\n    function toUint128(uint256 x) internal pure returns (uint128 y) {\n        y = uint128(x);\n        if (x != y) SafeCastOverflow.selector.revertWith();\n    }\n\n    /// @notice Cast a int128 to a uint128, revert on overflow or underflow\n    /// @param x The int128 to be casted\n    /// @return y The casted integer, now type uint128\n    function toUint128(int128 x) internal pure returns (uint128 y) {\n        if (x < 0) SafeCastOverflow.selector.revertWith();\n        y = uint128(x);\n    }\n\n    /// @notice Cast a int256 to a int128, revert on overflow or underflow\n    /// @param x The int256 to be downcasted\n    /// @return y The downcasted integer, now type int128\n    function toInt128(int256 x) internal pure returns (int128 y) {\n        y = int128(x);\n        if (y != x) SafeCastOverflow.selector.revertWith();\n    }\n\n    /// @notice Cast a uint256 to a int256, revert on overflow\n    /// @param x The uint256 to be casted\n    /// @return y The casted integer, now type int256\n    function toInt256(uint256 x) internal pure returns (int256 y) {\n        y = int256(x);\n        if (y < 0) SafeCastOverflow.selector.revertWith();\n    }\n\n    /// @notice Cast a uint256 to a int128, revert on overflow\n    /// @param x The uint256 to be downcasted\n    /// @return The downcasted integer, now type int128\n    function toInt128(uint256 x) internal pure returns (int128) {\n        if (x >= 1 << 127) SafeCastOverflow.selector.revertWith();\n        return int128(int256(x));\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"UniswapV4/interfaces/IExtsload.sol": {
				"IExtsload": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "extsload",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "value",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "startSlot",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "nSlots",
									"type": "uint256"
								}
							],
							"name": "extsload",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "values",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "slots",
									"type": "bytes32[]"
								}
							],
							"name": "extsload",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "values",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"extsload(bytes32)": {
								"params": {
									"slot": "Key of slot to sload"
								},
								"returns": {
									"value": "The value of the slot as bytes32"
								}
							},
							"extsload(bytes32,uint256)": {
								"params": {
									"nSlots": "Number of slots to load into return value",
									"startSlot": "Key of slot to start sloading from"
								},
								"returns": {
									"values": "List of loaded values."
								}
							},
							"extsload(bytes32[])": {
								"params": {
									"slots": "List of slots to SLOAD from."
								},
								"returns": {
									"values": "List of loaded values."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"extsload(bytes32)": "1e2eaeaf",
							"extsload(bytes32,uint256)": "35fd631a",
							"extsload(bytes32[])": "dbd035ff"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"startSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nSlots\",\"type\":\"uint256\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slots\",\"type\":\"bytes32[]\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"extsload(bytes32)\":{\"params\":{\"slot\":\"Key of slot to sload\"},\"returns\":{\"value\":\"The value of the slot as bytes32\"}},\"extsload(bytes32,uint256)\":{\"params\":{\"nSlots\":\"Number of slots to load into return value\",\"startSlot\":\"Key of slot to start sloading from\"},\"returns\":{\"values\":\"List of loaded values.\"}},\"extsload(bytes32[])\":{\"params\":{\"slots\":\"List of slots to SLOAD from.\"},\"returns\":{\"values\":\"List of loaded values.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"extsload(bytes32)\":{\"notice\":\"Called by external contracts to access granular pool state\"},\"extsload(bytes32,uint256)\":{\"notice\":\"Called by external contracts to access granular pool state\"},\"extsload(bytes32[])\":{\"notice\":\"Called by external contracts to access sparse pool state\"}},\"notice\":\"Interface for functions to access any storage slot in a contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"UniswapV4/interfaces/IExtsload.sol\":\"IExtsload\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"UniswapV4/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"extsload(bytes32)": {
								"notice": "Called by external contracts to access granular pool state"
							},
							"extsload(bytes32,uint256)": {
								"notice": "Called by external contracts to access granular pool state"
							},
							"extsload(bytes32[])": {
								"notice": "Called by external contracts to access sparse pool state"
							}
						},
						"notice": "Interface for functions to access any storage slot in a contract",
						"version": 1
					}
				}
			},
			"UniswapV4/interfaces/IExttload.sol": {
				"IExttload": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "slots",
									"type": "bytes32[]"
								}
							],
							"name": "exttload",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "values",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "exttload",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "value",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exttload(bytes32)": {
								"params": {
									"slot": "Key of slot to tload"
								},
								"returns": {
									"value": "The value of the slot as bytes32"
								}
							},
							"exttload(bytes32[])": {
								"params": {
									"slots": "List of slots to tload"
								},
								"returns": {
									"values": "List of loaded values"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exttload(bytes32)": "f135baaa",
							"exttload(bytes32[])": "9bf6645f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slots\",\"type\":\"bytes32[]\"}],\"name\":\"exttload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"exttload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exttload(bytes32)\":{\"params\":{\"slot\":\"Key of slot to tload\"},\"returns\":{\"value\":\"The value of the slot as bytes32\"}},\"exttload(bytes32[])\":{\"params\":{\"slots\":\"List of slots to tload\"},\"returns\":{\"values\":\"List of loaded values\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exttload(bytes32)\":{\"notice\":\"Called by external contracts to access transient storage of the contract\"},\"exttload(bytes32[])\":{\"notice\":\"Called by external contracts to access sparse transient pool state\"}},\"notice\":\"Interface for functions to access any transient storage slot in a contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"UniswapV4/interfaces/IExttload.sol\":\"IExttload\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"UniswapV4/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exttload(bytes32)": {
								"notice": "Called by external contracts to access transient storage of the contract"
							},
							"exttload(bytes32[])": {
								"notice": "Called by external contracts to access sparse transient pool state"
							}
						},
						"notice": "Interface for functions to access any transient storage slot in a contract",
						"version": 1
					}
				}
			},
			"UniswapV4/interfaces/IHooks.sol": {
				"IHooks": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "int24",
											"name": "tickLower",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickUpper",
											"type": "int24"
										},
										{
											"internalType": "int256",
											"name": "liquidityDelta",
											"type": "int256"
										},
										{
											"internalType": "bytes32",
											"name": "salt",
											"type": "bytes32"
										}
									],
									"internalType": "struct IPoolManager.ModifyLiquidityParams",
									"name": "params",
									"type": "tuple"
								},
								{
									"internalType": "BalanceDelta",
									"name": "delta",
									"type": "int256"
								},
								{
									"internalType": "BalanceDelta",
									"name": "feesAccrued",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "hookData",
									"type": "bytes"
								}
							],
							"name": "afterAddLiquidity",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								},
								{
									"internalType": "BalanceDelta",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "hookData",
									"type": "bytes"
								}
							],
							"name": "afterDonate",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "afterInitialize",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "int24",
											"name": "tickLower",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickUpper",
											"type": "int24"
										},
										{
											"internalType": "int256",
											"name": "liquidityDelta",
											"type": "int256"
										},
										{
											"internalType": "bytes32",
											"name": "salt",
											"type": "bytes32"
										}
									],
									"internalType": "struct IPoolManager.ModifyLiquidityParams",
									"name": "params",
									"type": "tuple"
								},
								{
									"internalType": "BalanceDelta",
									"name": "delta",
									"type": "int256"
								},
								{
									"internalType": "BalanceDelta",
									"name": "feesAccrued",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "hookData",
									"type": "bytes"
								}
							],
							"name": "afterRemoveLiquidity",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								},
								{
									"internalType": "BalanceDelta",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "zeroForOne",
											"type": "bool"
										},
										{
											"internalType": "int256",
											"name": "amountSpecified",
											"type": "int256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct IPoolManager.SwapParams",
									"name": "params",
									"type": "tuple"
								},
								{
									"internalType": "BalanceDelta",
									"name": "delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "hookData",
									"type": "bytes"
								}
							],
							"name": "afterSwap",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								},
								{
									"internalType": "int128",
									"name": "",
									"type": "int128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "int24",
											"name": "tickLower",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickUpper",
											"type": "int24"
										},
										{
											"internalType": "int256",
											"name": "liquidityDelta",
											"type": "int256"
										},
										{
											"internalType": "bytes32",
											"name": "salt",
											"type": "bytes32"
										}
									],
									"internalType": "struct IPoolManager.ModifyLiquidityParams",
									"name": "params",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "hookData",
									"type": "bytes"
								}
							],
							"name": "beforeAddLiquidity",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "hookData",
									"type": "bytes"
								}
							],
							"name": "beforeDonate",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "beforeInitialize",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "int24",
											"name": "tickLower",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickUpper",
											"type": "int24"
										},
										{
											"internalType": "int256",
											"name": "liquidityDelta",
											"type": "int256"
										},
										{
											"internalType": "bytes32",
											"name": "salt",
											"type": "bytes32"
										}
									],
									"internalType": "struct IPoolManager.ModifyLiquidityParams",
									"name": "params",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "hookData",
									"type": "bytes"
								}
							],
							"name": "beforeRemoveLiquidity",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "zeroForOne",
											"type": "bool"
										},
										{
											"internalType": "int256",
											"name": "amountSpecified",
											"type": "int256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct IPoolManager.SwapParams",
									"name": "params",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "hookData",
									"type": "bytes"
								}
							],
							"name": "beforeSwap",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								},
								{
									"internalType": "BeforeSwapDelta",
									"name": "",
									"type": "int256"
								},
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Should only be callable by the v4 PoolManager.",
						"kind": "dev",
						"methods": {
							"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
								"params": {
									"delta": "The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta",
									"feesAccrued": "The fees accrued since the last time fees were collected from this position",
									"hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook",
									"key": "The key for the pool",
									"params": "The parameters for adding liquidity",
									"sender": "The initial msg.sender for the add liquidity call"
								},
								"returns": {
									"_0": "bytes4 The function selector for the hook",
									"_1": "BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
								}
							},
							"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
								"params": {
									"amount0": "The amount of token0 being donated",
									"amount1": "The amount of token1 being donated",
									"hookData": "Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook",
									"key": "The key for the pool",
									"sender": "The initial msg.sender for the donate call"
								},
								"returns": {
									"_0": "bytes4 The function selector for the hook"
								}
							},
							"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)": {
								"params": {
									"key": "The key for the pool being initialized",
									"sender": "The initial msg.sender for the initialize call",
									"sqrtPriceX96": "The sqrt(price) of the pool as a Q64.96",
									"tick": "The current tick after the state of a pool is initialized"
								},
								"returns": {
									"_0": "bytes4 The function selector for the hook"
								}
							},
							"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
								"params": {
									"delta": "The caller's balance delta after removing liquidity; the sum of principal delta, fees accrued, and hook delta",
									"feesAccrued": "The fees accrued since the last time fees were collected from this position",
									"hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook",
									"key": "The key for the pool",
									"params": "The parameters for removing liquidity",
									"sender": "The initial msg.sender for the remove liquidity call"
								},
								"returns": {
									"_0": "bytes4 The function selector for the hook",
									"_1": "BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
								}
							},
							"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)": {
								"params": {
									"delta": "The amount owed to the caller (positive) or owed to the pool (negative)",
									"hookData": "Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook",
									"key": "The key for the pool",
									"params": "The parameters for the swap",
									"sender": "The initial msg.sender for the swap call"
								},
								"returns": {
									"_0": "bytes4 The function selector for the hook",
									"_1": "int128 The hook's delta in unspecified currency. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
								}
							},
							"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
								"params": {
									"hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook",
									"key": "The key for the pool",
									"params": "The parameters for adding liquidity",
									"sender": "The initial msg.sender for the add liquidity call"
								},
								"returns": {
									"_0": "bytes4 The function selector for the hook"
								}
							},
							"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
								"params": {
									"amount0": "The amount of token0 being donated",
									"amount1": "The amount of token1 being donated",
									"hookData": "Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook",
									"key": "The key for the pool",
									"sender": "The initial msg.sender for the donate call"
								},
								"returns": {
									"_0": "bytes4 The function selector for the hook"
								}
							},
							"beforeInitialize(address,(address,address,uint24,int24,address),uint160)": {
								"params": {
									"key": "The key for the pool being initialized",
									"sender": "The initial msg.sender for the initialize call",
									"sqrtPriceX96": "The sqrt(price) of the pool as a Q64.96"
								},
								"returns": {
									"_0": "bytes4 The function selector for the hook"
								}
							},
							"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
								"params": {
									"hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook",
									"key": "The key for the pool",
									"params": "The parameters for removing liquidity",
									"sender": "The initial msg.sender for the remove liquidity call"
								},
								"returns": {
									"_0": "bytes4 The function selector for the hook"
								}
							},
							"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
								"params": {
									"hookData": "Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook",
									"key": "The key for the pool",
									"params": "The parameters for the swap",
									"sender": "The initial msg.sender for the swap call"
								},
								"returns": {
									"_0": "bytes4 The function selector for the hook",
									"_1": "BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency",
									"_2": "uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": "9f063efc",
							"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": "e1b4af69",
							"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)": "6fe7e6eb",
							"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": "6c2bbe7e",
							"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)": "b47b2fb1",
							"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "259982e5",
							"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": "b6a8b0fa",
							"beforeInitialize(address,(address,address,uint24,int24,address),uint160)": "dc98354e",
							"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "21d0ee70",
							"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": "575e24b4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"feesAccrued\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"afterInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"feesAccrued\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"beforeInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BeforeSwapDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Should only be callable by the v4 PoolManager.\",\"kind\":\"dev\",\"methods\":{\"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"delta\":\"The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta\",\"feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for adding liquidity\",\"sender\":\"The initial msg.sender for the add liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)\":{\"params\":{\"key\":\"The key for the pool being initialized\",\"sender\":\"The initial msg.sender for the initialize call\",\"sqrtPriceX96\":\"The sqrt(price) of the pool as a Q64.96\",\"tick\":\"The current tick after the state of a pool is initialized\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"delta\":\"The caller's balance delta after removing liquidity; the sum of principal delta, fees accrued, and hook delta\",\"feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)\":{\"params\":{\"delta\":\"The amount owed to the caller (positive) or owed to the pool (negative)\",\"hookData\":\"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for the swap\",\"sender\":\"The initial msg.sender for the swap call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"int128 The hook's delta in unspecified currency. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for adding liquidity\",\"sender\":\"The initial msg.sender for the add liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeInitialize(address,(address,address,uint24,int24,address),uint160)\":{\"params\":{\"key\":\"The key for the pool being initialized\",\"sender\":\"The initial msg.sender for the initialize call\",\"sqrtPriceX96\":\"The sqrt(price) of the pool as a Q64.96\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for the swap\",\"sender\":\"The initial msg.sender for the swap call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\",\"_2\":\"uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"The hook called after liquidity is added\"},\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called after donate\"},\"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)\":{\"notice\":\"The hook called after the state of a pool is initialized\"},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"The hook called after liquidity is removed\"},\"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)\":{\"notice\":\"The hook called after a swap\"},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is added\"},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called before donate\"},\"beforeInitialize(address,(address,address,uint24,int24,address),uint160)\":{\"notice\":\"The hook called before the state of a pool is initialized\"},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is removed\"},\"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"notice\":\"The hook called before a swap\"}},\"notice\":\"V4 decides whether to invoke specific hooks by inspecting the least significant bits of the address that the hooks contract is deployed to. For example, a hooks contract deployed to address: 0x0000000000000000000000000000000000002400 has the lowest bits '10 0100 0000 0000' which would cause the 'before initialize' and 'after add liquidity' hooks to be used. See the Hooks library for the full spec.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"UniswapV4/interfaces/IHooks.sol\":\"IHooks\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"UniswapV4/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"UniswapV4/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"UniswapV4/interfaces/IHooks.sol\":{\"keccak256\":\"0x4c9571aed0c2b6ef11832545554fc11ffdb03746daaf5c73683c00600bfc7ec0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e78b34b58ce9de91b91943b4f3cc3ce121d0b151e123e8a600ac5ef64d91db6c\",\"dweb:/ipfs/QmRkaQnPCYwLrXgbpGujJTx32PaZK63KSPJJV1XmnQuCMb\"]},\"UniswapV4/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x3534f00531038e77ab8a7fc4d0a6e0993ee53fb7a396b1324ad917318ea46cea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a4a7e771828dc40848485b568a1cf514f553ace6653f4f4d1ad3f3e9cdb6c27\",\"dweb:/ipfs/QmTjzQ7KVYnrEWtxPER2E4MXzycgcznfzSDsZtd5turk5V\"]},\"UniswapV4/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"UniswapV4/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"UniswapV4/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"UniswapV4/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"UniswapV4/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"UniswapV4/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"UniswapV4/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"UniswapV4/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"UniswapV4/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"UniswapV4/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
								"notice": "The hook called after liquidity is added"
							},
							"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
								"notice": "The hook called after donate"
							},
							"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)": {
								"notice": "The hook called after the state of a pool is initialized"
							},
							"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
								"notice": "The hook called after liquidity is removed"
							},
							"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)": {
								"notice": "The hook called after a swap"
							},
							"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
								"notice": "The hook called before liquidity is added"
							},
							"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
								"notice": "The hook called before donate"
							},
							"beforeInitialize(address,(address,address,uint24,int24,address),uint160)": {
								"notice": "The hook called before the state of a pool is initialized"
							},
							"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
								"notice": "The hook called before liquidity is removed"
							},
							"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
								"notice": "The hook called before a swap"
							}
						},
						"notice": "V4 decides whether to invoke specific hooks by inspecting the least significant bits of the address that the hooks contract is deployed to. For example, a hooks contract deployed to address: 0x0000000000000000000000000000000000002400 has the lowest bits '10 0100 0000 0000' which would cause the 'before initialize' and 'after add liquidity' hooks to be used. See the Hooks library for the full spec.",
						"version": 1
					}
				}
			},
			"UniswapV4/interfaces/IImmutableState.sol": {
				"IImmutableState": {
					"abi": [
						{
							"inputs": [],
							"name": "poolManager",
							"outputs": [
								{
									"internalType": "contract IPoolManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "IImmutableState",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"poolManager()": "dc4c90d3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"poolManager\",\"outputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"IImmutableState\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"poolManager()\":{\"notice\":\"The Uniswap v4 PoolManager contract\"}},\"notice\":\"Interface for the ImmutableState contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"UniswapV4/interfaces/IImmutableState.sol\":\"IImmutableState\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"UniswapV4/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"UniswapV4/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"UniswapV4/interfaces/IHooks.sol\":{\"keccak256\":\"0x4c9571aed0c2b6ef11832545554fc11ffdb03746daaf5c73683c00600bfc7ec0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e78b34b58ce9de91b91943b4f3cc3ce121d0b151e123e8a600ac5ef64d91db6c\",\"dweb:/ipfs/QmRkaQnPCYwLrXgbpGujJTx32PaZK63KSPJJV1XmnQuCMb\"]},\"UniswapV4/interfaces/IImmutableState.sol\":{\"keccak256\":\"0xafe6ac5a67b215482660136614ff16fad42ef6f18fd184d428aa0393dbce1b79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da22cf54fdd7f6e9876e74a29b6a77260d3a6d3bcfc462692c3f0f715bb30480\",\"dweb:/ipfs/QmYheBbdhWhWHqRnkgbvd3NAkgHRuDhiVJzbLNmV1TGQCQ\"]},\"UniswapV4/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x3534f00531038e77ab8a7fc4d0a6e0993ee53fb7a396b1324ad917318ea46cea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a4a7e771828dc40848485b568a1cf514f553ace6653f4f4d1ad3f3e9cdb6c27\",\"dweb:/ipfs/QmTjzQ7KVYnrEWtxPER2E4MXzycgcznfzSDsZtd5turk5V\"]},\"UniswapV4/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"UniswapV4/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"UniswapV4/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"UniswapV4/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"UniswapV4/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"UniswapV4/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"UniswapV4/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"UniswapV4/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"UniswapV4/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"UniswapV4/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"poolManager()": {
								"notice": "The Uniswap v4 PoolManager contract"
							}
						},
						"notice": "Interface for the ImmutableState contract",
						"version": 1
					}
				}
			},
			"UniswapV4/interfaces/IPoolManager.sol": {
				"IPoolManager": {
					"abi": [
						{
							"inputs": [],
							"name": "AlreadyUnlocked",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "currency0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "currency1",
									"type": "address"
								}
							],
							"name": "CurrenciesOutOfOrderOrEqual",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CurrencyNotSettled",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ManagerLocked",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MustClearExactPositiveDelta",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NonzeroNativeValue",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PoolNotInitialized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ProtocolFeeCurrencySynced",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "ProtocolFeeTooLarge",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SwapAmountCannotBeZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "TickSpacingTooLarge",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "TickSpacingTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UnauthorizedDynamicLPFeeUpdate",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "PoolId",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Donate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "PoolId",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "Currency",
									"name": "currency0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "Currency",
									"name": "currency1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "contract IHooks",
									"name": "hooks",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "PoolId",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "liquidityDelta",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								}
							],
							"name": "ModifyLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "OperatorSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "protocolFeeController",
									"type": "address"
								}
							],
							"name": "ProtocolFeeControllerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "PoolId",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint24",
									"name": "protocolFee",
									"type": "uint24"
								}
							],
							"name": "ProtocolFeeUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "PoolId",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int128",
									"name": "amount0",
									"type": "int128"
								},
								{
									"indexed": false,
									"internalType": "int128",
									"name": "amount1",
									"type": "int128"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "Currency",
									"name": "currency",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "clear",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "Currency",
									"name": "currency",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "collectProtocolFees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountCollected",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "hookData",
									"type": "bytes"
								}
							],
							"name": "donate",
							"outputs": [
								{
									"internalType": "BalanceDelta",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "extsload",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "value",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "startSlot",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "nSlots",
									"type": "uint256"
								}
							],
							"name": "extsload",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "values",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "slots",
									"type": "bytes32[]"
								}
							],
							"name": "extsload",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "values",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "slots",
									"type": "bytes32[]"
								}
							],
							"name": "exttload",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "values",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "exttload",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "value",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "isOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "int24",
											"name": "tickLower",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickUpper",
											"type": "int24"
										},
										{
											"internalType": "int256",
											"name": "liquidityDelta",
											"type": "int256"
										},
										{
											"internalType": "bytes32",
											"name": "salt",
											"type": "bytes32"
										}
									],
									"internalType": "struct IPoolManager.ModifyLiquidityParams",
									"name": "params",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "hookData",
									"type": "bytes"
								}
							],
							"name": "modifyLiquidity",
							"outputs": [
								{
									"internalType": "BalanceDelta",
									"name": "callerDelta",
									"type": "int256"
								},
								{
									"internalType": "BalanceDelta",
									"name": "feesAccrued",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFeeController",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "Currency",
									"name": "currency",
									"type": "address"
								}
							],
							"name": "protocolFeesAccrued",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"internalType": "uint24",
									"name": "newProtocolFee",
									"type": "uint24"
								}
							],
							"name": "setProtocolFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "controller",
									"type": "address"
								}
							],
							"name": "setProtocolFeeController",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "settle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "paid",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "settleFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "paid",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "zeroForOne",
											"type": "bool"
										},
										{
											"internalType": "int256",
											"name": "amountSpecified",
											"type": "int256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct IPoolManager.SwapParams",
									"name": "params",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "hookData",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "BalanceDelta",
									"name": "swapDelta",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "Currency",
									"name": "currency",
									"type": "address"
								}
							],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "Currency",
									"name": "currency",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "take",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "unlock",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"internalType": "uint24",
									"name": "newDynamicLPFee",
									"type": "uint24"
								}
							],
							"name": "updateDynamicLPFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Donate(bytes32,address,uint256,uint256)": {
								"params": {
									"amount0": "The amount donated in currency0",
									"amount1": "The amount donated in currency1",
									"id": "The abi encoded hash of the pool key struct for the pool that was donated to",
									"sender": "The address that initiated the donate call"
								}
							},
							"Initialize(bytes32,address,address,uint24,int24,address,uint160,int24)": {
								"params": {
									"currency0": "The first currency of the pool by address sort order",
									"currency1": "The second currency of the pool by address sort order",
									"fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
									"hooks": "The hooks contract address for the pool, or address(0) if none",
									"id": "The abi encoded hash of the pool key struct for the new pool",
									"sqrtPriceX96": "The price of the pool on initialization",
									"tick": "The initial tick of the pool corresponding to the initialized price",
									"tickSpacing": "The minimum number of ticks between initialized ticks"
								}
							},
							"ModifyLiquidity(bytes32,address,int24,int24,int256,bytes32)": {
								"params": {
									"id": "The abi encoded hash of the pool key struct for the pool that was modified",
									"liquidityDelta": "The amount of liquidity that was added or removed",
									"salt": "The extra data to make positions unique",
									"sender": "The address that modified the pool",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Swap(bytes32,address,int128,int128,uint160,uint128,int24,uint24)": {
								"params": {
									"amount0": "The delta of the currency0 balance of the pool",
									"amount1": "The delta of the currency1 balance of the pool",
									"fee": "The swap fee in hundredths of a bip",
									"id": "The abi encoded hash of the pool key struct for the pool that was modified",
									"liquidity": "The liquidity of the pool after the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of the price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address,uint256)": {
								"params": {
									"id": "The id of the token.",
									"owner": "The address of the owner.",
									"spender": "The address of the spender."
								},
								"returns": {
									"amount": "The allowance of the token."
								}
							},
							"approve(address,uint256,uint256)": {
								"params": {
									"amount": "The amount of the token.",
									"id": "The id of the token.",
									"spender": "The address of the spender."
								},
								"returns": {
									"_0": "bool True, always"
								}
							},
							"balanceOf(address,uint256)": {
								"params": {
									"id": "The id of the token.",
									"owner": "The address of the owner."
								},
								"returns": {
									"amount": "The balance of the token."
								}
							},
							"burn(address,uint256,uint256)": {
								"details": "The id is converted to a uint160 to correspond to a currency address If the upper 12 bytes are not 0, they will be 0-ed out",
								"params": {
									"amount": "The amount of currency to burn",
									"from": "The address to burn the tokens from",
									"id": "The currency address to burn from ERC6909s, as a uint256"
								}
							},
							"clear(address,uint256)": {
								"details": "This could be used to clear a balance that is considered dust. Additionally, the amount must be the exact positive balance. This is to enforce that the caller is aware of the amount being cleared."
							},
							"collectProtocolFees(address,address,uint256)": {
								"details": "This will revert if the contract is unlocked",
								"params": {
									"amount": "The amount of currency to withdraw",
									"currency": "The currency to withdraw",
									"recipient": "The address to receive the protocol fees"
								},
								"returns": {
									"amountCollected": "The amount of currency successfully withdrawn"
								}
							},
							"donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
								"details": "Calls to donate can be frontrun adding just-in-time liquidity, with the aim of receiving a portion donated funds. Donors should keep this in mind when designing donation mechanisms.This function donates to in-range LPs at slot0.tick. In certain edge-cases of the swap algorithm, the `sqrtPrice` of a pool can be at the lower boundary of tick `n`, but the `slot0.tick` of the pool is already `n - 1`. In this case a call to `donate` would donate to tick `n - 1` (slot0.tick) not tick `n` (getTickAtSqrtPrice(slot0.sqrtPriceX96)). Read the comments in `Pool.swap()` for more information about this.",
								"params": {
									"amount0": "The amount of currency0 to donate",
									"amount1": "The amount of currency1 to donate",
									"hookData": "The data to pass through to the donate hooks",
									"key": "The key of the pool to donate to"
								},
								"returns": {
									"_0": "BalanceDelta The delta of the caller after the donate"
								}
							},
							"extsload(bytes32)": {
								"params": {
									"slot": "Key of slot to sload"
								},
								"returns": {
									"value": "The value of the slot as bytes32"
								}
							},
							"extsload(bytes32,uint256)": {
								"params": {
									"nSlots": "Number of slots to load into return value",
									"startSlot": "Key of slot to start sloading from"
								},
								"returns": {
									"values": "List of loaded values."
								}
							},
							"extsload(bytes32[])": {
								"params": {
									"slots": "List of slots to SLOAD from."
								},
								"returns": {
									"values": "List of loaded values."
								}
							},
							"exttload(bytes32)": {
								"params": {
									"slot": "Key of slot to tload"
								},
								"returns": {
									"value": "The value of the slot as bytes32"
								}
							},
							"exttload(bytes32[])": {
								"params": {
									"slots": "List of slots to tload"
								},
								"returns": {
									"values": "List of loaded values"
								}
							},
							"initialize((address,address,uint24,int24,address),uint160)": {
								"details": "A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee",
								"params": {
									"key": "The pool key for the pool to initialize",
									"sqrtPriceX96": "The initial square root price"
								},
								"returns": {
									"tick": "The initial tick of the pool"
								}
							},
							"isOperator(address,address)": {
								"params": {
									"owner": "The address of the owner.",
									"spender": "The address of the spender."
								},
								"returns": {
									"approved": "The approval status."
								}
							},
							"mint(address,uint256,uint256)": {
								"details": "The id is converted to a uint160 to correspond to a currency address If the upper 12 bytes are not 0, they will be 0-ed out",
								"params": {
									"amount": "The amount of currency to mint",
									"id": "The currency address to mint to ERC6909s, as a uint256",
									"to": "The address to mint the tokens to"
								}
							},
							"modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
								"details": "Poke by calling with a zero liquidityDeltaNote that feesAccrued can be artificially inflated by a malicious actor and integrators should be careful using the value For pools with a single liquidity position, actors can donate to themselves to inflate feeGrowthGlobal (and consequently feesAccrued) atomically donating and collecting fees in the same unlockCallback may make the inflated value more extreme",
								"params": {
									"hookData": "The data to pass through to the add/removeLiquidity hooks",
									"key": "The pool to modify liquidity in",
									"params": "The parameters for modifying the liquidity"
								},
								"returns": {
									"callerDelta": "The balance delta of the caller of modifyLiquidity. This is the total of both principal, fee deltas, and hook deltas if applicable",
									"feesAccrued": "The balance delta of the fees generated in the liquidity range. Returned for informational purposes"
								}
							},
							"protocolFeeController()": {
								"returns": {
									"_0": "address The current protocol fee controller address"
								}
							},
							"protocolFeesAccrued(address)": {
								"params": {
									"currency": "The currency to check"
								},
								"returns": {
									"amount": "The amount of protocol fees accrued in the currency"
								}
							},
							"setOperator(address,bool)": {
								"params": {
									"approved": "The approval status.",
									"operator": "The address of the operator."
								},
								"returns": {
									"_0": "bool True, always"
								}
							},
							"setProtocolFee((address,address,uint24,int24,address),uint24)": {
								"params": {
									"key": "The key of the pool to set a protocol fee for",
									"newProtocolFee": "The fee to set"
								}
							},
							"setProtocolFeeController(address)": {
								"params": {
									"controller": "The new protocol fee controller"
								}
							},
							"settle()": {
								"returns": {
									"paid": "The amount of currency settled"
								}
							},
							"settleFor(address)": {
								"params": {
									"recipient": "The address to credit for the payment"
								},
								"returns": {
									"paid": "The amount of currency settled"
								}
							},
							"swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
								"details": "Swapping on low liquidity pools may cause unexpected swap amounts when liquidity available is less than amountSpecified. Additionally note that if interacting with hooks that have the BEFORE_SWAP_RETURNS_DELTA_FLAG or AFTER_SWAP_RETURNS_DELTA_FLAG the hook may alter the swap input/output. Integrators should perform checks on the returned swapDelta.",
								"params": {
									"hookData": "The data to pass through to the swap hooks",
									"key": "The pool to swap in",
									"params": "The parameters for swapping"
								},
								"returns": {
									"swapDelta": "The balance delta of the address swapping"
								}
							},
							"sync(address)": {
								"details": "This MUST be called before any ERC20 tokens are sent into the contract, but can be skipped for native tokens because the amount to settle is determined by the sent value. However, if an ERC20 token has been synced and not settled, and the caller instead wants to settle native funds, this function can be called with the native currency to then be able to settle the native currency"
							},
							"take(address,address,uint256)": {
								"details": "Will revert if the requested amount is not available, consider using `mint` insteadCan also be used as a mechanism for free flash loans",
								"params": {
									"amount": "The amount of currency to withdraw",
									"currency": "The currency to withdraw from the pool manager",
									"to": "The address to withdraw to"
								}
							},
							"transfer(address,uint256,uint256)": {
								"params": {
									"amount": "The amount of the token.",
									"id": "The id of the token.",
									"receiver": "The address of the receiver."
								},
								"returns": {
									"_0": "bool True, always, unless the function reverts"
								}
							},
							"transferFrom(address,address,uint256,uint256)": {
								"params": {
									"amount": "The amount of the token.",
									"id": "The id of the token.",
									"receiver": "The address of the receiver.",
									"sender": "The address of the sender."
								},
								"returns": {
									"_0": "bool True, always, unless the function reverts"
								}
							},
							"unlock(bytes)": {
								"details": "The only functions callable without an unlocking are `initialize` and `updateDynamicLPFee`",
								"params": {
									"data": "Any data to pass to the callback, via `IUnlockCallback(msg.sender).unlockCallback(data)`"
								},
								"returns": {
									"_0": "The data returned by the call to `IUnlockCallback(msg.sender).unlockCallback(data)`"
								}
							},
							"updateDynamicLPFee((address,address,uint24,int24,address),uint24)": {
								"details": "A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee",
								"params": {
									"key": "The key of the pool to update dynamic LP fees for",
									"newDynamicLPFee": "The new dynamic pool LP fee"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address,uint256)": "598af9e7",
							"approve(address,uint256,uint256)": "426a8493",
							"balanceOf(address,uint256)": "00fdd58e",
							"burn(address,uint256,uint256)": "f5298aca",
							"clear(address,uint256)": "80f0b44c",
							"collectProtocolFees(address,address,uint256)": "8161b874",
							"donate((address,address,uint24,int24,address),uint256,uint256,bytes)": "234266d7",
							"extsload(bytes32)": "1e2eaeaf",
							"extsload(bytes32,uint256)": "35fd631a",
							"extsload(bytes32[])": "dbd035ff",
							"exttload(bytes32)": "f135baaa",
							"exttload(bytes32[])": "9bf6645f",
							"initialize((address,address,uint24,int24,address),uint160)": "6276cbbe",
							"isOperator(address,address)": "b6363cf2",
							"mint(address,uint256,uint256)": "156e29f6",
							"modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "5a6bcfda",
							"protocolFeeController()": "f02de3b2",
							"protocolFeesAccrued(address)": "97e8cd4e",
							"setOperator(address,bool)": "558a7297",
							"setProtocolFee((address,address,uint24,int24,address),uint24)": "7e87ce7d",
							"setProtocolFeeController(address)": "2d771389",
							"settle()": "11da60b4",
							"settleFor(address)": "3dd45adb",
							"swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": "f3cd914c",
							"sync(address)": "a5841194",
							"take(address,address,uint256)": "0b0d9c09",
							"transfer(address,uint256,uint256)": "095bcdb6",
							"transferFrom(address,address,uint256,uint256)": "fe99049a",
							"unlock(bytes)": "48c89491",
							"updateDynamicLPFee((address,address,uint24,int24,address),uint24)": "52759651"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyUnlocked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency1\",\"type\":\"address\"}],\"name\":\"CurrenciesOutOfOrderOrEqual\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrencyNotSettled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ManagerLocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MustClearExactPositiveDelta\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonzeroNativeValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolNotInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProtocolFeeCurrencySynced\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"ProtocolFeeTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapAmountCannotBeZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"TickSpacingTooLarge\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"TickSpacingTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedDynamicLPFeeUpdate\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Donate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"ModifyLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"OperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"protocolFeeController\",\"type\":\"address\"}],\"name\":\"ProtocolFeeControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"protocolFee\",\"type\":\"uint24\"}],\"name\":\"ProtocolFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int128\",\"name\":\"amount0\",\"type\":\"int128\"},{\"indexed\":false,\"internalType\":\"int128\",\"name\":\"amount1\",\"type\":\"int128\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"clear\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"collectProtocolFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountCollected\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"donate\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"startSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nSlots\",\"type\":\"uint256\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slots\",\"type\":\"bytes32[]\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slots\",\"type\":\"bytes32[]\"}],\"name\":\"exttload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"exttload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"modifyLiquidity\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"callerDelta\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"feesAccrued\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"protocolFeesAccrued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint24\",\"name\":\"newProtocolFee\",\"type\":\"uint24\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"setProtocolFeeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"settleFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"swapDelta\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"take\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"unlock\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint24\",\"name\":\"newDynamicLPFee\",\"type\":\"uint24\"}],\"name\":\"updateDynamicLPFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Donate(bytes32,address,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount donated in currency0\",\"amount1\":\"The amount donated in currency1\",\"id\":\"The abi encoded hash of the pool key struct for the pool that was donated to\",\"sender\":\"The address that initiated the donate call\"}},\"Initialize(bytes32,address,address,uint24,int24,address,uint160,int24)\":{\"params\":{\"currency0\":\"The first currency of the pool by address sort order\",\"currency1\":\"The second currency of the pool by address sort order\",\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"hooks\":\"The hooks contract address for the pool, or address(0) if none\",\"id\":\"The abi encoded hash of the pool key struct for the new pool\",\"sqrtPriceX96\":\"The price of the pool on initialization\",\"tick\":\"The initial tick of the pool corresponding to the initialized price\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\"}},\"ModifyLiquidity(bytes32,address,int24,int24,int256,bytes32)\":{\"params\":{\"id\":\"The abi encoded hash of the pool key struct for the pool that was modified\",\"liquidityDelta\":\"The amount of liquidity that was added or removed\",\"salt\":\"The extra data to make positions unique\",\"sender\":\"The address that modified the pool\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Swap(bytes32,address,int128,int128,uint160,uint128,int24,uint24)\":{\"params\":{\"amount0\":\"The delta of the currency0 balance of the pool\",\"amount1\":\"The delta of the currency1 balance of the pool\",\"fee\":\"The swap fee in hundredths of a bip\",\"id\":\"The abi encoded hash of the pool key struct for the pool that was modified\",\"liquidity\":\"The liquidity of the pool after the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of the price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address,uint256)\":{\"params\":{\"id\":\"The id of the token.\",\"owner\":\"The address of the owner.\",\"spender\":\"The address of the spender.\"},\"returns\":{\"amount\":\"The allowance of the token.\"}},\"approve(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the token.\",\"id\":\"The id of the token.\",\"spender\":\"The address of the spender.\"},\"returns\":{\"_0\":\"bool True, always\"}},\"balanceOf(address,uint256)\":{\"params\":{\"id\":\"The id of the token.\",\"owner\":\"The address of the owner.\"},\"returns\":{\"amount\":\"The balance of the token.\"}},\"burn(address,uint256,uint256)\":{\"details\":\"The id is converted to a uint160 to correspond to a currency address If the upper 12 bytes are not 0, they will be 0-ed out\",\"params\":{\"amount\":\"The amount of currency to burn\",\"from\":\"The address to burn the tokens from\",\"id\":\"The currency address to burn from ERC6909s, as a uint256\"}},\"clear(address,uint256)\":{\"details\":\"This could be used to clear a balance that is considered dust. Additionally, the amount must be the exact positive balance. This is to enforce that the caller is aware of the amount being cleared.\"},\"collectProtocolFees(address,address,uint256)\":{\"details\":\"This will revert if the contract is unlocked\",\"params\":{\"amount\":\"The amount of currency to withdraw\",\"currency\":\"The currency to withdraw\",\"recipient\":\"The address to receive the protocol fees\"},\"returns\":{\"amountCollected\":\"The amount of currency successfully withdrawn\"}},\"donate((address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"details\":\"Calls to donate can be frontrun adding just-in-time liquidity, with the aim of receiving a portion donated funds. Donors should keep this in mind when designing donation mechanisms.This function donates to in-range LPs at slot0.tick. In certain edge-cases of the swap algorithm, the `sqrtPrice` of a pool can be at the lower boundary of tick `n`, but the `slot0.tick` of the pool is already `n - 1`. In this case a call to `donate` would donate to tick `n - 1` (slot0.tick) not tick `n` (getTickAtSqrtPrice(slot0.sqrtPriceX96)). Read the comments in `Pool.swap()` for more information about this.\",\"params\":{\"amount0\":\"The amount of currency0 to donate\",\"amount1\":\"The amount of currency1 to donate\",\"hookData\":\"The data to pass through to the donate hooks\",\"key\":\"The key of the pool to donate to\"},\"returns\":{\"_0\":\"BalanceDelta The delta of the caller after the donate\"}},\"extsload(bytes32)\":{\"params\":{\"slot\":\"Key of slot to sload\"},\"returns\":{\"value\":\"The value of the slot as bytes32\"}},\"extsload(bytes32,uint256)\":{\"params\":{\"nSlots\":\"Number of slots to load into return value\",\"startSlot\":\"Key of slot to start sloading from\"},\"returns\":{\"values\":\"List of loaded values.\"}},\"extsload(bytes32[])\":{\"params\":{\"slots\":\"List of slots to SLOAD from.\"},\"returns\":{\"values\":\"List of loaded values.\"}},\"exttload(bytes32)\":{\"params\":{\"slot\":\"Key of slot to tload\"},\"returns\":{\"value\":\"The value of the slot as bytes32\"}},\"exttload(bytes32[])\":{\"params\":{\"slots\":\"List of slots to tload\"},\"returns\":{\"values\":\"List of loaded values\"}},\"initialize((address,address,uint24,int24,address),uint160)\":{\"details\":\"A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee\",\"params\":{\"key\":\"The pool key for the pool to initialize\",\"sqrtPriceX96\":\"The initial square root price\"},\"returns\":{\"tick\":\"The initial tick of the pool\"}},\"isOperator(address,address)\":{\"params\":{\"owner\":\"The address of the owner.\",\"spender\":\"The address of the spender.\"},\"returns\":{\"approved\":\"The approval status.\"}},\"mint(address,uint256,uint256)\":{\"details\":\"The id is converted to a uint160 to correspond to a currency address If the upper 12 bytes are not 0, they will be 0-ed out\",\"params\":{\"amount\":\"The amount of currency to mint\",\"id\":\"The currency address to mint to ERC6909s, as a uint256\",\"to\":\"The address to mint the tokens to\"}},\"modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"details\":\"Poke by calling with a zero liquidityDeltaNote that feesAccrued can be artificially inflated by a malicious actor and integrators should be careful using the value For pools with a single liquidity position, actors can donate to themselves to inflate feeGrowthGlobal (and consequently feesAccrued) atomically donating and collecting fees in the same unlockCallback may make the inflated value more extreme\",\"params\":{\"hookData\":\"The data to pass through to the add/removeLiquidity hooks\",\"key\":\"The pool to modify liquidity in\",\"params\":\"The parameters for modifying the liquidity\"},\"returns\":{\"callerDelta\":\"The balance delta of the caller of modifyLiquidity. This is the total of both principal, fee deltas, and hook deltas if applicable\",\"feesAccrued\":\"The balance delta of the fees generated in the liquidity range. Returned for informational purposes\"}},\"protocolFeeController()\":{\"returns\":{\"_0\":\"address The current protocol fee controller address\"}},\"protocolFeesAccrued(address)\":{\"params\":{\"currency\":\"The currency to check\"},\"returns\":{\"amount\":\"The amount of protocol fees accrued in the currency\"}},\"setOperator(address,bool)\":{\"params\":{\"approved\":\"The approval status.\",\"operator\":\"The address of the operator.\"},\"returns\":{\"_0\":\"bool True, always\"}},\"setProtocolFee((address,address,uint24,int24,address),uint24)\":{\"params\":{\"key\":\"The key of the pool to set a protocol fee for\",\"newProtocolFee\":\"The fee to set\"}},\"setProtocolFeeController(address)\":{\"params\":{\"controller\":\"The new protocol fee controller\"}},\"settle()\":{\"returns\":{\"paid\":\"The amount of currency settled\"}},\"settleFor(address)\":{\"params\":{\"recipient\":\"The address to credit for the payment\"},\"returns\":{\"paid\":\"The amount of currency settled\"}},\"swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"details\":\"Swapping on low liquidity pools may cause unexpected swap amounts when liquidity available is less than amountSpecified. Additionally note that if interacting with hooks that have the BEFORE_SWAP_RETURNS_DELTA_FLAG or AFTER_SWAP_RETURNS_DELTA_FLAG the hook may alter the swap input/output. Integrators should perform checks on the returned swapDelta.\",\"params\":{\"hookData\":\"The data to pass through to the swap hooks\",\"key\":\"The pool to swap in\",\"params\":\"The parameters for swapping\"},\"returns\":{\"swapDelta\":\"The balance delta of the address swapping\"}},\"sync(address)\":{\"details\":\"This MUST be called before any ERC20 tokens are sent into the contract, but can be skipped for native tokens because the amount to settle is determined by the sent value. However, if an ERC20 token has been synced and not settled, and the caller instead wants to settle native funds, this function can be called with the native currency to then be able to settle the native currency\"},\"take(address,address,uint256)\":{\"details\":\"Will revert if the requested amount is not available, consider using `mint` insteadCan also be used as a mechanism for free flash loans\",\"params\":{\"amount\":\"The amount of currency to withdraw\",\"currency\":\"The currency to withdraw from the pool manager\",\"to\":\"The address to withdraw to\"}},\"transfer(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the token.\",\"id\":\"The id of the token.\",\"receiver\":\"The address of the receiver.\"},\"returns\":{\"_0\":\"bool True, always, unless the function reverts\"}},\"transferFrom(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the token.\",\"id\":\"The id of the token.\",\"receiver\":\"The address of the receiver.\",\"sender\":\"The address of the sender.\"},\"returns\":{\"_0\":\"bool True, always, unless the function reverts\"}},\"unlock(bytes)\":{\"details\":\"The only functions callable without an unlocking are `initialize` and `updateDynamicLPFee`\",\"params\":{\"data\":\"Any data to pass to the callback, via `IUnlockCallback(msg.sender).unlockCallback(data)`\"},\"returns\":{\"_0\":\"The data returned by the call to `IUnlockCallback(msg.sender).unlockCallback(data)`\"}},\"updateDynamicLPFee((address,address,uint24,int24,address),uint24)\":{\"details\":\"A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee\",\"params\":{\"key\":\"The key of the pool to update dynamic LP fees for\",\"newDynamicLPFee\":\"The new dynamic pool LP fee\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyUnlocked()\":[{\"notice\":\"Thrown when unlock is called, but the contract is already unlocked\"}],\"CurrenciesOutOfOrderOrEqual(address,address)\":[{\"notice\":\"PoolKey must have currencies where address(currency0) < address(currency1)\"}],\"CurrencyNotSettled()\":[{\"notice\":\"Thrown when a currency is not netted out after the contract is unlocked\"}],\"InvalidCaller()\":[{\"notice\":\"Thrown when collectProtocolFees or setProtocolFee is not called by the controller.\"}],\"ManagerLocked()\":[{\"notice\":\"Thrown when a function is called that requires the contract to be unlocked, but it is not\"}],\"MustClearExactPositiveDelta()\":[{\"notice\":\"Thrown when `clear` is called with an amount that is not exactly equal to the open currency delta.\"}],\"NonzeroNativeValue()\":[{\"notice\":\"Thrown when native currency is passed to a non native settlement\"}],\"PoolNotInitialized()\":[{\"notice\":\"Thrown when trying to interact with a non-initialized pool\"}],\"ProtocolFeeCurrencySynced()\":[{\"notice\":\"Thrown when collectProtocolFees is attempted on a token that is synced.\"}],\"ProtocolFeeTooLarge(uint24)\":[{\"notice\":\"Thrown when protocol fee is set too high\"}],\"SwapAmountCannotBeZero()\":[{\"notice\":\"Thrown when trying to swap amount of 0\"}],\"TickSpacingTooLarge(int24)\":[{\"notice\":\"Pools are limited to type(int16).max tickSpacing in #initialize, to prevent overflow\"}],\"TickSpacingTooSmall(int24)\":[{\"notice\":\"Pools must have a positive non-zero tickSpacing passed to #initialize\"}],\"UnauthorizedDynamicLPFeeUpdate()\":[{\"notice\":\"Thrown when a call to updateDynamicLPFee is made by an address that is not the hook, or on a pool that does not have a dynamic swap fee.\"}]},\"events\":{\"Donate(bytes32,address,uint256,uint256)\":{\"notice\":\"Emitted for donations\"},\"Initialize(bytes32,address,address,uint24,int24,address,uint160,int24)\":{\"notice\":\"Emitted when a new pool is initialized\"},\"ModifyLiquidity(bytes32,address,int24,int24,int256,bytes32)\":{\"notice\":\"Emitted when a liquidity position is modified\"},\"ProtocolFeeControllerUpdated(address)\":{\"notice\":\"Emitted when the protocol fee controller address is updated in setProtocolFeeController.\"},\"ProtocolFeeUpdated(bytes32,uint24)\":{\"notice\":\"Emitted when the protocol fee is updated for a pool.\"},\"Swap(bytes32,address,int128,int128,uint160,uint128,int24,uint24)\":{\"notice\":\"Emitted for swaps between currency0 and currency1\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address,uint256)\":{\"notice\":\"Spender allowance of an id.\"},\"approve(address,uint256,uint256)\":{\"notice\":\"Approves an amount of an id to a spender.\"},\"balanceOf(address,uint256)\":{\"notice\":\"Owner balance of an id.\"},\"burn(address,uint256,uint256)\":{\"notice\":\"Called by the user to move value from ERC6909 balance\"},\"clear(address,uint256)\":{\"notice\":\"WARNING - Any currency that is cleared, will be non-retrievable, and locked in the contract permanently. A call to clear will zero out a positive balance WITHOUT a corresponding transfer.\"},\"collectProtocolFees(address,address,uint256)\":{\"notice\":\"Collects the protocol fees for a given recipient and currency, returning the amount collected\"},\"donate((address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"Donate the given currency amounts to the in-range liquidity providers of a pool\"},\"extsload(bytes32)\":{\"notice\":\"Called by external contracts to access granular pool state\"},\"extsload(bytes32,uint256)\":{\"notice\":\"Called by external contracts to access granular pool state\"},\"extsload(bytes32[])\":{\"notice\":\"Called by external contracts to access sparse pool state\"},\"exttload(bytes32)\":{\"notice\":\"Called by external contracts to access transient storage of the contract\"},\"exttload(bytes32[])\":{\"notice\":\"Called by external contracts to access sparse transient pool state\"},\"initialize((address,address,uint24,int24,address),uint160)\":{\"notice\":\"Initialize the state for a given pool ID\"},\"isOperator(address,address)\":{\"notice\":\"Checks if a spender is approved by an owner as an operator\"},\"mint(address,uint256,uint256)\":{\"notice\":\"Called by the user to move value into ERC6909 balance\"},\"modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"Modify the liquidity for the given pool\"},\"protocolFeeController()\":{\"notice\":\"Returns the current protocol fee controller address\"},\"protocolFeesAccrued(address)\":{\"notice\":\"Given a currency address, returns the protocol fees accrued in that currency\"},\"setOperator(address,bool)\":{\"notice\":\"Sets or removes an operator for the caller.\"},\"setProtocolFee((address,address,uint24,int24,address),uint24)\":{\"notice\":\"Sets the protocol fee for the given pool\"},\"setProtocolFeeController(address)\":{\"notice\":\"Sets the protocol fee controller\"},\"settle()\":{\"notice\":\"Called by the user to pay what is owed\"},\"settleFor(address)\":{\"notice\":\"Called by the user to pay on behalf of another address\"},\"swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"notice\":\"Swap against the given pool\"},\"sync(address)\":{\"notice\":\"Writes the current ERC20 balance of the specified currency to transient storage This is used to checkpoint balances for the manager and derive deltas for the caller.\"},\"take(address,address,uint256)\":{\"notice\":\"Called by the user to net out some value owed to the user\"},\"transfer(address,uint256,uint256)\":{\"notice\":\"Transfers an amount of an id from the caller to a receiver.\"},\"transferFrom(address,address,uint256,uint256)\":{\"notice\":\"Transfers an amount of an id from a sender to a receiver.\"},\"unlock(bytes)\":{\"notice\":\"All interactions on the contract that account deltas require unlocking. A caller that calls `unlock` must implement `IUnlockCallback(msg.sender).unlockCallback(data)`, where they interact with the remaining functions on this contract.\"},\"updateDynamicLPFee((address,address,uint24,int24,address),uint24)\":{\"notice\":\"Updates the pools lp fees for the a pool that has enabled dynamic lp fees.\"}},\"notice\":\"Interface for the PoolManager\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"UniswapV4/interfaces/IPoolManager.sol\":\"IPoolManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"UniswapV4/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"UniswapV4/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"UniswapV4/interfaces/IHooks.sol\":{\"keccak256\":\"0x4c9571aed0c2b6ef11832545554fc11ffdb03746daaf5c73683c00600bfc7ec0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e78b34b58ce9de91b91943b4f3cc3ce121d0b151e123e8a600ac5ef64d91db6c\",\"dweb:/ipfs/QmRkaQnPCYwLrXgbpGujJTx32PaZK63KSPJJV1XmnQuCMb\"]},\"UniswapV4/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x3534f00531038e77ab8a7fc4d0a6e0993ee53fb7a396b1324ad917318ea46cea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a4a7e771828dc40848485b568a1cf514f553ace6653f4f4d1ad3f3e9cdb6c27\",\"dweb:/ipfs/QmTjzQ7KVYnrEWtxPER2E4MXzycgcznfzSDsZtd5turk5V\"]},\"UniswapV4/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"UniswapV4/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"UniswapV4/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"UniswapV4/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"UniswapV4/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"UniswapV4/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"UniswapV4/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"UniswapV4/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"UniswapV4/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"UniswapV4/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"AlreadyUnlocked()": [
								{
									"notice": "Thrown when unlock is called, but the contract is already unlocked"
								}
							],
							"CurrenciesOutOfOrderOrEqual(address,address)": [
								{
									"notice": "PoolKey must have currencies where address(currency0) < address(currency1)"
								}
							],
							"CurrencyNotSettled()": [
								{
									"notice": "Thrown when a currency is not netted out after the contract is unlocked"
								}
							],
							"InvalidCaller()": [
								{
									"notice": "Thrown when collectProtocolFees or setProtocolFee is not called by the controller."
								}
							],
							"ManagerLocked()": [
								{
									"notice": "Thrown when a function is called that requires the contract to be unlocked, but it is not"
								}
							],
							"MustClearExactPositiveDelta()": [
								{
									"notice": "Thrown when `clear` is called with an amount that is not exactly equal to the open currency delta."
								}
							],
							"NonzeroNativeValue()": [
								{
									"notice": "Thrown when native currency is passed to a non native settlement"
								}
							],
							"PoolNotInitialized()": [
								{
									"notice": "Thrown when trying to interact with a non-initialized pool"
								}
							],
							"ProtocolFeeCurrencySynced()": [
								{
									"notice": "Thrown when collectProtocolFees is attempted on a token that is synced."
								}
							],
							"ProtocolFeeTooLarge(uint24)": [
								{
									"notice": "Thrown when protocol fee is set too high"
								}
							],
							"SwapAmountCannotBeZero()": [
								{
									"notice": "Thrown when trying to swap amount of 0"
								}
							],
							"TickSpacingTooLarge(int24)": [
								{
									"notice": "Pools are limited to type(int16).max tickSpacing in #initialize, to prevent overflow"
								}
							],
							"TickSpacingTooSmall(int24)": [
								{
									"notice": "Pools must have a positive non-zero tickSpacing passed to #initialize"
								}
							],
							"UnauthorizedDynamicLPFeeUpdate()": [
								{
									"notice": "Thrown when a call to updateDynamicLPFee is made by an address that is not the hook, or on a pool that does not have a dynamic swap fee."
								}
							]
						},
						"events": {
							"Donate(bytes32,address,uint256,uint256)": {
								"notice": "Emitted for donations"
							},
							"Initialize(bytes32,address,address,uint24,int24,address,uint160,int24)": {
								"notice": "Emitted when a new pool is initialized"
							},
							"ModifyLiquidity(bytes32,address,int24,int24,int256,bytes32)": {
								"notice": "Emitted when a liquidity position is modified"
							},
							"ProtocolFeeControllerUpdated(address)": {
								"notice": "Emitted when the protocol fee controller address is updated in setProtocolFeeController."
							},
							"ProtocolFeeUpdated(bytes32,uint24)": {
								"notice": "Emitted when the protocol fee is updated for a pool."
							},
							"Swap(bytes32,address,int128,int128,uint160,uint128,int24,uint24)": {
								"notice": "Emitted for swaps between currency0 and currency1"
							}
						},
						"kind": "user",
						"methods": {
							"allowance(address,address,uint256)": {
								"notice": "Spender allowance of an id."
							},
							"approve(address,uint256,uint256)": {
								"notice": "Approves an amount of an id to a spender."
							},
							"balanceOf(address,uint256)": {
								"notice": "Owner balance of an id."
							},
							"burn(address,uint256,uint256)": {
								"notice": "Called by the user to move value from ERC6909 balance"
							},
							"clear(address,uint256)": {
								"notice": "WARNING - Any currency that is cleared, will be non-retrievable, and locked in the contract permanently. A call to clear will zero out a positive balance WITHOUT a corresponding transfer."
							},
							"collectProtocolFees(address,address,uint256)": {
								"notice": "Collects the protocol fees for a given recipient and currency, returning the amount collected"
							},
							"donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
								"notice": "Donate the given currency amounts to the in-range liquidity providers of a pool"
							},
							"extsload(bytes32)": {
								"notice": "Called by external contracts to access granular pool state"
							},
							"extsload(bytes32,uint256)": {
								"notice": "Called by external contracts to access granular pool state"
							},
							"extsload(bytes32[])": {
								"notice": "Called by external contracts to access sparse pool state"
							},
							"exttload(bytes32)": {
								"notice": "Called by external contracts to access transient storage of the contract"
							},
							"exttload(bytes32[])": {
								"notice": "Called by external contracts to access sparse transient pool state"
							},
							"initialize((address,address,uint24,int24,address),uint160)": {
								"notice": "Initialize the state for a given pool ID"
							},
							"isOperator(address,address)": {
								"notice": "Checks if a spender is approved by an owner as an operator"
							},
							"mint(address,uint256,uint256)": {
								"notice": "Called by the user to move value into ERC6909 balance"
							},
							"modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
								"notice": "Modify the liquidity for the given pool"
							},
							"protocolFeeController()": {
								"notice": "Returns the current protocol fee controller address"
							},
							"protocolFeesAccrued(address)": {
								"notice": "Given a currency address, returns the protocol fees accrued in that currency"
							},
							"setOperator(address,bool)": {
								"notice": "Sets or removes an operator for the caller."
							},
							"setProtocolFee((address,address,uint24,int24,address),uint24)": {
								"notice": "Sets the protocol fee for the given pool"
							},
							"setProtocolFeeController(address)": {
								"notice": "Sets the protocol fee controller"
							},
							"settle()": {
								"notice": "Called by the user to pay what is owed"
							},
							"settleFor(address)": {
								"notice": "Called by the user to pay on behalf of another address"
							},
							"swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
								"notice": "Swap against the given pool"
							},
							"sync(address)": {
								"notice": "Writes the current ERC20 balance of the specified currency to transient storage This is used to checkpoint balances for the manager and derive deltas for the caller."
							},
							"take(address,address,uint256)": {
								"notice": "Called by the user to net out some value owed to the user"
							},
							"transfer(address,uint256,uint256)": {
								"notice": "Transfers an amount of an id from the caller to a receiver."
							},
							"transferFrom(address,address,uint256,uint256)": {
								"notice": "Transfers an amount of an id from a sender to a receiver."
							},
							"unlock(bytes)": {
								"notice": "All interactions on the contract that account deltas require unlocking. A caller that calls `unlock` must implement `IUnlockCallback(msg.sender).unlockCallback(data)`, where they interact with the remaining functions on this contract."
							},
							"updateDynamicLPFee((address,address,uint24,int24,address),uint24)": {
								"notice": "Updates the pools lp fees for the a pool that has enabled dynamic lp fees."
							}
						},
						"notice": "Interface for the PoolManager",
						"version": 1
					}
				}
			},
			"UniswapV4/interfaces/IProtocolFees.sol": {
				"IProtocolFees": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ProtocolFeeCurrencySynced",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "ProtocolFeeTooLarge",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "protocolFeeController",
									"type": "address"
								}
							],
							"name": "ProtocolFeeControllerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "PoolId",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint24",
									"name": "protocolFee",
									"type": "uint24"
								}
							],
							"name": "ProtocolFeeUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "Currency",
									"name": "currency",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "collectProtocolFees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountCollected",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFeeController",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "Currency",
									"name": "currency",
									"type": "address"
								}
							],
							"name": "protocolFeesAccrued",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "Currency",
											"name": "currency0",
											"type": "address"
										},
										{
											"internalType": "Currency",
											"name": "currency1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "contract IHooks",
											"name": "hooks",
											"type": "address"
										}
									],
									"internalType": "struct PoolKey",
									"name": "key",
									"type": "tuple"
								},
								{
									"internalType": "uint24",
									"name": "newProtocolFee",
									"type": "uint24"
								}
							],
							"name": "setProtocolFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "controller",
									"type": "address"
								}
							],
							"name": "setProtocolFeeController",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocolFees(address,address,uint256)": {
								"details": "This will revert if the contract is unlocked",
								"params": {
									"amount": "The amount of currency to withdraw",
									"currency": "The currency to withdraw",
									"recipient": "The address to receive the protocol fees"
								},
								"returns": {
									"amountCollected": "The amount of currency successfully withdrawn"
								}
							},
							"protocolFeeController()": {
								"returns": {
									"_0": "address The current protocol fee controller address"
								}
							},
							"protocolFeesAccrued(address)": {
								"params": {
									"currency": "The currency to check"
								},
								"returns": {
									"amount": "The amount of protocol fees accrued in the currency"
								}
							},
							"setProtocolFee((address,address,uint24,int24,address),uint24)": {
								"params": {
									"key": "The key of the pool to set a protocol fee for",
									"newProtocolFee": "The fee to set"
								}
							},
							"setProtocolFeeController(address)": {
								"params": {
									"controller": "The new protocol fee controller"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocolFees(address,address,uint256)": "8161b874",
							"protocolFeeController()": "f02de3b2",
							"protocolFeesAccrued(address)": "97e8cd4e",
							"setProtocolFee((address,address,uint24,int24,address),uint24)": "7e87ce7d",
							"setProtocolFeeController(address)": "2d771389"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProtocolFeeCurrencySynced\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"ProtocolFeeTooLarge\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"protocolFeeController\",\"type\":\"address\"}],\"name\":\"ProtocolFeeControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"protocolFee\",\"type\":\"uint24\"}],\"name\":\"ProtocolFeeUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"collectProtocolFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountCollected\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"protocolFeesAccrued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint24\",\"name\":\"newProtocolFee\",\"type\":\"uint24\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"setProtocolFeeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocolFees(address,address,uint256)\":{\"details\":\"This will revert if the contract is unlocked\",\"params\":{\"amount\":\"The amount of currency to withdraw\",\"currency\":\"The currency to withdraw\",\"recipient\":\"The address to receive the protocol fees\"},\"returns\":{\"amountCollected\":\"The amount of currency successfully withdrawn\"}},\"protocolFeeController()\":{\"returns\":{\"_0\":\"address The current protocol fee controller address\"}},\"protocolFeesAccrued(address)\":{\"params\":{\"currency\":\"The currency to check\"},\"returns\":{\"amount\":\"The amount of protocol fees accrued in the currency\"}},\"setProtocolFee((address,address,uint24,int24,address),uint24)\":{\"params\":{\"key\":\"The key of the pool to set a protocol fee for\",\"newProtocolFee\":\"The fee to set\"}},\"setProtocolFeeController(address)\":{\"params\":{\"controller\":\"The new protocol fee controller\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidCaller()\":[{\"notice\":\"Thrown when collectProtocolFees or setProtocolFee is not called by the controller.\"}],\"ProtocolFeeCurrencySynced()\":[{\"notice\":\"Thrown when collectProtocolFees is attempted on a token that is synced.\"}],\"ProtocolFeeTooLarge(uint24)\":[{\"notice\":\"Thrown when protocol fee is set too high\"}]},\"events\":{\"ProtocolFeeControllerUpdated(address)\":{\"notice\":\"Emitted when the protocol fee controller address is updated in setProtocolFeeController.\"},\"ProtocolFeeUpdated(bytes32,uint24)\":{\"notice\":\"Emitted when the protocol fee is updated for a pool.\"}},\"kind\":\"user\",\"methods\":{\"collectProtocolFees(address,address,uint256)\":{\"notice\":\"Collects the protocol fees for a given recipient and currency, returning the amount collected\"},\"protocolFeeController()\":{\"notice\":\"Returns the current protocol fee controller address\"},\"protocolFeesAccrued(address)\":{\"notice\":\"Given a currency address, returns the protocol fees accrued in that currency\"},\"setProtocolFee((address,address,uint24,int24,address),uint24)\":{\"notice\":\"Sets the protocol fee for the given pool\"},\"setProtocolFeeController(address)\":{\"notice\":\"Sets the protocol fee controller\"}},\"notice\":\"Interface for all protocol-fee related functions in the pool manager\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"UniswapV4/interfaces/IProtocolFees.sol\":\"IProtocolFees\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"UniswapV4/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"UniswapV4/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"UniswapV4/interfaces/IHooks.sol\":{\"keccak256\":\"0x4c9571aed0c2b6ef11832545554fc11ffdb03746daaf5c73683c00600bfc7ec0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e78b34b58ce9de91b91943b4f3cc3ce121d0b151e123e8a600ac5ef64d91db6c\",\"dweb:/ipfs/QmRkaQnPCYwLrXgbpGujJTx32PaZK63KSPJJV1XmnQuCMb\"]},\"UniswapV4/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x3534f00531038e77ab8a7fc4d0a6e0993ee53fb7a396b1324ad917318ea46cea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a4a7e771828dc40848485b568a1cf514f553ace6653f4f4d1ad3f3e9cdb6c27\",\"dweb:/ipfs/QmTjzQ7KVYnrEWtxPER2E4MXzycgcznfzSDsZtd5turk5V\"]},\"UniswapV4/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"UniswapV4/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"UniswapV4/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"UniswapV4/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"UniswapV4/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"UniswapV4/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"UniswapV4/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"UniswapV4/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"UniswapV4/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"UniswapV4/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"InvalidCaller()": [
								{
									"notice": "Thrown when collectProtocolFees or setProtocolFee is not called by the controller."
								}
							],
							"ProtocolFeeCurrencySynced()": [
								{
									"notice": "Thrown when collectProtocolFees is attempted on a token that is synced."
								}
							],
							"ProtocolFeeTooLarge(uint24)": [
								{
									"notice": "Thrown when protocol fee is set too high"
								}
							]
						},
						"events": {
							"ProtocolFeeControllerUpdated(address)": {
								"notice": "Emitted when the protocol fee controller address is updated in setProtocolFeeController."
							},
							"ProtocolFeeUpdated(bytes32,uint24)": {
								"notice": "Emitted when the protocol fee is updated for a pool."
							}
						},
						"kind": "user",
						"methods": {
							"collectProtocolFees(address,address,uint256)": {
								"notice": "Collects the protocol fees for a given recipient and currency, returning the amount collected"
							},
							"protocolFeeController()": {
								"notice": "Returns the current protocol fee controller address"
							},
							"protocolFeesAccrued(address)": {
								"notice": "Given a currency address, returns the protocol fees accrued in that currency"
							},
							"setProtocolFee((address,address,uint24,int24,address),uint24)": {
								"notice": "Sets the protocol fee for the given pool"
							},
							"setProtocolFeeController(address)": {
								"notice": "Sets the protocol fee controller"
							}
						},
						"notice": "Interface for all protocol-fee related functions in the pool manager",
						"version": 1
					}
				}
			},
			"UniswapV4/interfaces/IV4Router.sol": {
				"IV4Router": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "minAmountOutReceived",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountReceived",
									"type": "uint256"
								}
							],
							"name": "V4TooLittleReceived",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "maxAmountInRequested",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountRequested",
									"type": "uint256"
								}
							],
							"name": "V4TooMuchRequested",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "poolManager",
							"outputs": [
								{
									"internalType": "contract IPoolManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "IV4Router",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"poolManager()": "dc4c90d3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minAmountOutReceived\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountReceived\",\"type\":\"uint256\"}],\"name\":\"V4TooLittleReceived\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAmountInRequested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountRequested\",\"type\":\"uint256\"}],\"name\":\"V4TooMuchRequested\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"poolManager\",\"outputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"IV4Router\",\"version\":1},\"userdoc\":{\"errors\":{\"V4TooLittleReceived(uint256,uint256)\":[{\"notice\":\"Emitted when an exactInput swap does not receive its minAmountOut\"}],\"V4TooMuchRequested(uint256,uint256)\":[{\"notice\":\"Emitted when an exactOutput is asked for more than its maxAmountIn\"}]},\"kind\":\"user\",\"methods\":{\"poolManager()\":{\"notice\":\"The Uniswap v4 PoolManager contract\"}},\"notice\":\"Interface for the V4Router contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"UniswapV4/interfaces/IV4Router.sol\":\"IV4Router\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"UniswapV4/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"UniswapV4/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"UniswapV4/interfaces/IHooks.sol\":{\"keccak256\":\"0x4c9571aed0c2b6ef11832545554fc11ffdb03746daaf5c73683c00600bfc7ec0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e78b34b58ce9de91b91943b4f3cc3ce121d0b151e123e8a600ac5ef64d91db6c\",\"dweb:/ipfs/QmRkaQnPCYwLrXgbpGujJTx32PaZK63KSPJJV1XmnQuCMb\"]},\"UniswapV4/interfaces/IImmutableState.sol\":{\"keccak256\":\"0xafe6ac5a67b215482660136614ff16fad42ef6f18fd184d428aa0393dbce1b79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da22cf54fdd7f6e9876e74a29b6a77260d3a6d3bcfc462692c3f0f715bb30480\",\"dweb:/ipfs/QmYheBbdhWhWHqRnkgbvd3NAkgHRuDhiVJzbLNmV1TGQCQ\"]},\"UniswapV4/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x3534f00531038e77ab8a7fc4d0a6e0993ee53fb7a396b1324ad917318ea46cea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a4a7e771828dc40848485b568a1cf514f553ace6653f4f4d1ad3f3e9cdb6c27\",\"dweb:/ipfs/QmTjzQ7KVYnrEWtxPER2E4MXzycgcznfzSDsZtd5turk5V\"]},\"UniswapV4/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"UniswapV4/interfaces/IV4Router.sol\":{\"keccak256\":\"0x50c25c8a42dfb4fc20bdfd0304943b5bb83177ac3d6d1c509a23893fea015466\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24678f7636460b87618dec8746ea11ffce539cb3337670ce67d0c71ffdabb733\",\"dweb:/ipfs/QmePv3RCkVWdbcg6wEHm8SEPy3NFBtVsr5pzGMYUksw76E\"]},\"UniswapV4/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"UniswapV4/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"UniswapV4/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"UniswapV4/libraries/PathKey.sol\":{\"keccak256\":\"0x2fd3b57c431a1098173c57de5bf9692fa26a4830159a5ff13f6ff8180f98cd80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a0c2cb0e0d0bd722be4e070b32d7aab009123bdae8450b1be19db4ec77fce1e\",\"dweb:/ipfs/QmXKGFLq4t86EQwcB5gmvdqT7MyMUaMCkb97gUkZh9sv81\"]},\"UniswapV4/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"UniswapV4/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"UniswapV4/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"UniswapV4/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"UniswapV4/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"UniswapV4/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"V4TooLittleReceived(uint256,uint256)": [
								{
									"notice": "Emitted when an exactInput swap does not receive its minAmountOut"
								}
							],
							"V4TooMuchRequested(uint256,uint256)": [
								{
									"notice": "Emitted when an exactOutput is asked for more than its maxAmountIn"
								}
							]
						},
						"kind": "user",
						"methods": {
							"poolManager()": {
								"notice": "The Uniswap v4 PoolManager contract"
							}
						},
						"notice": "Interface for the V4Router contract",
						"version": 1
					}
				}
			},
			"UniswapV4/interfaces/external/IERC20Minimal.sol": {
				"IERC20Minimal": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"params": {
									"owner": "The account that approved spending of its tokens",
									"spender": "The account for which the spending allowance was modified",
									"value": "The new allowance from the owner to the spender"
								}
							},
							"Transfer(address,address,uint256)": {
								"params": {
									"from": "The account from which the tokens were sent, i.e. the balance decreased",
									"to": "The account to which the tokens were sent, i.e. the balance increased",
									"value": "The amount of tokens that were transferred"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"params": {
									"owner": "The account of the token owner",
									"spender": "The account of the token spender"
								},
								"returns": {
									"_0": "The current allowance granted by `owner` to `spender`"
								}
							},
							"approve(address,uint256)": {
								"params": {
									"amount": "The amount of tokens allowed to be used by `spender`",
									"spender": "The account which will be allowed to spend a given amount of the owners tokens"
								},
								"returns": {
									"_0": "Returns true for a successful approval, false for unsuccessful"
								}
							},
							"balanceOf(address)": {
								"params": {
									"account": "The account for which to look up the number of tokens it has, i.e. its balance"
								},
								"returns": {
									"_0": "The number of tokens held by the account"
								}
							},
							"transfer(address,uint256)": {
								"params": {
									"amount": "The number of tokens to send from the sender to the recipient",
									"recipient": "The account that will receive the amount transferred"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for an unsuccessful transfer"
								}
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"amount": "The amount of the transfer",
									"recipient": "The recipient of the transfer",
									"sender": "The account from which the transfer will be initiated"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for unsuccessful"
								}
							}
						},
						"title": "Minimal ERC20 interface for Uniswap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"params\":{\"owner\":\"The account that approved spending of its tokens\",\"spender\":\"The account for which the spending allowance was modified\",\"value\":\"The new allowance from the owner to the spender\"}},\"Transfer(address,address,uint256)\":{\"params\":{\"from\":\"The account from which the tokens were sent, i.e. the balance decreased\",\"to\":\"The account to which the tokens were sent, i.e. the balance increased\",\"value\":\"The amount of tokens that were transferred\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"The account of the token owner\",\"spender\":\"The account of the token spender\"},\"returns\":{\"_0\":\"The current allowance granted by `owner` to `spender`\"}},\"approve(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens allowed to be used by `spender`\",\"spender\":\"The account which will be allowed to spend a given amount of the owners tokens\"},\"returns\":{\"_0\":\"Returns true for a successful approval, false for unsuccessful\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"The account for which to look up the number of tokens it has, i.e. its balance\"},\"returns\":{\"_0\":\"The number of tokens held by the account\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to send from the sender to the recipient\",\"recipient\":\"The account that will receive the amount transferred\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for an unsuccessful transfer\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of the transfer\",\"recipient\":\"The recipient of the transfer\",\"sender\":\"The account from which the transfer will be initiated\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for unsuccessful\"}}},\"title\":\"Minimal ERC20 interface for Uniswap\",\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Event emitted when the approval amount for the spender of a given owner's tokens changes.\"},\"Transfer(address,address,uint256)\":{\"notice\":\"Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the current allowance given to a spender by an owner\"},\"approve(address,uint256)\":{\"notice\":\"Sets the allowance of a spender from the `msg.sender` to the value `amount`\"},\"balanceOf(address)\":{\"notice\":\"Returns an account's balance in the token\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers the amount of token from the `msg.sender` to the recipient\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\"}},\"notice\":\"Contains a subset of the full ERC20 interface that is used in Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"UniswapV4/interfaces/external/IERC20Minimal.sol\":\"IERC20Minimal\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"UniswapV4/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"notice": "Event emitted when the approval amount for the spender of a given owner's tokens changes."
							},
							"Transfer(address,address,uint256)": {
								"notice": "Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`."
							}
						},
						"kind": "user",
						"methods": {
							"allowance(address,address)": {
								"notice": "Returns the current allowance given to a spender by an owner"
							},
							"approve(address,uint256)": {
								"notice": "Sets the allowance of a spender from the `msg.sender` to the value `amount`"
							},
							"balanceOf(address)": {
								"notice": "Returns an account's balance in the token"
							},
							"transfer(address,uint256)": {
								"notice": "Transfers the amount of token from the `msg.sender` to the recipient"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`"
							}
						},
						"notice": "Contains a subset of the full ERC20 interface that is used in Uniswap V3",
						"version": 1
					}
				}
			},
			"UniswapV4/interfaces/external/IERC6909Claims.sol": {
				"IERC6909Claims": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "OperatorSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "isOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address,uint256)": {
								"params": {
									"id": "The id of the token.",
									"owner": "The address of the owner.",
									"spender": "The address of the spender."
								},
								"returns": {
									"amount": "The allowance of the token."
								}
							},
							"approve(address,uint256,uint256)": {
								"params": {
									"amount": "The amount of the token.",
									"id": "The id of the token.",
									"spender": "The address of the spender."
								},
								"returns": {
									"_0": "bool True, always"
								}
							},
							"balanceOf(address,uint256)": {
								"params": {
									"id": "The id of the token.",
									"owner": "The address of the owner."
								},
								"returns": {
									"amount": "The balance of the token."
								}
							},
							"isOperator(address,address)": {
								"params": {
									"owner": "The address of the owner.",
									"spender": "The address of the spender."
								},
								"returns": {
									"approved": "The approval status."
								}
							},
							"setOperator(address,bool)": {
								"params": {
									"approved": "The approval status.",
									"operator": "The address of the operator."
								},
								"returns": {
									"_0": "bool True, always"
								}
							},
							"transfer(address,uint256,uint256)": {
								"params": {
									"amount": "The amount of the token.",
									"id": "The id of the token.",
									"receiver": "The address of the receiver."
								},
								"returns": {
									"_0": "bool True, always, unless the function reverts"
								}
							},
							"transferFrom(address,address,uint256,uint256)": {
								"params": {
									"amount": "The amount of the token.",
									"id": "The id of the token.",
									"receiver": "The address of the receiver.",
									"sender": "The address of the sender."
								},
								"returns": {
									"_0": "bool True, always, unless the function reverts"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address,uint256)": "598af9e7",
							"approve(address,uint256,uint256)": "426a8493",
							"balanceOf(address,uint256)": "00fdd58e",
							"isOperator(address,address)": "b6363cf2",
							"setOperator(address,bool)": "558a7297",
							"transfer(address,uint256,uint256)": "095bcdb6",
							"transferFrom(address,address,uint256,uint256)": "fe99049a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"OperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address,uint256)\":{\"params\":{\"id\":\"The id of the token.\",\"owner\":\"The address of the owner.\",\"spender\":\"The address of the spender.\"},\"returns\":{\"amount\":\"The allowance of the token.\"}},\"approve(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the token.\",\"id\":\"The id of the token.\",\"spender\":\"The address of the spender.\"},\"returns\":{\"_0\":\"bool True, always\"}},\"balanceOf(address,uint256)\":{\"params\":{\"id\":\"The id of the token.\",\"owner\":\"The address of the owner.\"},\"returns\":{\"amount\":\"The balance of the token.\"}},\"isOperator(address,address)\":{\"params\":{\"owner\":\"The address of the owner.\",\"spender\":\"The address of the spender.\"},\"returns\":{\"approved\":\"The approval status.\"}},\"setOperator(address,bool)\":{\"params\":{\"approved\":\"The approval status.\",\"operator\":\"The address of the operator.\"},\"returns\":{\"_0\":\"bool True, always\"}},\"transfer(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the token.\",\"id\":\"The id of the token.\",\"receiver\":\"The address of the receiver.\"},\"returns\":{\"_0\":\"bool True, always, unless the function reverts\"}},\"transferFrom(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the token.\",\"id\":\"The id of the token.\",\"receiver\":\"The address of the receiver.\",\"sender\":\"The address of the sender.\"},\"returns\":{\"_0\":\"bool True, always, unless the function reverts\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address,uint256)\":{\"notice\":\"Spender allowance of an id.\"},\"approve(address,uint256,uint256)\":{\"notice\":\"Approves an amount of an id to a spender.\"},\"balanceOf(address,uint256)\":{\"notice\":\"Owner balance of an id.\"},\"isOperator(address,address)\":{\"notice\":\"Checks if a spender is approved by an owner as an operator\"},\"setOperator(address,bool)\":{\"notice\":\"Sets or removes an operator for the caller.\"},\"transfer(address,uint256,uint256)\":{\"notice\":\"Transfers an amount of an id from the caller to a receiver.\"},\"transferFrom(address,address,uint256,uint256)\":{\"notice\":\"Transfers an amount of an id from a sender to a receiver.\"}},\"notice\":\"Interface for claims over a contract balance, wrapped as a ERC6909\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"UniswapV4/interfaces/external/IERC6909Claims.sol\":\"IERC6909Claims\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"UniswapV4/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"allowance(address,address,uint256)": {
								"notice": "Spender allowance of an id."
							},
							"approve(address,uint256,uint256)": {
								"notice": "Approves an amount of an id to a spender."
							},
							"balanceOf(address,uint256)": {
								"notice": "Owner balance of an id."
							},
							"isOperator(address,address)": {
								"notice": "Checks if a spender is approved by an owner as an operator"
							},
							"setOperator(address,bool)": {
								"notice": "Sets or removes an operator for the caller."
							},
							"transfer(address,uint256,uint256)": {
								"notice": "Transfers an amount of an id from the caller to a receiver."
							},
							"transferFrom(address,address,uint256,uint256)": {
								"notice": "Transfers an amount of an id from a sender to a receiver."
							}
						},
						"notice": "Interface for claims over a contract balance, wrapped as a ERC6909",
						"version": 1
					}
				}
			},
			"UniswapV4/libraries/CustomRevert.sol": {
				"CustomRevert": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "selector",
									"type": "bytes4"
								},
								{
									"internalType": "bytes",
									"name": "reason",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "details",
									"type": "bytes"
								}
							],
							"name": "WrappedError",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "To use this library, declare `using CustomRevert for bytes4;` and replace `revert CustomError()` with `CustomError.selector.revertWith()`The functions may tamper with the free memory pointer but it is fine since the call context is exited immediately",
						"errors": {
							"WrappedError(address,bytes4,bytes,bytes)": [
								{
									"details": "ERC-7751 error for wrapping bubbled up reverts"
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "Library for reverting with custom errors efficiently",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"UniswapV4/libraries/CustomRevert.sol\":501:5173  library CustomRevert {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"UniswapV4/libraries/CustomRevert.sol\":501:5173  library CustomRevert {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220322fe1fac1380e7b2eb0bc18b4178db9480ceb037dba0aa80328d4d16696ea5c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220322fe1fac1380e7b2eb0bc18b4178db9480ceb037dba0aa80328d4d16696ea5c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x2F 0xE1 STATICCALL 0xC1 CODESIZE 0xE PUSH28 0x2EB0BC18B4178DB9480CEB037DBA0AA80328D4D16696EA5C64736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "501:4672:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;501:4672:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220322fe1fac1380e7b2eb0bc18b4178db9480ceb037dba0aa80328d4d16696ea5c64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x2F 0xE1 STATICCALL 0xC1 CODESIZE 0xE PUSH28 0x2EB0BC18B4178DB9480CEB037DBA0AA80328D4D16696EA5C64736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "501:4672:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"bubbleUpAndRevertWith(address,bytes4,bytes4)": "infinite",
								"revertWith(bytes4)": "infinite",
								"revertWith(bytes4,address)": "infinite",
								"revertWith(bytes4,address,address)": "infinite",
								"revertWith(bytes4,int24)": "infinite",
								"revertWith(bytes4,int24,int24)": "infinite",
								"revertWith(bytes4,uint160)": "infinite",
								"revertWith(bytes4,uint160,uint160)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 501,
									"end": 5173,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 501,
									"end": 5173,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220322fe1fac1380e7b2eb0bc18b4178db9480ceb037dba0aa80328d4d16696ea5c64736f6c634300081a0033",
									".code": [
										{
											"begin": 501,
											"end": 5173,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 501,
											"end": 5173,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 501,
											"end": 5173,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 501,
											"end": 5173,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 501,
											"end": 5173,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 5173,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 501,
											"end": 5173,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 5173,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 501,
											"end": 5173,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"UniswapV4/interfaces/IExtsload.sol",
								"UniswapV4/interfaces/IExttload.sol",
								"UniswapV4/interfaces/IHooks.sol",
								"UniswapV4/interfaces/IImmutableState.sol",
								"UniswapV4/interfaces/IPoolManager.sol",
								"UniswapV4/interfaces/IProtocolFees.sol",
								"UniswapV4/interfaces/IV4Router.sol",
								"UniswapV4/interfaces/external/IERC20Minimal.sol",
								"UniswapV4/interfaces/external/IERC6909Claims.sol",
								"UniswapV4/libraries/CustomRevert.sol",
								"UniswapV4/libraries/PathKey.sol",
								"UniswapV4/libraries/SafeCast.sol",
								"UniswapV4/types/BalanceDelta.sol",
								"UniswapV4/types/BeforeSwapDelta.sol",
								"UniswapV4/types/Currency.sol",
								"UniswapV4/types/PoolId.sol",
								"UniswapV4/types/PoolKey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"details\",\"type\":\"bytes\"}],\"name\":\"WrappedError\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"To use this library, declare `using CustomRevert for bytes4;` and replace `revert CustomError()` with `CustomError.selector.revertWith()`The functions may tamper with the free memory pointer but it is fine since the call context is exited immediately\",\"errors\":{\"WrappedError(address,bytes4,bytes,bytes)\":[{\"details\":\"ERC-7751 error for wrapping bubbled up reverts\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"Library for reverting with custom errors efficiently\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains functions for reverting with custom errors with different argument types efficiently\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"UniswapV4/libraries/CustomRevert.sol\":\"CustomRevert\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"UniswapV4/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains functions for reverting with custom errors with different argument types efficiently",
						"version": 1
					}
				}
			},
			"UniswapV4/libraries/PathKey.sol": {
				"PathKeyLibrary": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "PathKey Library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"UniswapV4/libraries/PathKey.sol\":449:1310  library PathKeyLibrary {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"UniswapV4/libraries/PathKey.sol\":449:1310  library PathKeyLibrary {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206b1efa80ba94d61ced44b172458ef162c8f5a3a2951d2f20bfa680f103857ab864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206b1efa80ba94d61ced44b172458ef162c8f5a3a2951d2f20bfa680f103857ab864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x1EFA80BA94D61CED44B17245 DUP15 CALL PUSH3 0xC8F5A3 LOG2 SWAP6 SAR 0x2F KECCAK256 0xBF 0xA6 DUP1 CALL SUB DUP6 PUSH27 0xB864736F6C634300081A0033000000000000000000000000000000 ",
							"sourceMap": "449:861:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;449:861:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206b1efa80ba94d61ced44b172458ef162c8f5a3a2951d2f20bfa680f103857ab864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x1EFA80BA94D61CED44B17245 DUP15 CALL PUSH3 0xC8F5A3 LOG2 SWAP6 SAR 0x2F KECCAK256 0xBF 0xA6 DUP1 CALL SUB DUP6 PUSH27 0xB864736F6C634300081A0033000000000000000000000000000000 ",
							"sourceMap": "449:861:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getPoolAndSwapDirection(struct PathKey calldata,Currency)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 449,
									"end": 1310,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 449,
									"end": 1310,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206b1efa80ba94d61ced44b172458ef162c8f5a3a2951d2f20bfa680f103857ab864736f6c634300081a0033",
									".code": [
										{
											"begin": 449,
											"end": 1310,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 449,
											"end": 1310,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 449,
											"end": 1310,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 449,
											"end": 1310,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 449,
											"end": 1310,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 1310,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 449,
											"end": 1310,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 1310,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 449,
											"end": 1310,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"UniswapV4/interfaces/IExtsload.sol",
								"UniswapV4/interfaces/IExttload.sol",
								"UniswapV4/interfaces/IHooks.sol",
								"UniswapV4/interfaces/IImmutableState.sol",
								"UniswapV4/interfaces/IPoolManager.sol",
								"UniswapV4/interfaces/IProtocolFees.sol",
								"UniswapV4/interfaces/IV4Router.sol",
								"UniswapV4/interfaces/external/IERC20Minimal.sol",
								"UniswapV4/interfaces/external/IERC6909Claims.sol",
								"UniswapV4/libraries/CustomRevert.sol",
								"UniswapV4/libraries/PathKey.sol",
								"UniswapV4/libraries/SafeCast.sol",
								"UniswapV4/types/BalanceDelta.sol",
								"UniswapV4/types/BeforeSwapDelta.sol",
								"UniswapV4/types/Currency.sol",
								"UniswapV4/types/PoolId.sol",
								"UniswapV4/types/PoolKey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"PathKey Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Functions for working with PathKeys\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"UniswapV4/libraries/PathKey.sol\":\"PathKeyLibrary\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"UniswapV4/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"UniswapV4/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"UniswapV4/interfaces/IHooks.sol\":{\"keccak256\":\"0x4c9571aed0c2b6ef11832545554fc11ffdb03746daaf5c73683c00600bfc7ec0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e78b34b58ce9de91b91943b4f3cc3ce121d0b151e123e8a600ac5ef64d91db6c\",\"dweb:/ipfs/QmRkaQnPCYwLrXgbpGujJTx32PaZK63KSPJJV1XmnQuCMb\"]},\"UniswapV4/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x3534f00531038e77ab8a7fc4d0a6e0993ee53fb7a396b1324ad917318ea46cea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a4a7e771828dc40848485b568a1cf514f553ace6653f4f4d1ad3f3e9cdb6c27\",\"dweb:/ipfs/QmTjzQ7KVYnrEWtxPER2E4MXzycgcznfzSDsZtd5turk5V\"]},\"UniswapV4/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"UniswapV4/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"UniswapV4/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"UniswapV4/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"UniswapV4/libraries/PathKey.sol\":{\"keccak256\":\"0x2fd3b57c431a1098173c57de5bf9692fa26a4830159a5ff13f6ff8180f98cd80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a0c2cb0e0d0bd722be4e070b32d7aab009123bdae8450b1be19db4ec77fce1e\",\"dweb:/ipfs/QmXKGFLq4t86EQwcB5gmvdqT7MyMUaMCkb97gUkZh9sv81\"]},\"UniswapV4/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"UniswapV4/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"UniswapV4/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"UniswapV4/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"UniswapV4/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"UniswapV4/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Functions for working with PathKeys",
						"version": 1
					}
				}
			},
			"UniswapV4/libraries/SafeCast.sol": {
				"SafeCast": {
					"abi": [
						{
							"inputs": [],
							"name": "SafeCastOverflow",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Safe casting methods",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"UniswapV4/libraries/SafeCast.sol\":201:2268  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"UniswapV4/libraries/SafeCast.sol\":201:2268  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122065dee0104821c71cfad4889fe76ec3ddb01c4e8857c8835deae15547328764ba64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122065dee0104821c71cfad4889fe76ec3ddb01c4e8857c8835deae15547328764ba64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xDEE0104821C7 SHR STATICCALL 0xD4 DUP9 SWAP16 0xE7 PUSH15 0xC3DDB01C4E8857C8835DEAE1554732 DUP8 PUSH5 0xBA64736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "201:2067:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;201:2067:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122065dee0104821c71cfad4889fe76ec3ddb01c4e8857c8835deae15547328764ba64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xDEE0104821C7 SHR STATICCALL 0xD4 DUP9 SWAP16 0xE7 PUSH15 0xC3DDB01C4E8857C8835DEAE1554732 DUP8 PUSH5 0xBA64736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "201:2067:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"toInt128(int256)": "infinite",
								"toInt128(uint256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toUint128(int128)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint160(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 201,
									"end": 2268,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 201,
									"end": 2268,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122065dee0104821c71cfad4889fe76ec3ddb01c4e8857c8835deae15547328764ba64736f6c634300081a0033",
									".code": [
										{
											"begin": 201,
											"end": 2268,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 201,
											"end": 2268,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 201,
											"end": 2268,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 201,
											"end": 2268,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 201,
											"end": 2268,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 201,
											"end": 2268,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 201,
											"end": 2268,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 2268,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 201,
											"end": 2268,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"UniswapV4/interfaces/IExtsload.sol",
								"UniswapV4/interfaces/IExttload.sol",
								"UniswapV4/interfaces/IHooks.sol",
								"UniswapV4/interfaces/IImmutableState.sol",
								"UniswapV4/interfaces/IPoolManager.sol",
								"UniswapV4/interfaces/IProtocolFees.sol",
								"UniswapV4/interfaces/IV4Router.sol",
								"UniswapV4/interfaces/external/IERC20Minimal.sol",
								"UniswapV4/interfaces/external/IERC6909Claims.sol",
								"UniswapV4/libraries/CustomRevert.sol",
								"UniswapV4/libraries/PathKey.sol",
								"UniswapV4/libraries/SafeCast.sol",
								"UniswapV4/types/BalanceDelta.sol",
								"UniswapV4/types/BeforeSwapDelta.sol",
								"UniswapV4/types/Currency.sol",
								"UniswapV4/types/PoolId.sol",
								"UniswapV4/types/PoolKey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SafeCastOverflow\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Safe casting methods\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for safely casting between types\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"UniswapV4/libraries/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"UniswapV4/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"UniswapV4/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains methods for safely casting between types",
						"version": 1
					}
				}
			},
			"UniswapV4/types/BalanceDelta.sol": {
				"BalanceDeltaLibrary": {
					"abi": [
						{
							"inputs": [],
							"name": "ZERO_DELTA",
							"outputs": [
								{
									"internalType": "BalanceDelta",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"UniswapV4/types/BalanceDelta.sol\":1819:2338  library BalanceDeltaLibrary {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"UniswapV4/types/BalanceDelta.sol\":1819:2338  library BalanceDeltaLibrary {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x91cb4669\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"UniswapV4/types/BalanceDelta.sol\":1889:1951  BalanceDelta public constant ZERO_DELTA = BalanceDelta.wrap(0) */\n    tag_2:\n      tag_3\n        /* \"UniswapV4/types/BalanceDelta.sol\":1949:1950  0 */\n      0x00\n        /* \"UniswapV4/types/BalanceDelta.sol\":1889:1951  BalanceDelta public constant ZERO_DELTA = BalanceDelta.wrap(0) */\n      dup2\n      jump\n    tag_3:\n      mload(0x40)\n        /* \"#utility.yul\":200:225   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":188:190   */\n      0x20\n        /* \"#utility.yul\":173:191   */\n      add\n        /* \"UniswapV4/types/BalanceDelta.sol\":1889:1951  BalanceDelta public constant ZERO_DELTA = BalanceDelta.wrap(0) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n\n    auxdata: 0xa2646970667358221220bad37d488065345984c5963893e42e2bd12e06f7bb04e4e88f46bf4e9fe40f3b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60846032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106032575f3560e01c806391cb4669146036575b5f80fd5b603c5f81565b60405190815260200160405180910390f3fea2646970667358221220bad37d488065345984c5963893e42e2bd12e06f7bb04e4e88f46bf4e9fe40f3b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x84 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91CB4669 EQ PUSH1 0x36 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3C PUSH0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xD3 PUSH30 0x488065345984C5963893E42E2BD12E06F7BB04E4E88F46BF4E9FE40F3B64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "1819:519:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1819:519:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ZERO_DELTA_1417": {
									"entryPoint": null,
									"id": 1417,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_userDefinedValueType$_BalanceDelta_$1280__to_t_int256__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:233:17",
										"nodeType": "YulBlock",
										"src": "0:233:17",
										"statements": [
											{
												"nativeSrc": "6:3:17",
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "155:76:17",
													"nodeType": "YulBlock",
													"src": "155:76:17",
													"statements": [
														{
															"nativeSrc": "165:26:17",
															"nodeType": "YulAssignment",
															"src": "165:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "177:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "177:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "188:2:17",
																		"nodeType": "YulLiteral",
																		"src": "188:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "173:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "173:3:17"
																},
																"nativeSrc": "173:18:17",
																"nodeType": "YulFunctionCall",
																"src": "173:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "165:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "165:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "207:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "207:9:17"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "218:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "218:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "200:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "200:6:17"
																},
																"nativeSrc": "200:25:17",
																"nodeType": "YulFunctionCall",
																"src": "200:25:17"
															},
															"nativeSrc": "200:25:17",
															"nodeType": "YulExpressionStatement",
															"src": "200:25:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_userDefinedValueType$_BalanceDelta_$1280__to_t_int256__fromStack_library_reversed",
												"nativeSrc": "14:217:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "124:9:17",
														"nodeType": "YulTypedName",
														"src": "124:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "135:6:17",
														"nodeType": "YulTypedName",
														"src": "135:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "146:4:17",
														"nodeType": "YulTypedName",
														"src": "146:4:17",
														"type": ""
													}
												],
												"src": "14:217:17"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_userDefinedValueType$_BalanceDelta_$1280__to_t_int256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106032575f3560e01c806391cb4669146036575b5f80fd5b603c5f81565b60405190815260200160405180910390f3fea2646970667358221220bad37d488065345984c5963893e42e2bd12e06f7bb04e4e88f46bf4e9fe40f3b64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91CB4669 EQ PUSH1 0x36 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3C PUSH0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xD3 PUSH30 0x488065345984C5963893E42E2BD12E06F7BB04E4E88F46BF4E9FE40F3B64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "1819:519:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;1889:62;;1949:1;1889:62;;;;;200:25:17;;;188:2;173:18;1889:62:12;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "26400",
								"executionCost": "108",
								"totalCost": "26508"
							},
							"external": {
								"ZERO_DELTA()": "143"
							},
							"internal": {
								"amount0(BalanceDelta)": "infinite",
								"amount1(BalanceDelta)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1819,
									"end": 2338,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1819,
									"end": 2338,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bad37d488065345984c5963893e42e2bd12e06f7bb04e4e88f46bf4e9fe40f3b64736f6c634300081a0033",
									".code": [
										{
											"begin": 1819,
											"end": 2338,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "PUSH",
											"source": 12,
											"value": "91CB4669"
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1819,
											"end": 2338,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1949,
											"end": 1950,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 200,
											"end": 225,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 200,
											"end": 225,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 200,
											"end": 225,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 188,
											"end": 190,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 173,
											"end": 191,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 1951,
											"name": "RETURN",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"UniswapV4/interfaces/IExtsload.sol",
								"UniswapV4/interfaces/IExttload.sol",
								"UniswapV4/interfaces/IHooks.sol",
								"UniswapV4/interfaces/IImmutableState.sol",
								"UniswapV4/interfaces/IPoolManager.sol",
								"UniswapV4/interfaces/IProtocolFees.sol",
								"UniswapV4/interfaces/IV4Router.sol",
								"UniswapV4/interfaces/external/IERC20Minimal.sol",
								"UniswapV4/interfaces/external/IERC6909Claims.sol",
								"UniswapV4/libraries/CustomRevert.sol",
								"UniswapV4/libraries/PathKey.sol",
								"UniswapV4/libraries/SafeCast.sol",
								"UniswapV4/types/BalanceDelta.sol",
								"UniswapV4/types/BeforeSwapDelta.sol",
								"UniswapV4/types/Currency.sol",
								"UniswapV4/types/PoolId.sol",
								"UniswapV4/types/PoolKey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ZERO_DELTA()": "91cb4669"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ZERO_DELTA\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ZERO_DELTA()\":{\"notice\":\"A BalanceDelta of 0\"}},\"notice\":\"Library for getting the amount0 and amount1 deltas from the BalanceDelta type\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"UniswapV4/types/BalanceDelta.sol\":\"BalanceDeltaLibrary\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"UniswapV4/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"UniswapV4/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"UniswapV4/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"ZERO_DELTA()": {
								"notice": "A BalanceDelta of 0"
							}
						},
						"notice": "Library for getting the amount0 and amount1 deltas from the BalanceDelta type",
						"version": 1
					}
				}
			},
			"UniswapV4/types/BeforeSwapDelta.sol": {
				"BeforeSwapDeltaLibrary": {
					"abi": [
						{
							"inputs": [],
							"name": "ZERO_DELTA",
							"outputs": [
								{
									"internalType": "BeforeSwapDelta",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"UniswapV4/types/BeforeSwapDelta.sol\":688:1465  library BeforeSwapDeltaLibrary {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"UniswapV4/types/BeforeSwapDelta.sol\":688:1465  library BeforeSwapDeltaLibrary {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x91cb4669\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"UniswapV4/types/BeforeSwapDelta.sol\":764:832  BeforeSwapDelta public constant ZERO_DELTA = BeforeSwapDelta.wrap(0) */\n    tag_2:\n      tag_3\n        /* \"UniswapV4/types/BeforeSwapDelta.sol\":830:831  0 */\n      0x00\n        /* \"UniswapV4/types/BeforeSwapDelta.sol\":764:832  BeforeSwapDelta public constant ZERO_DELTA = BeforeSwapDelta.wrap(0) */\n      dup2\n      jump\n    tag_3:\n      mload(0x40)\n        /* \"#utility.yul\":203:228   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":191:193   */\n      0x20\n        /* \"#utility.yul\":176:194   */\n      add\n        /* \"UniswapV4/types/BeforeSwapDelta.sol\":764:832  BeforeSwapDelta public constant ZERO_DELTA = BeforeSwapDelta.wrap(0) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n\n    auxdata: 0xa2646970667358221220fbc61132e8329703cd04feab56f3c8947ed64a6482de59c06e0149c729516f3064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60846032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106032575f3560e01c806391cb4669146036575b5f80fd5b603c5f81565b60405190815260200160405180910390f3fea2646970667358221220fbc61132e8329703cd04feab56f3c8947ed64a6482de59c06e0149c729516f3064736f6c634300081a0033",
							"opcodes": "PUSH1 0x84 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91CB4669 EQ PUSH1 0x36 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3C PUSH0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0xC6 GT ORIGIN 0xE8 ORIGIN SWAP8 SUB 0xCD DIV INVALID 0xAB JUMP RETURN 0xC8 SWAP5 PUSH31 0xD64A6482DE59C06E0149C729516F3064736F6C634300081A00330000000000 ",
							"sourceMap": "688:777:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;688:777:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ZERO_DELTA_1463": {
									"entryPoint": null,
									"id": 1463,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_userDefinedValueType$_BeforeSwapDelta_$1442__to_t_int256__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:236:17",
										"nodeType": "YulBlock",
										"src": "0:236:17",
										"statements": [
											{
												"nativeSrc": "6:3:17",
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "158:76:17",
													"nodeType": "YulBlock",
													"src": "158:76:17",
													"statements": [
														{
															"nativeSrc": "168:26:17",
															"nodeType": "YulAssignment",
															"src": "168:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "180:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "191:2:17",
																		"nodeType": "YulLiteral",
																		"src": "191:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "176:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "176:3:17"
																},
																"nativeSrc": "176:18:17",
																"nodeType": "YulFunctionCall",
																"src": "176:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "168:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "168:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "210:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "210:9:17"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "221:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "221:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "203:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:17"
																},
																"nativeSrc": "203:25:17",
																"nodeType": "YulFunctionCall",
																"src": "203:25:17"
															},
															"nativeSrc": "203:25:17",
															"nodeType": "YulExpressionStatement",
															"src": "203:25:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_userDefinedValueType$_BeforeSwapDelta_$1442__to_t_int256__fromStack_library_reversed",
												"nativeSrc": "14:220:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "127:9:17",
														"nodeType": "YulTypedName",
														"src": "127:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "138:6:17",
														"nodeType": "YulTypedName",
														"src": "138:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "149:4:17",
														"nodeType": "YulTypedName",
														"src": "149:4:17",
														"type": ""
													}
												],
												"src": "14:220:17"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_userDefinedValueType$_BeforeSwapDelta_$1442__to_t_int256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106032575f3560e01c806391cb4669146036575b5f80fd5b603c5f81565b60405190815260200160405180910390f3fea2646970667358221220fbc61132e8329703cd04feab56f3c8947ed64a6482de59c06e0149c729516f3064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91CB4669 EQ PUSH1 0x36 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3C PUSH0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0xC6 GT ORIGIN 0xE8 ORIGIN SWAP8 SUB 0xCD DIV INVALID 0xAB JUMP RETURN 0xC8 SWAP5 PUSH31 0xD64A6482DE59C06E0149C729516F3064736F6C634300081A00330000000000 ",
							"sourceMap": "688:777:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;764:68;;830:1;764:68;;;;;203:25:17;;;191:2;176:18;764:68:13;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "26400",
								"executionCost": "108",
								"totalCost": "26508"
							},
							"external": {
								"ZERO_DELTA()": "143"
							},
							"internal": {
								"getSpecifiedDelta(BeforeSwapDelta)": "infinite",
								"getUnspecifiedDelta(BeforeSwapDelta)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 688,
									"end": 1465,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 688,
									"end": 1465,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fbc61132e8329703cd04feab56f3c8947ed64a6482de59c06e0149c729516f3064736f6c634300081a0033",
									".code": [
										{
											"begin": 688,
											"end": 1465,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "PUSH",
											"source": 13,
											"value": "91CB4669"
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 688,
											"end": 1465,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 764,
											"end": 832,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 764,
											"end": 832,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 764,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 832,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 764,
											"end": 832,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 764,
											"end": 832,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 764,
											"end": 832,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 764,
											"end": 832,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 832,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 203,
											"end": 228,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 203,
											"end": 228,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 203,
											"end": 228,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 191,
											"end": 193,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 176,
											"end": 194,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 764,
											"end": 832,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 832,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 764,
											"end": 832,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 764,
											"end": 832,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 764,
											"end": 832,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 764,
											"end": 832,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 764,
											"end": 832,
											"name": "RETURN",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"UniswapV4/interfaces/IExtsload.sol",
								"UniswapV4/interfaces/IExttload.sol",
								"UniswapV4/interfaces/IHooks.sol",
								"UniswapV4/interfaces/IImmutableState.sol",
								"UniswapV4/interfaces/IPoolManager.sol",
								"UniswapV4/interfaces/IProtocolFees.sol",
								"UniswapV4/interfaces/IV4Router.sol",
								"UniswapV4/interfaces/external/IERC20Minimal.sol",
								"UniswapV4/interfaces/external/IERC6909Claims.sol",
								"UniswapV4/libraries/CustomRevert.sol",
								"UniswapV4/libraries/PathKey.sol",
								"UniswapV4/libraries/SafeCast.sol",
								"UniswapV4/types/BalanceDelta.sol",
								"UniswapV4/types/BeforeSwapDelta.sol",
								"UniswapV4/types/Currency.sol",
								"UniswapV4/types/PoolId.sol",
								"UniswapV4/types/PoolKey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ZERO_DELTA()": "91cb4669"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ZERO_DELTA\",\"outputs\":[{\"internalType\":\"BeforeSwapDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ZERO_DELTA()\":{\"notice\":\"A BeforeSwapDelta of 0\"}},\"notice\":\"Library for getting the specified and unspecified deltas from the BeforeSwapDelta type\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"UniswapV4/types/BeforeSwapDelta.sol\":\"BeforeSwapDeltaLibrary\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"UniswapV4/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"ZERO_DELTA()": {
								"notice": "A BeforeSwapDelta of 0"
							}
						},
						"notice": "Library for getting the specified and unspecified deltas from the BeforeSwapDelta type",
						"version": 1
					}
				}
			},
			"UniswapV4/types/Currency.sol": {
				"CurrencyLibrary": {
					"abi": [
						{
							"inputs": [],
							"name": "ERC20TransferFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NativeTransferFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ADDRESS_ZERO",
							"outputs": [
								{
									"internalType": "Currency",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This library allows for transferring and holding native tokens and ERC20 tokens",
						"kind": "dev",
						"methods": {},
						"title": "CurrencyLibrary",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"UniswapV4/types/Currency.sol\":1059:5457  library CurrencyLibrary {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"UniswapV4/types/Currency.sol\":1059:5457  library CurrencyLibrary {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x66e79509\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"UniswapV4/types/Currency.sol\":1400:1465  Currency public constant ADDRESS_ZERO = Currency.wrap(address(0)) */\n    tag_2:\n      tag_3\n        /* \"UniswapV4/types/Currency.sol\":1462:1463  0 */\n      0x00\n        /* \"UniswapV4/types/Currency.sol\":1400:1465  Currency public constant ADDRESS_ZERO = Currency.wrap(address(0)) */\n      dup2\n      jump\n    tag_3:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":215:247   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":197:248   */\n      dup2\n      mstore\n        /* \"#utility.yul\":185:187   */\n      0x20\n        /* \"#utility.yul\":170:188   */\n      add\n        /* \"UniswapV4/types/Currency.sol\":1400:1465  Currency public constant ADDRESS_ZERO = Currency.wrap(address(0)) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n\n    auxdata: 0xa2646970667358221220cf1b30976896ad7061e411f086c1e16f5a18099c7330be9d815886f4ec31ca0a64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608e6032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106032575f3560e01c806366e79509146036575b5f80fd5b603c5f81565b6040516001600160a01b03909116815260200160405180910390f3fea2646970667358221220cf1b30976896ad7061e411f086c1e16f5a18099c7330be9d815886f4ec31ca0a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x8E PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x66E79509 EQ PUSH1 0x36 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3C PUSH0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF SHL ADDRESS SWAP8 PUSH9 0x96AD7061E411F086C1 0xE1 PUSH16 0x5A18099C7330BE9D815886F4EC31CA0A PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1059:4398:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1059:4398:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADDRESS_ZERO_1611": {
									"entryPoint": null,
									"id": 1611,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_userDefinedValueType$_Currency_$1494__to_t_address__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:256:17",
										"nodeType": "YulBlock",
										"src": "0:256:17",
										"statements": [
											{
												"nativeSrc": "6:3:17",
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "152:102:17",
													"nodeType": "YulBlock",
													"src": "152:102:17",
													"statements": [
														{
															"nativeSrc": "162:26:17",
															"nodeType": "YulAssignment",
															"src": "162:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "174:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "174:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "185:2:17",
																		"nodeType": "YulLiteral",
																		"src": "185:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "170:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "170:3:17"
																},
																"nativeSrc": "170:18:17",
																"nodeType": "YulFunctionCall",
																"src": "170:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "162:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "162:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "204:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "204:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "219:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "219:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "235:3:17",
																								"nodeType": "YulLiteral",
																								"src": "235:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "240:1:17",
																								"nodeType": "YulLiteral",
																								"src": "240:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "231:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:17"
																						},
																						"nativeSrc": "231:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "231:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "244:1:17",
																						"nodeType": "YulLiteral",
																						"src": "244:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "227:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "227:3:17"
																				},
																				"nativeSrc": "227:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "227:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "215:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "215:3:17"
																		},
																		"nativeSrc": "215:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "215:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "197:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "197:6:17"
																},
																"nativeSrc": "197:51:17",
																"nodeType": "YulFunctionCall",
																"src": "197:51:17"
															},
															"nativeSrc": "197:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "197:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_userDefinedValueType$_Currency_$1494__to_t_address__fromStack_library_reversed",
												"nativeSrc": "14:240:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "121:9:17",
														"nodeType": "YulTypedName",
														"src": "121:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "132:6:17",
														"nodeType": "YulTypedName",
														"src": "132:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "143:4:17",
														"nodeType": "YulTypedName",
														"src": "143:4:17",
														"type": ""
													}
												],
												"src": "14:240:17"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_userDefinedValueType$_Currency_$1494__to_t_address__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106032575f3560e01c806366e79509146036575b5f80fd5b603c5f81565b6040516001600160a01b03909116815260200160405180910390f3fea2646970667358221220cf1b30976896ad7061e411f086c1e16f5a18099c7330be9d815886f4ec31ca0a64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x66E79509 EQ PUSH1 0x36 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3C PUSH0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF SHL ADDRESS SWAP8 PUSH9 0x96AD7061E411F086C1 0xE1 PUSH16 0x5A18099C7330BE9D815886F4EC31CA0A PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1059:4398:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;1400:65;;1462:1;1400:65;;;;;-1:-1:-1;;;;;215:32:17;;;197:51;;185:2;170:18;1400:65:14;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "28400",
								"executionCost": "108",
								"totalCost": "28508"
							},
							"external": {
								"ADDRESS_ZERO()": "164"
							},
							"internal": {
								"balanceOf(Currency,address)": "infinite",
								"balanceOfSelf(Currency)": "infinite",
								"fromId(uint256)": "infinite",
								"isAddressZero(Currency)": "infinite",
								"toId(Currency)": "infinite",
								"transfer(Currency,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1059,
									"end": 5457,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 5457,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cf1b30976896ad7061e411f086c1e16f5a18099c7330be9d815886f4ec31ca0a64736f6c634300081a0033",
									".code": [
										{
											"begin": 1059,
											"end": 5457,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "PUSH",
											"source": 14,
											"value": "66E79509"
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1059,
											"end": 5457,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 1462,
											"end": 1463,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "tag",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 215,
											"end": 247,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 215,
											"end": 247,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 215,
											"end": 247,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 197,
											"end": 248,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 197,
											"end": 248,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 185,
											"end": 187,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 170,
											"end": 188,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1400,
											"end": 1465,
											"name": "RETURN",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"UniswapV4/interfaces/IExtsload.sol",
								"UniswapV4/interfaces/IExttload.sol",
								"UniswapV4/interfaces/IHooks.sol",
								"UniswapV4/interfaces/IImmutableState.sol",
								"UniswapV4/interfaces/IPoolManager.sol",
								"UniswapV4/interfaces/IProtocolFees.sol",
								"UniswapV4/interfaces/IV4Router.sol",
								"UniswapV4/interfaces/external/IERC20Minimal.sol",
								"UniswapV4/interfaces/external/IERC6909Claims.sol",
								"UniswapV4/libraries/CustomRevert.sol",
								"UniswapV4/libraries/PathKey.sol",
								"UniswapV4/libraries/SafeCast.sol",
								"UniswapV4/types/BalanceDelta.sol",
								"UniswapV4/types/BeforeSwapDelta.sol",
								"UniswapV4/types/Currency.sol",
								"UniswapV4/types/PoolId.sol",
								"UniswapV4/types/PoolKey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADDRESS_ZERO()": "66e79509"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC20TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ADDRESS_ZERO\",\"outputs\":[{\"internalType\":\"Currency\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This library allows for transferring and holding native tokens and ERC20 tokens\",\"kind\":\"dev\",\"methods\":{},\"title\":\"CurrencyLibrary\",\"version\":1},\"userdoc\":{\"errors\":{\"ERC20TransferFailed()\":[{\"notice\":\"Additional context for ERC-7751 wrapped error when an ERC20 transfer fails\"}],\"NativeTransferFailed()\":[{\"notice\":\"Additional context for ERC-7751 wrapped error when a native transfer fails\"}]},\"kind\":\"user\",\"methods\":{\"ADDRESS_ZERO()\":{\"notice\":\"A constant to represent the native currency\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"UniswapV4/types/Currency.sol\":\"CurrencyLibrary\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"UniswapV4/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"UniswapV4/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"UniswapV4/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ERC20TransferFailed()": [
								{
									"notice": "Additional context for ERC-7751 wrapped error when an ERC20 transfer fails"
								}
							],
							"NativeTransferFailed()": [
								{
									"notice": "Additional context for ERC-7751 wrapped error when a native transfer fails"
								}
							]
						},
						"kind": "user",
						"methods": {
							"ADDRESS_ZERO()": {
								"notice": "A constant to represent the native currency"
							}
						},
						"version": 1
					}
				}
			},
			"UniswapV4/types/PoolId.sol": {
				"PoolIdLibrary": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"UniswapV4/types/PoolId.sol\":173:538  library PoolIdLibrary {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"UniswapV4/types/PoolId.sol\":173:538  library PoolIdLibrary {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203f5578f6cfcdef7641052b36e74c3aa8a7328dd906c1afc1dc16afa8a36eaf1964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203f5578f6cfcdef7641052b36e74c3aa8a7328dd906c1afc1dc16afa8a36eaf1964736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH SSTORE PUSH25 0xF6CFCDEF7641052B36E74C3AA8A7328DD906C1AFC1DC16AFA8 LOG3 PUSH15 0xAF1964736F6C634300081A00330000 ",
							"sourceMap": "173:365:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;173:365:15;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203f5578f6cfcdef7641052b36e74c3aa8a7328dd906c1afc1dc16afa8a36eaf1964736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH SSTORE PUSH25 0xF6CFCDEF7641052B36E74C3AA8A7328DD906C1AFC1DC16AFA8 LOG3 PUSH15 0xAF1964736F6C634300081A00330000 ",
							"sourceMap": "173:365:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"toId(struct PoolKey memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 173,
									"end": 538,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 173,
									"end": 538,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 173,
									"end": 538,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 173,
									"end": 538,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 173,
									"end": 538,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 173,
									"end": 538,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 173,
									"end": 538,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 173,
									"end": 538,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 173,
									"end": 538,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 173,
									"end": 538,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 173,
									"end": 538,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 173,
									"end": 538,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 173,
									"end": 538,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 173,
									"end": 538,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 173,
									"end": 538,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 173,
									"end": 538,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 173,
									"end": 538,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 173,
									"end": 538,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 173,
									"end": 538,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 173,
									"end": 538,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 173,
									"end": 538,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203f5578f6cfcdef7641052b36e74c3aa8a7328dd906c1afc1dc16afa8a36eaf1964736f6c634300081a0033",
									".code": [
										{
											"begin": 173,
											"end": 538,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 173,
											"end": 538,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 173,
											"end": 538,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 173,
											"end": 538,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 173,
											"end": 538,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 173,
											"end": 538,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 173,
											"end": 538,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 538,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 173,
											"end": 538,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"UniswapV4/interfaces/IExtsload.sol",
								"UniswapV4/interfaces/IExttload.sol",
								"UniswapV4/interfaces/IHooks.sol",
								"UniswapV4/interfaces/IImmutableState.sol",
								"UniswapV4/interfaces/IPoolManager.sol",
								"UniswapV4/interfaces/IProtocolFees.sol",
								"UniswapV4/interfaces/IV4Router.sol",
								"UniswapV4/interfaces/external/IERC20Minimal.sol",
								"UniswapV4/interfaces/external/IERC6909Claims.sol",
								"UniswapV4/libraries/CustomRevert.sol",
								"UniswapV4/libraries/PathKey.sol",
								"UniswapV4/libraries/SafeCast.sol",
								"UniswapV4/types/BalanceDelta.sol",
								"UniswapV4/types/BeforeSwapDelta.sol",
								"UniswapV4/types/Currency.sol",
								"UniswapV4/types/PoolId.sol",
								"UniswapV4/types/PoolKey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Library for computing the ID of a pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"UniswapV4/types/PoolId.sol\":\"PoolIdLibrary\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"UniswapV4/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"UniswapV4/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"UniswapV4/interfaces/IHooks.sol\":{\"keccak256\":\"0x4c9571aed0c2b6ef11832545554fc11ffdb03746daaf5c73683c00600bfc7ec0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e78b34b58ce9de91b91943b4f3cc3ce121d0b151e123e8a600ac5ef64d91db6c\",\"dweb:/ipfs/QmRkaQnPCYwLrXgbpGujJTx32PaZK63KSPJJV1XmnQuCMb\"]},\"UniswapV4/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x3534f00531038e77ab8a7fc4d0a6e0993ee53fb7a396b1324ad917318ea46cea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a4a7e771828dc40848485b568a1cf514f553ace6653f4f4d1ad3f3e9cdb6c27\",\"dweb:/ipfs/QmTjzQ7KVYnrEWtxPER2E4MXzycgcznfzSDsZtd5turk5V\"]},\"UniswapV4/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"UniswapV4/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"UniswapV4/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"UniswapV4/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"UniswapV4/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"UniswapV4/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"UniswapV4/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"UniswapV4/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"UniswapV4/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"UniswapV4/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Library for computing the ID of a pool",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"UniswapV4/interfaces/IExtsload.sol": {
				"ast": {
					"absolutePath": "UniswapV4/interfaces/IExtsload.sol",
					"exportedSymbols": {
						"IExtsload": [
							32
						]
					},
					"id": 33,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IExtsload",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "57:77:0",
								"text": "@notice Interface for functions to access any storage slot in a contract"
							},
							"fullyImplemented": false,
							"id": 32,
							"linearizedBaseContracts": [
								32
							],
							"name": "IExtsload",
							"nameLocation": "144:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "160:166:0",
										"text": "@notice Called by external contracts to access granular pool state\n @param slot Key of slot to sload\n @return value The value of the slot as bytes32"
									},
									"functionSelector": "1e2eaeaf",
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "extsload",
									"nameLocation": "340:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "357:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "349:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:14:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "394:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "386:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 7,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "386:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "385:15:0"
									},
									"scope": 32,
									"src": "331:70:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "407:240:0",
										"text": "@notice Called by external contracts to access granular pool state\n @param startSlot Key of slot to start sloading from\n @param nSlots Number of slots to load into return value\n @return values List of loaded values."
									},
									"functionSelector": "35fd631a",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "extsload",
									"nameLocation": "661:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "startSlot",
												"nameLocation": "678:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "670:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 12,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "nSlots",
												"nameLocation": "697:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "689:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "669:35:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "745:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "728:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 17,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "728:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 18,
													"nodeType": "ArrayTypeName",
													"src": "728:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:25:0"
									},
									"scope": 32,
									"src": "652:101:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "759:164:0",
										"text": "@notice Called by external contracts to access sparse pool state\n @param slots List of slots to SLOAD from.\n @return values List of loaded values."
									},
									"functionSelector": "dbd035ff",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "extsload",
									"nameLocation": "937:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "slots",
												"nameLocation": "965:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "946:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 23,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "946:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 24,
													"nodeType": "ArrayTypeName",
													"src": "946:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:26:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "1012:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "995:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 27,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "995:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 28,
													"nodeType": "ArrayTypeName",
													"src": "995:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "994:25:0"
									},
									"scope": 32,
									"src": "928:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 33,
							"src": "134:888:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:991:0"
				},
				"id": 0
			},
			"UniswapV4/interfaces/IExttload.sol": {
				"ast": {
					"absolutePath": "UniswapV4/interfaces/IExttload.sol",
					"exportedSymbols": {
						"IExttload": [
							54
						]
					},
					"id": 55,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 34,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IExttload",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 35,
								"nodeType": "StructuredDocumentation",
								"src": "58:87:1",
								"text": "@notice Interface for functions to access any transient storage slot in a contract"
							},
							"fullyImplemented": false,
							"id": 54,
							"linearizedBaseContracts": [
								54
							],
							"name": "IExttload",
							"nameLocation": "155:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "171:180:1",
										"text": "@notice Called by external contracts to access transient storage of the contract\n @param slot Key of slot to tload\n @return value The value of the slot as bytes32"
									},
									"functionSelector": "f135baaa",
									"id": 43,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exttload",
									"nameLocation": "365:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "382:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "374:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 37,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "373:14:1"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "419:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "411:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 40,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "410:15:1"
									},
									"scope": 54,
									"src": "356:70:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "432:167:1",
										"text": "@notice Called by external contracts to access sparse transient pool state\n @param slots List of slots to tload\n @return values List of loaded values"
									},
									"functionSelector": "9bf6645f",
									"id": 53,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exttload",
									"nameLocation": "613:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "slots",
												"nameLocation": "641:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "622:24:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 45,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "622:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 46,
													"nodeType": "ArrayTypeName",
													"src": "622:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:26:1"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "688:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "671:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 49,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "671:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 50,
													"nodeType": "ArrayTypeName",
													"src": "671:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "670:25:1"
									},
									"scope": 54,
									"src": "604:92:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 55,
							"src": "145:553:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:667:1"
				},
				"id": 1
			},
			"UniswapV4/interfaces/IHooks.sol": {
				"ast": {
					"absolutePath": "UniswapV4/interfaces/IHooks.sol",
					"exportedSymbols": {
						"BalanceDelta": [
							1280
						],
						"BeforeSwapDelta": [
							1442
						],
						"IHooks": [
							252
						],
						"IPoolManager": [
							564
						],
						"PoolKey": [
							1840
						]
					},
					"id": 253,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 56,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "UniswapV4/types/PoolKey.sol",
							"file": "../types/PoolKey.sol",
							"id": 58,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 253,
							"sourceUnit": 1841,
							"src": "57:45:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 57,
										"name": "PoolKey",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1840,
										"src": "65:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "UniswapV4/types/BalanceDelta.sol",
							"file": "../types/BalanceDelta.sol",
							"id": 60,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 253,
							"sourceUnit": 1439,
							"src": "103:55:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 59,
										"name": "BalanceDelta",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1280,
										"src": "111:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "UniswapV4/interfaces/IPoolManager.sol",
							"file": "./IPoolManager.sol",
							"id": 62,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 253,
							"sourceUnit": 565,
							"src": "159:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 61,
										"name": "IPoolManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 564,
										"src": "167:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "UniswapV4/types/BeforeSwapDelta.sol",
							"file": "../types/BeforeSwapDelta.sol",
							"id": 64,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 253,
							"sourceUnit": 1487,
							"src": "208:61:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 63,
										"name": "BeforeSwapDelta",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "216:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IHooks",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 65,
								"nodeType": "StructuredDocumentation",
								"src": "271:485:2",
								"text": "@notice V4 decides whether to invoke specific hooks by inspecting the least significant bits\n of the address that the hooks contract is deployed to.\n For example, a hooks contract deployed to address: 0x0000000000000000000000000000000000002400\n has the lowest bits '10 0100 0000 0000' which would cause the 'before initialize' and 'after add liquidity' hooks to be used.\n See the Hooks library for the full spec.\n @dev Should only be callable by the v4 PoolManager."
							},
							"fullyImplemented": false,
							"id": 252,
							"linearizedBaseContracts": [
								252
							],
							"name": "IHooks",
							"nameLocation": "766:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "779:322:2",
										"text": "@notice The hook called before the state of a pool is initialized\n @param sender The initial msg.sender for the initialize call\n @param key The key for the pool being initialized\n @param sqrtPriceX96 The sqrt(price) of the pool as a Q64.96\n @return bytes4 The function selector for the hook"
									},
									"functionSelector": "dc98354e",
									"id": 78,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beforeInitialize",
									"nameLocation": "1115:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1140:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "1132:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1132:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1165:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "1148:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1840_calldata_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 70,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 69,
														"name": "PoolKey",
														"nameLocations": [
															"1148:7:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1840,
														"src": "1148:7:2"
													},
													"referencedDeclaration": 1840,
													"src": "1148:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1840_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1178:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "1170:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 72,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1170:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1131:60:2"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "1210:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 75,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1210:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1209:8:2"
									},
									"scope": 252,
									"src": "1106:112:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "1224:399:2",
										"text": "@notice The hook called after the state of a pool is initialized\n @param sender The initial msg.sender for the initialize call\n @param key The key for the pool being initialized\n @param sqrtPriceX96 The sqrt(price) of the pool as a Q64.96\n @param tick The current tick after the state of a pool is initialized\n @return bytes4 The function selector for the hook"
									},
									"functionSelector": "6fe7e6eb",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "afterInitialize",
									"nameLocation": "1637:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1661:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1653:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1686:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1669:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1840_calldata_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 83,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 82,
														"name": "PoolKey",
														"nameLocations": [
															"1669:7:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1840,
														"src": "1669:7:2"
													},
													"referencedDeclaration": 1840,
													"src": "1669:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1840_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1699:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1691:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 85,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1691:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1713:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 87,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1713:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1652:72:2"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1759:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 90,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1759:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1758:8:2"
									},
									"scope": 252,
									"src": "1628:139:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "1773:402:2",
										"text": "@notice The hook called before liquidity is added\n @param sender The initial msg.sender for the add liquidity call\n @param key The key for the pool\n @param params The parameters for adding liquidity\n @param hookData Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\n @return bytes4 The function selector for the hook"
									},
									"functionSelector": "259982e5",
									"id": 109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beforeAddLiquidity",
									"nameLocation": "2189:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2225:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "2217:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2217:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2258:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "2241:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1840_calldata_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 98,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 97,
														"name": "PoolKey",
														"nameLocations": [
															"2241:7:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1840,
														"src": "2241:7:2"
													},
													"referencedDeclaration": 1840,
													"src": "2241:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1840_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2315:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "2271:50:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ModifyLiquidityParams_$434_calldata_ptr",
													"typeString": "struct IPoolManager.ModifyLiquidityParams"
												},
												"typeName": {
													"id": 101,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 100,
														"name": "IPoolManager.ModifyLiquidityParams",
														"nameLocations": [
															"2271:12:2",
															"2284:21:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 434,
														"src": "2271:34:2"
													},
													"referencedDeclaration": 434,
													"src": "2271:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ModifyLiquidityParams_$434_storage_ptr",
														"typeString": "struct IPoolManager.ModifyLiquidityParams"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "2346:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "2331:23:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2331:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:153:2"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "2379:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 106,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2379:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2378:8:2"
									},
									"scope": 252,
									"src": "2180:207:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "2393:781:2",
										"text": "@notice The hook called after liquidity is added\n @param sender The initial msg.sender for the add liquidity call\n @param key The key for the pool\n @param params The parameters for adding liquidity\n @param delta The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta\n @param feesAccrued The fees accrued since the last time fees were collected from this position\n @param hookData Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\n @return bytes4 The function selector for the hook\n @return BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
									},
									"functionSelector": "9f063efc",
									"id": 134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "afterAddLiquidity",
									"nameLocation": "3188:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3223:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "3215:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3215:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3256:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "3239:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1840_calldata_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 114,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 113,
														"name": "PoolKey",
														"nameLocations": [
															"3239:7:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1840,
														"src": "3239:7:2"
													},
													"referencedDeclaration": 1840,
													"src": "3239:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1840_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "3313:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "3269:50:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ModifyLiquidityParams_$434_calldata_ptr",
													"typeString": "struct IPoolManager.ModifyLiquidityParams"
												},
												"typeName": {
													"id": 117,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 116,
														"name": "IPoolManager.ModifyLiquidityParams",
														"nameLocations": [
															"3269:12:2",
															"3282:21:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 434,
														"src": "3269:34:2"
													},
													"referencedDeclaration": 434,
													"src": "3269:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ModifyLiquidityParams_$434_storage_ptr",
														"typeString": "struct IPoolManager.ModifyLiquidityParams"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "delta",
												"nameLocation": "3342:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "3329:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
													"typeString": "BalanceDelta"
												},
												"typeName": {
													"id": 120,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 119,
														"name": "BalanceDelta",
														"nameLocations": [
															"3329:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1280,
														"src": "3329:12:2"
													},
													"referencedDeclaration": 1280,
													"src": "3329:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
														"typeString": "BalanceDelta"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "feesAccrued",
												"nameLocation": "3370:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "3357:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
													"typeString": "BalanceDelta"
												},
												"typeName": {
													"id": 123,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 122,
														"name": "BalanceDelta",
														"nameLocations": [
															"3357:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1280,
														"src": "3357:12:2"
													},
													"referencedDeclaration": 1280,
													"src": "3357:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
														"typeString": "BalanceDelta"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "3406:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "3391:23:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 125,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3391:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3205:215:2"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "3439:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 128,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3439:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "3447:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
													"typeString": "BalanceDelta"
												},
												"typeName": {
													"id": 131,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 130,
														"name": "BalanceDelta",
														"nameLocations": [
															"3447:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1280,
														"src": "3447:12:2"
													},
													"referencedDeclaration": 1280,
													"src": "3447:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
														"typeString": "BalanceDelta"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3438:22:2"
									},
									"scope": 252,
									"src": "3179:282:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "3467:412:2",
										"text": "@notice The hook called before liquidity is removed\n @param sender The initial msg.sender for the remove liquidity call\n @param key The key for the pool\n @param params The parameters for removing liquidity\n @param hookData Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\n @return bytes4 The function selector for the hook"
									},
									"functionSelector": "21d0ee70",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beforeRemoveLiquidity",
									"nameLocation": "3893:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3932:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "3924:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3924:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3965:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "3948:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1840_calldata_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 139,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 138,
														"name": "PoolKey",
														"nameLocations": [
															"3948:7:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1840,
														"src": "3948:7:2"
													},
													"referencedDeclaration": 1840,
													"src": "3948:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1840_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "4022:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "3978:50:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ModifyLiquidityParams_$434_calldata_ptr",
													"typeString": "struct IPoolManager.ModifyLiquidityParams"
												},
												"typeName": {
													"id": 142,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 141,
														"name": "IPoolManager.ModifyLiquidityParams",
														"nameLocations": [
															"3978:12:2",
															"3991:21:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 434,
														"src": "3978:34:2"
													},
													"referencedDeclaration": 434,
													"src": "3978:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ModifyLiquidityParams_$434_storage_ptr",
														"typeString": "struct IPoolManager.ModifyLiquidityParams"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "4053:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4038:23:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 144,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4038:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3914:153:2"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4086:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 147,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4086:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4085:8:2"
									},
									"scope": 252,
									"src": "3884:210:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4100:793:2",
										"text": "@notice The hook called after liquidity is removed\n @param sender The initial msg.sender for the remove liquidity call\n @param key The key for the pool\n @param params The parameters for removing liquidity\n @param delta The caller's balance delta after removing liquidity; the sum of principal delta, fees accrued, and hook delta\n @param feesAccrued The fees accrued since the last time fees were collected from this position\n @param hookData Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\n @return bytes4 The function selector for the hook\n @return BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
									},
									"functionSelector": "6c2bbe7e",
									"id": 175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "afterRemoveLiquidity",
									"nameLocation": "4907:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4945:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "4937:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4937:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "4978:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "4961:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1840_calldata_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 155,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 154,
														"name": "PoolKey",
														"nameLocations": [
															"4961:7:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1840,
														"src": "4961:7:2"
													},
													"referencedDeclaration": 1840,
													"src": "4961:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1840_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "5035:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "4991:50:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ModifyLiquidityParams_$434_calldata_ptr",
													"typeString": "struct IPoolManager.ModifyLiquidityParams"
												},
												"typeName": {
													"id": 158,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 157,
														"name": "IPoolManager.ModifyLiquidityParams",
														"nameLocations": [
															"4991:12:2",
															"5004:21:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 434,
														"src": "4991:34:2"
													},
													"referencedDeclaration": 434,
													"src": "4991:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ModifyLiquidityParams_$434_storage_ptr",
														"typeString": "struct IPoolManager.ModifyLiquidityParams"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "delta",
												"nameLocation": "5064:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5051:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
													"typeString": "BalanceDelta"
												},
												"typeName": {
													"id": 161,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 160,
														"name": "BalanceDelta",
														"nameLocations": [
															"5051:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1280,
														"src": "5051:12:2"
													},
													"referencedDeclaration": 1280,
													"src": "5051:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
														"typeString": "BalanceDelta"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "feesAccrued",
												"nameLocation": "5092:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5079:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
													"typeString": "BalanceDelta"
												},
												"typeName": {
													"id": 164,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 163,
														"name": "BalanceDelta",
														"nameLocations": [
															"5079:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1280,
														"src": "5079:12:2"
													},
													"referencedDeclaration": 1280,
													"src": "5079:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
														"typeString": "BalanceDelta"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "5128:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5113:23:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 166,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4927:215:2"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5161:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 169,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5161:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5169:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
													"typeString": "BalanceDelta"
												},
												"typeName": {
													"id": 172,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 171,
														"name": "BalanceDelta",
														"nameLocations": [
															"5169:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1280,
														"src": "5169:12:2"
													},
													"referencedDeclaration": 1280,
													"src": "5169:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
														"typeString": "BalanceDelta"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5160:22:2"
									},
									"scope": 252,
									"src": "4898:285:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "5189:790:2",
										"text": "@notice The hook called before a swap\n @param sender The initial msg.sender for the swap call\n @param key The key for the pool\n @param params The parameters for the swap\n @param hookData Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\n @return bytes4 The function selector for the hook\n @return BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\n @return uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)"
									},
									"functionSelector": "575e24b4",
									"id": 196,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beforeSwap",
									"nameLocation": "5993:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6021:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "6013:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6013:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "6054:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "6037:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1840_calldata_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 180,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 179,
														"name": "PoolKey",
														"nameLocations": [
															"6037:7:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1840,
														"src": "6037:7:2"
													},
													"referencedDeclaration": 1840,
													"src": "6037:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1840_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "6100:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "6067:39:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SwapParams_$462_calldata_ptr",
													"typeString": "struct IPoolManager.SwapParams"
												},
												"typeName": {
													"id": 183,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 182,
														"name": "IPoolManager.SwapParams",
														"nameLocations": [
															"6067:12:2",
															"6080:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 462,
														"src": "6067:23:2"
													},
													"referencedDeclaration": 462,
													"src": "6067:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SwapParams_$462_storage_ptr",
														"typeString": "struct IPoolManager.SwapParams"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "6131:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "6116:23:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 185,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6116:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6003:142:2"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "6164:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 188,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6164:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "6172:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BeforeSwapDelta_$1442",
													"typeString": "BeforeSwapDelta"
												},
												"typeName": {
													"id": 191,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 190,
														"name": "BeforeSwapDelta",
														"nameLocations": [
															"6172:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1442,
														"src": "6172:15:2"
													},
													"referencedDeclaration": 1442,
													"src": "6172:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BeforeSwapDelta_$1442",
														"typeString": "BeforeSwapDelta"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "6189:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 193,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "6189:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6163:33:2"
									},
									"scope": 252,
									"src": "5984:213:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "6203:602:2",
										"text": "@notice The hook called after a swap\n @param sender The initial msg.sender for the swap call\n @param key The key for the pool\n @param params The parameters for the swap\n @param delta The amount owed to the caller (positive) or owed to the pool (negative)\n @param hookData Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\n @return bytes4 The function selector for the hook\n @return int128 The hook's delta in unspecified currency. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
									},
									"functionSelector": "b47b2fb1",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "afterSwap",
									"nameLocation": "6819:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6846:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "6838:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6838:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "6879:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "6862:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1840_calldata_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 201,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 200,
														"name": "PoolKey",
														"nameLocations": [
															"6862:7:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1840,
														"src": "6862:7:2"
													},
													"referencedDeclaration": 1840,
													"src": "6862:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1840_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "6925:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "6892:39:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SwapParams_$462_calldata_ptr",
													"typeString": "struct IPoolManager.SwapParams"
												},
												"typeName": {
													"id": 204,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 203,
														"name": "IPoolManager.SwapParams",
														"nameLocations": [
															"6892:12:2",
															"6905:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 462,
														"src": "6892:23:2"
													},
													"referencedDeclaration": 462,
													"src": "6892:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SwapParams_$462_storage_ptr",
														"typeString": "struct IPoolManager.SwapParams"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "delta",
												"nameLocation": "6954:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "6941:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
													"typeString": "BalanceDelta"
												},
												"typeName": {
													"id": 207,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 206,
														"name": "BalanceDelta",
														"nameLocations": [
															"6941:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1280,
														"src": "6941:12:2"
													},
													"referencedDeclaration": 1280,
													"src": "6941:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
														"typeString": "BalanceDelta"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "6984:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "6969:23:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6969:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6828:170:2"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "7017:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 212,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "7017:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "7025:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 214,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "7025:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7016:16:2"
									},
									"scope": 252,
									"src": "6810:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "7039:431:2",
										"text": "@notice The hook called before donate\n @param sender The initial msg.sender for the donate call\n @param key The key for the pool\n @param amount0 The amount of token0 being donated\n @param amount1 The amount of token1 being donated\n @param hookData Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\n @return bytes4 The function selector for the hook"
									},
									"functionSelector": "b6a8b0fa",
									"id": 234,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beforeDonate",
									"nameLocation": "7484:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7514:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "7506:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7506:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "7547:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "7530:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1840_calldata_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 222,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 221,
														"name": "PoolKey",
														"nameLocations": [
															"7530:7:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1840,
														"src": "7530:7:2"
													},
													"referencedDeclaration": 1840,
													"src": "7530:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1840_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "7568:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "7560:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "7593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "7585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7585:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "7625:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "7610:23:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 228,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7610:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7496:143:2"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "7658:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 231,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "7658:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7657:8:2"
									},
									"scope": 252,
									"src": "7475:191:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "7672:430:2",
										"text": "@notice The hook called after donate\n @param sender The initial msg.sender for the donate call\n @param key The key for the pool\n @param amount0 The amount of token0 being donated\n @param amount1 The amount of token1 being donated\n @param hookData Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\n @return bytes4 The function selector for the hook"
									},
									"functionSelector": "e1b4af69",
									"id": 251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "afterDonate",
									"nameLocation": "8116:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "8145:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "8137:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8137:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "8178:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "8161:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1840_calldata_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 239,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 238,
														"name": "PoolKey",
														"nameLocations": [
															"8161:7:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1840,
														"src": "8161:7:2"
													},
													"referencedDeclaration": 1840,
													"src": "8161:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1840_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "8199:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "8191:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8191:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "8224:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "8216:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8216:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "8256:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "8241:23:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 245,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8241:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8127:143:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "8289:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 248,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "8289:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8288:8:2"
									},
									"scope": 252,
									"src": "8107:190:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 253,
							"src": "756:7543:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:8268:2"
				},
				"id": 2
			},
			"UniswapV4/interfaces/IImmutableState.sol": {
				"ast": {
					"absolutePath": "UniswapV4/interfaces/IImmutableState.sol",
					"exportedSymbols": {
						"IImmutableState": [
							265
						],
						"IPoolManager": [
							564
						]
					},
					"id": 266,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 254,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "UniswapV4/interfaces/IPoolManager.sol",
							"file": "./IPoolManager.sol",
							"id": 256,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 266,
							"sourceUnit": 565,
							"src": "58:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 255,
										"name": "IPoolManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 564,
										"src": "66:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IImmutableState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 257,
								"nodeType": "StructuredDocumentation",
								"src": "108:81:3",
								"text": "@title IImmutableState\n @notice Interface for the ImmutableState contract"
							},
							"fullyImplemented": false,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "IImmutableState",
							"nameLocation": "199:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "221:47:3",
										"text": "@notice The Uniswap v4 PoolManager contract"
									},
									"functionSelector": "dc4c90d3",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "poolManager",
									"nameLocation": "282:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "293:2:3"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "319:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPoolManager_$564",
													"typeString": "contract IPoolManager"
												},
												"typeName": {
													"id": 261,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 260,
														"name": "IPoolManager",
														"nameLocations": [
															"319:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 564,
														"src": "319:12:3"
													},
													"referencedDeclaration": 564,
													"src": "319:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolManager_$564",
														"typeString": "contract IPoolManager"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "318:14:3"
									},
									"scope": 265,
									"src": "273:60:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 266,
							"src": "189:146:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:303:3"
				},
				"id": 3
			},
			"UniswapV4/interfaces/IPoolManager.sol": {
				"ast": {
					"absolutePath": "UniswapV4/interfaces/IPoolManager.sol",
					"exportedSymbols": {
						"BalanceDelta": [
							1280
						],
						"Currency": [
							1494
						],
						"IERC6909Claims": [
							907
						],
						"IExtsload": [
							32
						],
						"IExttload": [
							54
						],
						"IHooks": [
							252
						],
						"IPoolManager": [
							564
						],
						"IProtocolFees": [
							641
						],
						"PoolId": [
							1794
						],
						"PoolKey": [
							1840
						]
					},
					"id": 565,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 267,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"absolutePath": "UniswapV4/types/Currency.sol",
							"file": "../types/Currency.sol",
							"id": 269,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 565,
							"sourceUnit": 1789,
							"src": "58:47:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 268,
										"name": "Currency",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1494,
										"src": "66:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "UniswapV4/types/PoolKey.sol",
							"file": "../types/PoolKey.sol",
							"id": 271,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 565,
							"sourceUnit": 1841,
							"src": "106:45:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 270,
										"name": "PoolKey",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1840,
										"src": "114:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "UniswapV4/interfaces/IHooks.sol",
							"file": "./IHooks.sol",
							"id": 273,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 565,
							"sourceUnit": 253,
							"src": "152:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 272,
										"name": "IHooks",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 252,
										"src": "160:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "UniswapV4/interfaces/external/IERC6909Claims.sol",
							"file": "./external/IERC6909Claims.sol",
							"id": 275,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 565,
							"sourceUnit": 908,
							"src": "189:61:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 274,
										"name": "IERC6909Claims",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 907,
										"src": "197:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "UniswapV4/interfaces/IProtocolFees.sol",
							"file": "./IProtocolFees.sol",
							"id": 277,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 565,
							"sourceUnit": 642,
							"src": "251:50:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 276,
										"name": "IProtocolFees",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 641,
										"src": "259:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "UniswapV4/types/BalanceDelta.sol",
							"file": "../types/BalanceDelta.sol",
							"id": 279,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 565,
							"sourceUnit": 1439,
							"src": "302:55:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 278,
										"name": "BalanceDelta",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1280,
										"src": "310:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "UniswapV4/types/PoolId.sol",
							"file": "../types/PoolId.sol",
							"id": 281,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 565,
							"sourceUnit": 1809,
							"src": "358:43:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 280,
										"name": "PoolId",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1794,
										"src": "366:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "UniswapV4/interfaces/IExtsload.sol",
							"file": "./IExtsload.sol",
							"id": 283,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 565,
							"sourceUnit": 33,
							"src": "402:42:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 282,
										"name": "IExtsload",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 32,
										"src": "410:9:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "UniswapV4/interfaces/IExttload.sol",
							"file": "./IExttload.sol",
							"id": 285,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 565,
							"sourceUnit": 55,
							"src": "445:42:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 284,
										"name": "IExttload",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 54,
										"src": "453:9:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 287,
										"name": "IProtocolFees",
										"nameLocations": [
											"557:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 641,
										"src": "557:13:4"
									},
									"id": 288,
									"nodeType": "InheritanceSpecifier",
									"src": "557:13:4"
								},
								{
									"baseName": {
										"id": 289,
										"name": "IERC6909Claims",
										"nameLocations": [
											"572:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 907,
										"src": "572:14:4"
									},
									"id": 290,
									"nodeType": "InheritanceSpecifier",
									"src": "572:14:4"
								},
								{
									"baseName": {
										"id": 291,
										"name": "IExtsload",
										"nameLocations": [
											"588:9:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 32,
										"src": "588:9:4"
									},
									"id": 292,
									"nodeType": "InheritanceSpecifier",
									"src": "588:9:4"
								},
								{
									"baseName": {
										"id": 293,
										"name": "IExttload",
										"nameLocations": [
											"599:9:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 54,
										"src": "599:9:4"
									},
									"id": 294,
									"nodeType": "InheritanceSpecifier",
									"src": "599:9:4"
								}
							],
							"canonicalName": "IPoolManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 286,
								"nodeType": "StructuredDocumentation",
								"src": "489:42:4",
								"text": "@notice Interface for the PoolManager"
							},
							"fullyImplemented": false,
							"id": 564,
							"linearizedBaseContracts": [
								564,
								54,
								32,
								907,
								641
							],
							"name": "IPoolManager",
							"nameLocation": "541:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "615:83:4",
										"text": "@notice Thrown when a currency is not netted out after the contract is unlocked"
									},
									"errorSelector": "5212cba1",
									"id": 297,
									"name": "CurrencyNotSettled",
									"nameLocation": "709:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "727:2:4"
									},
									"src": "703:27:4"
								},
								{
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "736:70:4",
										"text": "@notice Thrown when trying to interact with a non-initialized pool"
									},
									"errorSelector": "486aa307",
									"id": 300,
									"name": "PoolNotInitialized",
									"nameLocation": "817:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "835:2:4"
									},
									"src": "811:27:4"
								},
								{
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "844:78:4",
										"text": "@notice Thrown when unlock is called, but the contract is already unlocked"
									},
									"errorSelector": "5090d6c6",
									"id": 303,
									"name": "AlreadyUnlocked",
									"nameLocation": "933:15:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "948:2:4"
									},
									"src": "927:24:4"
								},
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "957:101:4",
										"text": "@notice Thrown when a function is called that requires the contract to be unlocked, but it is not"
									},
									"errorSelector": "54e3ca0d",
									"id": 306,
									"name": "ManagerLocked",
									"nameLocation": "1069:13:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1082:2:4"
									},
									"src": "1063:22:4"
								},
								{
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "1091:96:4",
										"text": "@notice Pools are limited to type(int16).max tickSpacing in #initialize, to prevent overflow"
									},
									"errorSelector": "b70024f8",
									"id": 311,
									"name": "TickSpacingTooLarge",
									"nameLocation": "1198:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "1224:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1218:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 308,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1218:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1217:19:4"
									},
									"src": "1192:45:4"
								},
								{
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "1243:81:4",
										"text": "@notice Pools must have a positive non-zero tickSpacing passed to #initialize"
									},
									"errorSelector": "e9e90588",
									"id": 316,
									"name": "TickSpacingTooSmall",
									"nameLocation": "1335:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "1361:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "1355:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 313,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1355:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:19:4"
									},
									"src": "1329:45:4"
								},
								{
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "1380:86:4",
										"text": "@notice PoolKey must have currencies where address(currency0) < address(currency1)"
									},
									"errorSelector": "6e6c9830",
									"id": 323,
									"name": "CurrenciesOutOfOrderOrEqual",
									"nameLocation": "1477:27:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "currency0",
												"nameLocation": "1513:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "1505:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1505:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "currency1",
												"nameLocation": "1532:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "1524:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1524:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1504:38:4"
									},
									"src": "1471:72:4"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "1549:156:4",
										"text": "@notice Thrown when a call to updateDynamicLPFee is made by an address that is not the hook,\n or on a pool that does not have a dynamic swap fee."
									},
									"errorSelector": "30d21641",
									"id": 326,
									"name": "UnauthorizedDynamicLPFeeUpdate",
									"nameLocation": "1716:30:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1746:2:4"
									},
									"src": "1710:39:4"
								},
								{
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1755:50:4",
										"text": "@notice Thrown when trying to swap amount of 0"
									},
									"errorSelector": "be8b8507",
									"id": 329,
									"name": "SwapAmountCannotBeZero",
									"nameLocation": "1816:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1838:2:4"
									},
									"src": "1810:31:4"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "1847:75:4",
										"text": "@notice Thrown when native currency is passed to a non native settlement"
									},
									"errorSelector": "b0ec849e",
									"id": 332,
									"name": "NonzeroNativeValue",
									"nameLocation": "1933:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1951:2:4"
									},
									"src": "1927:27:4"
								},
								{
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "1960:110:4",
										"text": "@notice Thrown when `clear` is called with an amount that is not exactly equal to the open currency delta."
									},
									"errorSelector": "bda73abf",
									"id": 335,
									"name": "MustClearExactPositiveDelta",
									"nameLocation": "2081:27:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2108:2:4"
									},
									"src": "2075:36:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "2117:708:4",
										"text": "@notice Emitted when a new pool is initialized\n @param id The abi encoded hash of the pool key struct for the new pool\n @param currency0 The first currency of the pool by address sort order\n @param currency1 The second currency of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param hooks The hooks contract address for the pool, or address(0) if none\n @param sqrtPriceX96 The price of the pool on initialization\n @param tick The initial tick of the pool corresponding to the initialized price"
									},
									"eventSelector": "dd466e674ea557f56295e2d0218a125ea4b4f0f6f3307b95f85e6110838d6438",
									"id": 358,
									"name": "Initialize",
									"nameLocation": "2836:10:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2871:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "2856:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_PoolId_$1794",
													"typeString": "PoolId"
												},
												"typeName": {
													"id": 338,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 337,
														"name": "PoolId",
														"nameLocations": [
															"2856:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1794,
														"src": "2856:6:4"
													},
													"referencedDeclaration": 1794,
													"src": "2856:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_PoolId_$1794",
														"typeString": "PoolId"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"indexed": true,
												"mutability": "mutable",
												"name": "currency0",
												"nameLocation": "2900:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "2883:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 340,
														"name": "Currency",
														"nameLocations": [
															"2883:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1494,
														"src": "2883:8:4"
													},
													"referencedDeclaration": 1494,
													"src": "2883:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"indexed": true,
												"mutability": "mutable",
												"name": "currency1",
												"nameLocation": "2936:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "2919:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 344,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 343,
														"name": "Currency",
														"nameLocations": [
															"2919:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1494,
														"src": "2919:8:4"
													},
													"referencedDeclaration": 1494,
													"src": "2919:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "2962:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "2955:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 346,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2955:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"indexed": false,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "2981:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "2975:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 348,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2975:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"indexed": false,
												"mutability": "mutable",
												"name": "hooks",
												"nameLocation": "3009:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "3002:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IHooks_$252",
													"typeString": "contract IHooks"
												},
												"typeName": {
													"id": 351,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 350,
														"name": "IHooks",
														"nameLocations": [
															"3002:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 252,
														"src": "3002:6:4"
													},
													"referencedDeclaration": 252,
													"src": "3002:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IHooks_$252",
														"typeString": "contract IHooks"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "3032:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "3024:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 353,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3024:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3060:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "3054:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 355,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3054:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:224:4"
									},
									"src": "2830:241:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "3077:459:4",
										"text": "@notice Emitted when a liquidity position is modified\n @param id The abi encoded hash of the pool key struct for the pool that was modified\n @param sender The address that modified the pool\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param liquidityDelta The amount of liquidity that was added or removed\n @param salt The extra data to make positions unique"
									},
									"eventSelector": "f208f4912782fd25c7f114ca3723a2d5dd6f3bcc3ac8db5af63baa85f711d5ec",
									"id": 374,
									"name": "ModifyLiquidity",
									"nameLocation": "3547:15:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3587:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "3572:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_PoolId_$1794",
													"typeString": "PoolId"
												},
												"typeName": {
													"id": 361,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 360,
														"name": "PoolId",
														"nameLocations": [
															"3572:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1794,
														"src": "3572:6:4"
													},
													"referencedDeclaration": 1794,
													"src": "3572:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_PoolId_$1794",
														"typeString": "PoolId"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3607:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "3591:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3591:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"indexed": false,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3621:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "3615:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 365,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3615:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"indexed": false,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3638:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "3632:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 367,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3632:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityDelta",
												"nameLocation": "3656:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "3649:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 369,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3649:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"indexed": false,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3680:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "3672:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3672:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3562:128:4"
									},
									"src": "3541:150:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "3697:674:4",
										"text": "@notice Emitted for swaps between currency0 and currency1\n @param id The abi encoded hash of the pool key struct for the pool that was modified\n @param sender The address that initiated the swap call, and that received the callback\n @param amount0 The delta of the currency0 balance of the pool\n @param amount1 The delta of the currency1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of the price of the pool after the swap\n @param fee The swap fee in hundredths of a bip"
									},
									"eventSelector": "40e9cecb9f5f1f1c5b9c97dec2917b7ee92e57ba5563708daca94dd84ad7112f",
									"id": 394,
									"name": "Swap",
									"nameLocation": "4382:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "4411:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "4396:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_PoolId_$1794",
													"typeString": "PoolId"
												},
												"typeName": {
													"id": 377,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 376,
														"name": "PoolId",
														"nameLocations": [
															"4396:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1794,
														"src": "4396:6:4"
													},
													"referencedDeclaration": 1794,
													"src": "4396:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_PoolId_$1794",
														"typeString": "PoolId"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4439:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "4423:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4462:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "4455:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 381,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4455:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4486:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "4479:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 383,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4479:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "4511:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "4503:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 385,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4503:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "4541:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "4533:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 387,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4533:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "4566:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "4560:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 389,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4560:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "4587:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "4580:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 391,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "4580:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4386:210:4"
									},
									"src": "4376:221:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "4603:303:4",
										"text": "@notice Emitted for donations\n @param id The abi encoded hash of the pool key struct for the pool that was donated to\n @param sender The address that initiated the donate call\n @param amount0 The amount donated in currency0\n @param amount1 The amount donated in currency1"
									},
									"eventSelector": "29ef05caaff9404b7cb6d1c0e9bbae9eaa7ab2541feba1a9c4248594c08156cb",
									"id": 406,
									"name": "Donate",
									"nameLocation": "4917:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "4939:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "4924:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_PoolId_$1794",
													"typeString": "PoolId"
												},
												"typeName": {
													"id": 397,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 396,
														"name": "PoolId",
														"nameLocations": [
															"4924:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1794,
														"src": "4924:6:4"
													},
													"referencedDeclaration": 1794,
													"src": "4924:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_PoolId_$1794",
														"typeString": "PoolId"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4959:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "4943:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4943:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4975:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "4967:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4992:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "4984:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4984:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4923:77:4"
									},
									"src": "4911:90:4"
								},
								{
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "5007:567:4",
										"text": "@notice All interactions on the contract that account deltas require unlocking. A caller that calls `unlock` must implement\n `IUnlockCallback(msg.sender).unlockCallback(data)`, where they interact with the remaining functions on this contract.\n @dev The only functions callable without an unlocking are `initialize` and `updateDynamicLPFee`\n @param data Any data to pass to the callback, via `IUnlockCallback(msg.sender).unlockCallback(data)`\n @return The data returned by the call to `IUnlockCallback(msg.sender).unlockCallback(data)`"
									},
									"functionSelector": "48c89491",
									"id": 414,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unlock",
									"nameLocation": "5588:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5610:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "5595:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 408,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5595:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5594:21:4"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "5634:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 411,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5634:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5633:14:4"
									},
									"scope": 564,
									"src": "5579:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "5654:356:4",
										"text": "@notice Initialize the state for a given pool ID\n @dev A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee\n @param key The pool key for the pool to initialize\n @param sqrtPriceX96 The initial square root price\n @return tick The initial tick of the pool"
									},
									"functionSelector": "6276cbbe",
									"id": 425,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "6024:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "6050:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "6035:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1840_memory_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 417,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 416,
														"name": "PoolKey",
														"nameLocations": [
															"6035:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1840,
														"src": "6035:7:4"
													},
													"referencedDeclaration": 1840,
													"src": "6035:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1840_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "6063:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "6055:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 419,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6055:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6034:42:4"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "6101:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "6095:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 422,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "6095:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6094:12:4"
									},
									"scope": 564,
									"src": "6015:92:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IPoolManager.ModifyLiquidityParams",
									"id": 434,
									"members": [
										{
											"constant": false,
											"id": 427,
											"mutability": "mutable",
											"name": "tickLower",
											"nameLocation": "6210:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 434,
											"src": "6204:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 426,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "6204:5:4",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 429,
											"mutability": "mutable",
											"name": "tickUpper",
											"nameLocation": "6235:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 434,
											"src": "6229:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 428,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "6229:5:4",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 431,
											"mutability": "mutable",
											"name": "liquidityDelta",
											"nameLocation": "6300:14:4",
											"nodeType": "VariableDeclaration",
											"scope": 434,
											"src": "6293:21:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 430,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "6293:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 433,
											"mutability": "mutable",
											"name": "salt",
											"nameLocation": "6415:4:4",
											"nodeType": "VariableDeclaration",
											"scope": 434,
											"src": "6407:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 432,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "6407:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ModifyLiquidityParams",
									"nameLocation": "6120:21:4",
									"nodeType": "StructDefinition",
									"scope": 564,
									"src": "6113:313:4",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "6432:985:4",
										"text": "@notice Modify the liquidity for the given pool\n @dev Poke by calling with a zero liquidityDelta\n @param key The pool to modify liquidity in\n @param params The parameters for modifying the liquidity\n @param hookData The data to pass through to the add/removeLiquidity hooks\n @return callerDelta The balance delta of the caller of modifyLiquidity. This is the total of both principal, fee deltas, and hook deltas if applicable\n @return feesAccrued The balance delta of the fees generated in the liquidity range. Returned for informational purposes\n @dev Note that feesAccrued can be artificially inflated by a malicious actor and integrators should be careful using the value\n For pools with a single liquidity position, actors can donate to themselves to inflate feeGrowthGlobal (and consequently feesAccrued)\n atomically donating and collecting fees in the same unlockCallback may make the inflated value more extreme"
									},
									"functionSelector": "5a6bcfda",
									"id": 452,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "modifyLiquidity",
									"nameLocation": "7431:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "7462:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "7447:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1840_memory_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 437,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 436,
														"name": "PoolKey",
														"nameLocations": [
															"7447:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1840,
														"src": "7447:7:4"
													},
													"referencedDeclaration": 1840,
													"src": "7447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1840_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "7496:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "7467:35:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ModifyLiquidityParams_$434_memory_ptr",
													"typeString": "struct IPoolManager.ModifyLiquidityParams"
												},
												"typeName": {
													"id": 440,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 439,
														"name": "ModifyLiquidityParams",
														"nameLocations": [
															"7467:21:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 434,
														"src": "7467:21:4"
													},
													"referencedDeclaration": 434,
													"src": "7467:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ModifyLiquidityParams_$434_storage_ptr",
														"typeString": "struct IPoolManager.ModifyLiquidityParams"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "7519:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "7504:23:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 442,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7504:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7446:82:4"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "callerDelta",
												"nameLocation": "7576:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "7563:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
													"typeString": "BalanceDelta"
												},
												"typeName": {
													"id": 446,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 445,
														"name": "BalanceDelta",
														"nameLocations": [
															"7563:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1280,
														"src": "7563:12:4"
													},
													"referencedDeclaration": 1280,
													"src": "7563:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
														"typeString": "BalanceDelta"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "feesAccrued",
												"nameLocation": "7602:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "7589:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
													"typeString": "BalanceDelta"
												},
												"typeName": {
													"id": 449,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 448,
														"name": "BalanceDelta",
														"nameLocations": [
															"7589:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1280,
														"src": "7589:12:4"
													},
													"referencedDeclaration": 1280,
													"src": "7589:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
														"typeString": "BalanceDelta"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7562:52:4"
									},
									"scope": 564,
									"src": "7422:193:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IPoolManager.SwapParams",
									"id": 462,
									"members": [
										{
											"constant": false,
											"id": 455,
											"mutability": "mutable",
											"name": "zeroForOne",
											"nameLocation": "7714:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 462,
											"src": "7709:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 454,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "7709:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 458,
											"mutability": "mutable",
											"name": "amountSpecified",
											"nameLocation": "7853:15:4",
											"nodeType": "VariableDeclaration",
											"scope": 462,
											"src": "7846:22:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 457,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "7846:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 461,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "7964:17:4",
											"nodeType": "VariableDeclaration",
											"scope": 462,
											"src": "7956:25:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 460,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "7956:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SwapParams",
									"nameLocation": "7628:10:4",
									"nodeType": "StructDefinition",
									"scope": 564,
									"src": "7621:367:4",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "7994:643:4",
										"text": "@notice Swap against the given pool\n @param key The pool to swap in\n @param params The parameters for swapping\n @param hookData The data to pass through to the swap hooks\n @return swapDelta The balance delta of the address swapping\n @dev Swapping on low liquidity pools may cause unexpected swap amounts when liquidity available is less than amountSpecified.\n Additionally note that if interacting with hooks that have the BEFORE_SWAP_RETURNS_DELTA_FLAG or AFTER_SWAP_RETURNS_DELTA_FLAG\n the hook may alter the swap input/output. Integrators should perform checks on the returned swapDelta."
									},
									"functionSelector": "f3cd914c",
									"id": 477,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "8651:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "8671:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "8656:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1840_memory_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 465,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 464,
														"name": "PoolKey",
														"nameLocations": [
															"8656:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1840,
														"src": "8656:7:4"
													},
													"referencedDeclaration": 1840,
													"src": "8656:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1840_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "8694:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "8676:24:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SwapParams_$462_memory_ptr",
													"typeString": "struct IPoolManager.SwapParams"
												},
												"typeName": {
													"id": 468,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 467,
														"name": "SwapParams",
														"nameLocations": [
															"8676:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 462,
														"src": "8676:10:4"
													},
													"referencedDeclaration": 462,
													"src": "8676:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SwapParams_$462_storage_ptr",
														"typeString": "struct IPoolManager.SwapParams"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "8717:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "8702:23:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8702:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8655:71:4"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "swapDelta",
												"nameLocation": "8774:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "8761:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
													"typeString": "BalanceDelta"
												},
												"typeName": {
													"id": 474,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 473,
														"name": "BalanceDelta",
														"nameLocations": [
															"8761:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1280,
														"src": "8761:12:4"
													},
													"referencedDeclaration": 1280,
													"src": "8761:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
														"typeString": "BalanceDelta"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8760:24:4"
									},
									"scope": 564,
									"src": "8642:143:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "8791:1052:4",
										"text": "@notice Donate the given currency amounts to the in-range liquidity providers of a pool\n @dev Calls to donate can be frontrun adding just-in-time liquidity, with the aim of receiving a portion donated funds.\n Donors should keep this in mind when designing donation mechanisms.\n @dev This function donates to in-range LPs at slot0.tick. In certain edge-cases of the swap algorithm, the `sqrtPrice` of\n a pool can be at the lower boundary of tick `n`, but the `slot0.tick` of the pool is already `n - 1`. In this case a call to\n `donate` would donate to tick `n - 1` (slot0.tick) not tick `n` (getTickAtSqrtPrice(slot0.sqrtPriceX96)).\n Read the comments in `Pool.swap()` for more information about this.\n @param key The key of the pool to donate to\n @param amount0 The amount of currency0 to donate\n @param amount1 The amount of currency1 to donate\n @param hookData The data to pass through to the donate hooks\n @return BalanceDelta The delta of the caller after the donate"
									},
									"functionSelector": "234266d7",
									"id": 493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "donate",
									"nameLocation": "9857:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "9879:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "9864:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1840_memory_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 480,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 479,
														"name": "PoolKey",
														"nameLocations": [
															"9864:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1840,
														"src": "9864:7:4"
													},
													"referencedDeclaration": 1840,
													"src": "9864:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1840_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "9892:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "9884:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9884:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "9909:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "9901:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9901:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "hookData",
												"nameLocation": "9933:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "9918:23:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9918:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9863:79:4"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "9977:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
													"typeString": "BalanceDelta"
												},
												"typeName": {
													"id": 490,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 489,
														"name": "BalanceDelta",
														"nameLocations": [
															"9977:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1280,
														"src": "9977:12:4"
													},
													"referencedDeclaration": 1280,
													"src": "9977:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
														"typeString": "BalanceDelta"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9976:14:4"
									},
									"scope": 564,
									"src": "9848:143:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "9997:605:4",
										"text": "@notice Writes the current ERC20 balance of the specified currency to transient storage\n This is used to checkpoint balances for the manager and derive deltas for the caller.\n @dev This MUST be called before any ERC20 tokens are sent into the contract, but can be skipped\n for native tokens because the amount to settle is determined by the sent value.\n However, if an ERC20 token has been synced and not settled, and the caller instead wants to settle\n native funds, this function can be called with the native currency to then be able to settle the native currency"
									},
									"functionSelector": "a5841194",
									"id": 500,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nameLocation": "10616:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "10630:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "10621:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 496,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 495,
														"name": "Currency",
														"nameLocations": [
															"10621:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1494,
														"src": "10621:8:4"
													},
													"referencedDeclaration": 1494,
													"src": "10621:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10620:19:4"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10648:0:4"
									},
									"scope": 564,
									"src": "10607:42:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "10655:405:4",
										"text": "@notice Called by the user to net out some value owed to the user\n @dev Will revert if the requested amount is not available, consider using `mint` instead\n @dev Can also be used as a mechanism for free flash loans\n @param currency The currency to withdraw from the pool manager\n @param to The address to withdraw to\n @param amount The amount of currency to withdraw"
									},
									"functionSelector": "0b0d9c09",
									"id": 511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "take",
									"nameLocation": "11074:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "11088:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "11079:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 503,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 502,
														"name": "Currency",
														"nameLocations": [
															"11079:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1494,
														"src": "11079:8:4"
													},
													"referencedDeclaration": 1494,
													"src": "11079:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11106:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "11098:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11098:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11118:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "11110:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11110:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11078:47:4"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11134:0:4"
									},
									"scope": 564,
									"src": "11065:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "11141:102:4",
										"text": "@notice Called by the user to pay what is owed\n @return paid The amount of currency settled"
									},
									"functionSelector": "11da60b4",
									"id": 517,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "settle",
									"nameLocation": "11257:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11263:2:4"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "paid",
												"nameLocation": "11300:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "11292:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11292:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11291:14:4"
									},
									"scope": 564,
									"src": "11248:58:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "11312:181:4",
										"text": "@notice Called by the user to pay on behalf of another address\n @param recipient The address to credit for the payment\n @return paid The amount of currency settled"
									},
									"functionSelector": "3dd45adb",
									"id": 525,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "settleFor",
									"nameLocation": "11507:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "11525:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "11517:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11517:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11516:19:4"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "paid",
												"nameLocation": "11570:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "11562:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11562:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11561:14:4"
									},
									"scope": 564,
									"src": "11498:78:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "11582:425:4",
										"text": "@notice WARNING - Any currency that is cleared, will be non-retrievable, and locked in the contract permanently.\n A call to clear will zero out a positive balance WITHOUT a corresponding transfer.\n @dev This could be used to clear a balance that is considered dust.\n Additionally, the amount must be the exact positive balance. This is to enforce that the caller is aware of the amount being cleared."
									},
									"functionSelector": "80f0b44c",
									"id": 534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "clear",
									"nameLocation": "12021:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "12036:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "12027:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 528,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 527,
														"name": "Currency",
														"nameLocations": [
															"12027:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1494,
														"src": "12027:8:4"
													},
													"referencedDeclaration": 1494,
													"src": "12027:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12054:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "12046:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12026:35:4"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12070:0:4"
									},
									"scope": 564,
									"src": "12012:59:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "12077:388:4",
										"text": "@notice Called by the user to move value into ERC6909 balance\n @param to The address to mint the tokens to\n @param id The currency address to mint to ERC6909s, as a uint256\n @param amount The amount of currency to mint\n @dev The id is converted to a uint160 to correspond to a currency address\n If the upper 12 bytes are not 0, they will be 0-ed out"
									},
									"functionSelector": "156e29f6",
									"id": 544,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "12479:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12492:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "12484:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12484:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "12504:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "12496:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12496:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12516:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "12508:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12508:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12483:40:4"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12532:0:4"
									},
									"scope": 564,
									"src": "12470:63:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "12539:394:4",
										"text": "@notice Called by the user to move value from ERC6909 balance\n @param from The address to burn the tokens from\n @param id The currency address to burn from ERC6909s, as a uint256\n @param amount The amount of currency to burn\n @dev The id is converted to a uint160 to correspond to a currency address\n If the upper 12 bytes are not 0, they will be 0-ed out"
									},
									"functionSelector": "f5298aca",
									"id": 554,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "12947:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12960:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "12952:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12952:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "12974:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "12966:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12966:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12986:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "12978:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12978:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12951:42:4"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13002:0:4"
									},
									"scope": 564,
									"src": "12938:65:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "13009:351:4",
										"text": "@notice Updates the pools lp fees for the a pool that has enabled dynamic lp fees.\n @dev A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee\n @param key The key of the pool to update dynamic LP fees for\n @param newDynamicLPFee The new dynamic pool LP fee"
									},
									"functionSelector": "52759651",
									"id": 563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateDynamicLPFee",
									"nameLocation": "13374:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "13408:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "13393:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1840_memory_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 557,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 556,
														"name": "PoolKey",
														"nameLocations": [
															"13393:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1840,
														"src": "13393:7:4"
													},
													"referencedDeclaration": 1840,
													"src": "13393:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1840_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "newDynamicLPFee",
												"nameLocation": "13420:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "13413:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 559,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "13413:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13392:44:4"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13445:0:4"
									},
									"scope": 564,
									"src": "13365:81:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 565,
							"src": "531:12917:4",
							"usedErrors": [
								297,
								300,
								303,
								306,
								311,
								316,
								323,
								326,
								329,
								332,
								335,
								578,
								581,
								584
							],
							"usedEvents": [
								358,
								374,
								394,
								406,
								589,
								597,
								804,
								814,
								826
							]
						}
					],
					"src": "32:13417:4"
				},
				"id": 4
			},
			"UniswapV4/interfaces/IProtocolFees.sol": {
				"ast": {
					"absolutePath": "UniswapV4/interfaces/IProtocolFees.sol",
					"exportedSymbols": {
						"Currency": [
							1494
						],
						"IProtocolFees": [
							641
						],
						"PoolId": [
							1794
						],
						"PoolKey": [
							1840
						]
					},
					"id": 642,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 566,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"absolutePath": "UniswapV4/types/Currency.sol",
							"file": "../types/Currency.sol",
							"id": 568,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 642,
							"sourceUnit": 1789,
							"src": "57:47:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 567,
										"name": "Currency",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1494,
										"src": "65:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "UniswapV4/types/PoolId.sol",
							"file": "../types/PoolId.sol",
							"id": 570,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 642,
							"sourceUnit": 1809,
							"src": "105:43:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 569,
										"name": "PoolId",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1794,
										"src": "113:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "UniswapV4/types/PoolKey.sol",
							"file": "../types/PoolKey.sol",
							"id": 572,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 642,
							"sourceUnit": 1841,
							"src": "149:45:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 571,
										"name": "PoolKey",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1840,
										"src": "157:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IProtocolFees",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 573,
								"nodeType": "StructuredDocumentation",
								"src": "196:81:5",
								"text": "@notice Interface for all protocol-fee related functions in the pool manager"
							},
							"fullyImplemented": false,
							"id": 641,
							"linearizedBaseContracts": [
								641
							],
							"name": "IProtocolFees",
							"nameLocation": "287:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "307:52:5",
										"text": "@notice Thrown when protocol fee is set too high"
									},
									"errorSelector": "a7abe2f7",
									"id": 578,
									"name": "ProtocolFeeTooLarge",
									"nameLocation": "370:19:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "397:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "390:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 575,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "390:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "389:12:5"
									},
									"src": "364:38:5"
								},
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "408:94:5",
										"text": "@notice Thrown when collectProtocolFees or setProtocolFee is not called by the controller."
									},
									"errorSelector": "48f5c3ed",
									"id": 581,
									"name": "InvalidCaller",
									"nameLocation": "513:13:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "526:2:5"
									},
									"src": "507:22:5"
								},
								{
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "535:83:5",
										"text": "@notice Thrown when collectProtocolFees is attempted on a token that is synced."
									},
									"errorSelector": "c79e5948",
									"id": 584,
									"name": "ProtocolFeeCurrencySynced",
									"nameLocation": "629:25:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "654:2:5"
									},
									"src": "623:34:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "663:100:5",
										"text": "@notice Emitted when the protocol fee controller address is updated in setProtocolFeeController."
									},
									"eventSelector": "b4bd8ef53df690b9943d3318996006dbb82a25f54719d8c8035b516a2a5b8acc",
									"id": 589,
									"name": "ProtocolFeeControllerUpdated",
									"nameLocation": "774:28:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"indexed": true,
												"mutability": "mutable",
												"name": "protocolFeeController",
												"nameLocation": "819:21:5",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "803:37:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:39:5"
									},
									"src": "768:74:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "848:64:5",
										"text": "@notice Emitted when the protocol fee is updated for a pool."
									},
									"eventSelector": "e9c42593e71f84403b84352cd168d693e2c9fcd1fdbcc3feb21d92b43e6696f9",
									"id": 597,
									"name": "ProtocolFeeUpdated",
									"nameLocation": "923:18:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "957:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "942:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_PoolId_$1794",
													"typeString": "PoolId"
												},
												"typeName": {
													"id": 592,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 591,
														"name": "PoolId",
														"nameLocations": [
															"942:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1794,
														"src": "942:6:5"
													},
													"referencedDeclaration": 1794,
													"src": "942:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_PoolId_$1794",
														"typeString": "PoolId"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"indexed": false,
												"mutability": "mutable",
												"name": "protocolFee",
												"nameLocation": "968:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "961:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 594,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "961:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:39:5"
									},
									"src": "917:64:5"
								},
								{
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "987:209:5",
										"text": "@notice Given a currency address, returns the protocol fees accrued in that currency\n @param currency The currency to check\n @return amount The amount of protocol fees accrued in the currency"
									},
									"functionSelector": "97e8cd4e",
									"id": 606,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFeesAccrued",
									"nameLocation": "1210:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "1239:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "1230:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 600,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 599,
														"name": "Currency",
														"nameLocations": [
															"1230:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1494,
														"src": "1230:8:5"
													},
													"referencedDeclaration": 1494,
													"src": "1230:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:19:5"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1280:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "1272:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1271:16:5"
									},
									"scope": 641,
									"src": "1201:87:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "1294:162:5",
										"text": "@notice Sets the protocol fee for the given pool\n @param key The key of the pool to set a protocol fee for\n @param newProtocolFee The fee to set"
									},
									"functionSelector": "7e87ce7d",
									"id": 615,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setProtocolFee",
									"nameLocation": "1470:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1500:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "1485:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1840_memory_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 609,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 608,
														"name": "PoolKey",
														"nameLocations": [
															"1485:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1840,
														"src": "1485:7:5"
													},
													"referencedDeclaration": 1840,
													"src": "1485:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1840_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "newProtocolFee",
												"nameLocation": "1512:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "1505:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 611,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1505:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1484:43:5"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1536:0:5"
									},
									"scope": 641,
									"src": "1461:76:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "1543:102:5",
										"text": "@notice Sets the protocol fee controller\n @param controller The new protocol fee controller"
									},
									"functionSelector": "2d771389",
									"id": 621,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setProtocolFeeController",
									"nameLocation": "1659:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "controller",
												"nameLocation": "1692:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "1684:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:20:5"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1712:0:5"
									},
									"scope": 641,
									"src": "1650:63:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "1719:413:5",
										"text": "@notice Collects the protocol fees for a given recipient and currency, returning the amount collected\n @dev This will revert if the contract is unlocked\n @param recipient The address to receive the protocol fees\n @param currency The currency to withdraw\n @param amount The amount of currency to withdraw\n @return amountCollected The amount of currency successfully withdrawn"
									},
									"functionSelector": "8161b874",
									"id": 634,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocolFees",
									"nameLocation": "2146:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2174:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "2166:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2166:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "2194:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "2185:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 626,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 625,
														"name": "Currency",
														"nameLocations": [
															"2185:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1494,
														"src": "2185:8:5"
													},
													"referencedDeclaration": 1494,
													"src": "2185:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2212:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "2204:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2165:54:5"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "amountCollected",
												"nameLocation": "2262:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "2254:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2254:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2253:25:5"
									},
									"scope": 641,
									"src": "2137:142:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "2285:131:5",
										"text": "@notice Returns the current protocol fee controller address\n @return address The current protocol fee controller address"
									},
									"functionSelector": "f02de3b2",
									"id": 640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFeeController",
									"nameLocation": "2430:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2451:2:5"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "2477:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2477:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2476:9:5"
									},
									"scope": 641,
									"src": "2421:65:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 642,
							"src": "277:2211:5",
							"usedErrors": [
								578,
								581,
								584
							],
							"usedEvents": [
								589,
								597
							]
						}
					],
					"src": "32:2457:5"
				},
				"id": 5
			},
			"UniswapV4/interfaces/IV4Router.sol": {
				"ast": {
					"absolutePath": "UniswapV4/interfaces/IV4Router.sol",
					"exportedSymbols": {
						"Currency": [
							1494
						],
						"IImmutableState": [
							265
						],
						"IV4Router": [
							721
						],
						"PathKey": [
							1034
						],
						"PoolKey": [
							1840
						]
					},
					"id": 722,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 643,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"absolutePath": "UniswapV4/types/PoolKey.sol",
							"file": "../types/PoolKey.sol",
							"id": 645,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 722,
							"sourceUnit": 1841,
							"src": "57:45:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 644,
										"name": "PoolKey",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1840,
										"src": "65:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "UniswapV4/types/Currency.sol",
							"file": "../types/Currency.sol",
							"id": 647,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 722,
							"sourceUnit": 1789,
							"src": "103:47:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 646,
										"name": "Currency",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1494,
										"src": "111:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "UniswapV4/libraries/PathKey.sol",
							"file": "../libraries/PathKey.sol",
							"id": 649,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 722,
							"sourceUnit": 1099,
							"src": "151:49:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 648,
										"name": "PathKey",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1034,
										"src": "159:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "UniswapV4/interfaces/IImmutableState.sol",
							"file": "./IImmutableState.sol",
							"id": 651,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 722,
							"sourceUnit": 266,
							"src": "201:54:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 650,
										"name": "IImmutableState",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 265,
										"src": "209:15:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 653,
										"name": "IImmutableState",
										"nameLocations": [
											"349:15:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 265,
										"src": "349:15:6"
									},
									"id": 654,
									"nodeType": "InheritanceSpecifier",
									"src": "349:15:6"
								}
							],
							"canonicalName": "IV4Router",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 652,
								"nodeType": "StructuredDocumentation",
								"src": "257:69:6",
								"text": "@title IV4Router\n @notice Interface for the V4Router contract"
							},
							"fullyImplemented": false,
							"id": 721,
							"linearizedBaseContracts": [
								721,
								265
							],
							"name": "IV4Router",
							"nameLocation": "336:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "371:77:6",
										"text": "@notice Emitted when an exactInput swap does not receive its minAmountOut"
									},
									"errorSelector": "8b063d73",
									"id": 661,
									"name": "V4TooLittleReceived",
									"nameLocation": "459:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "minAmountOutReceived",
												"nameLocation": "487:20:6",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "479:28:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "amountReceived",
												"nameLocation": "517:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "509:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "509:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "478:54:6"
									},
									"src": "453:80:6"
								},
								{
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "538:78:6",
										"text": "@notice Emitted when an exactOutput is asked for more than its maxAmountIn"
									},
									"errorSelector": "12bacdd3",
									"id": 668,
									"name": "V4TooMuchRequested",
									"nameLocation": "627:18:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "maxAmountInRequested",
												"nameLocation": "654:20:6",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "646:28:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "amountRequested",
												"nameLocation": "684:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "676:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:55:6"
									},
									"src": "621:80:6"
								},
								{
									"canonicalName": "IV4Router.ExactInputSingleParams",
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "707:56:6",
										"text": "@notice Parameters for a single-hop exact-input swap"
									},
									"id": 681,
									"members": [
										{
											"constant": false,
											"id": 672,
											"mutability": "mutable",
											"name": "poolKey",
											"nameLocation": "816:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 681,
											"src": "808:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolKey_$1840_storage_ptr",
												"typeString": "struct PoolKey"
											},
											"typeName": {
												"id": 671,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 670,
													"name": "PoolKey",
													"nameLocations": [
														"808:7:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1840,
													"src": "808:7:6"
												},
												"referencedDeclaration": 1840,
												"src": "808:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1840_storage_ptr",
													"typeString": "struct PoolKey"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 674,
											"mutability": "mutable",
											"name": "zeroForOne",
											"nameLocation": "838:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 681,
											"src": "833:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 673,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "833:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 676,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "866:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 681,
											"src": "858:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 675,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "858:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 678,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "892:16:6",
											"nodeType": "VariableDeclaration",
											"scope": 681,
											"src": "884:24:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 677,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "884:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 680,
											"mutability": "mutable",
											"name": "hookData",
											"nameLocation": "924:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 681,
											"src": "918:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 679,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "918:5:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "775:22:6",
									"nodeType": "StructDefinition",
									"scope": 721,
									"src": "768:171:6",
									"visibility": "public"
								},
								{
									"canonicalName": "IV4Router.ExactInputParams",
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "945:55:6",
										"text": "@notice Parameters for a multi-hop exact-input swap"
									},
									"id": 694,
									"members": [
										{
											"constant": false,
											"id": 685,
											"mutability": "mutable",
											"name": "currencyIn",
											"nameLocation": "1048:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 694,
											"src": "1039:19:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
												"typeString": "Currency"
											},
											"typeName": {
												"id": 684,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 683,
													"name": "Currency",
													"nameLocations": [
														"1039:8:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1494,
													"src": "1039:8:6"
												},
												"referencedDeclaration": 1494,
												"src": "1039:8:6",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
													"typeString": "Currency"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 689,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1078:4:6",
											"nodeType": "VariableDeclaration",
											"scope": 694,
											"src": "1068:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_PathKey_$1034_storage_$dyn_storage_ptr",
												"typeString": "struct PathKey[]"
											},
											"typeName": {
												"baseType": {
													"id": 687,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 686,
														"name": "PathKey",
														"nameLocations": [
															"1068:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1034,
														"src": "1068:7:6"
													},
													"referencedDeclaration": 1034,
													"src": "1068:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PathKey_$1034_storage_ptr",
														"typeString": "struct PathKey"
													}
												},
												"id": 688,
												"nodeType": "ArrayTypeName",
												"src": "1068:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PathKey_$1034_storage_$dyn_storage_ptr",
													"typeString": "struct PathKey[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 691,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1100:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 694,
											"src": "1092:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 690,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1092:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 693,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1126:16:6",
											"nodeType": "VariableDeclaration",
											"scope": 694,
											"src": "1118:24:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 692,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1118:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "1012:16:6",
									"nodeType": "StructDefinition",
									"scope": 721,
									"src": "1005:144:6",
									"visibility": "public"
								},
								{
									"canonicalName": "IV4Router.ExactOutputSingleParams",
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "1155:57:6",
										"text": "@notice Parameters for a single-hop exact-output swap"
									},
									"id": 707,
									"members": [
										{
											"constant": false,
											"id": 698,
											"mutability": "mutable",
											"name": "poolKey",
											"nameLocation": "1266:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 707,
											"src": "1258:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolKey_$1840_storage_ptr",
												"typeString": "struct PoolKey"
											},
											"typeName": {
												"id": 697,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 696,
													"name": "PoolKey",
													"nameLocations": [
														"1258:7:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1840,
													"src": "1258:7:6"
												},
												"referencedDeclaration": 1840,
												"src": "1258:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1840_storage_ptr",
													"typeString": "struct PoolKey"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 700,
											"mutability": "mutable",
											"name": "zeroForOne",
											"nameLocation": "1288:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 707,
											"src": "1283:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 699,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1283:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 702,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1316:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 707,
											"src": "1308:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 701,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1308:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 704,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1343:15:6",
											"nodeType": "VariableDeclaration",
											"scope": 707,
											"src": "1335:23:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 703,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1335:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 706,
											"mutability": "mutable",
											"name": "hookData",
											"nameLocation": "1374:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 707,
											"src": "1368:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 705,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1368:5:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1224:23:6",
									"nodeType": "StructDefinition",
									"scope": 721,
									"src": "1217:172:6",
									"visibility": "public"
								},
								{
									"canonicalName": "IV4Router.ExactOutputParams",
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "1395:56:6",
										"text": "@notice Parameters for a multi-hop exact-output swap"
									},
									"id": 720,
									"members": [
										{
											"constant": false,
											"id": 711,
											"mutability": "mutable",
											"name": "currencyOut",
											"nameLocation": "1500:11:6",
											"nodeType": "VariableDeclaration",
											"scope": 720,
											"src": "1491:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
												"typeString": "Currency"
											},
											"typeName": {
												"id": 710,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 709,
													"name": "Currency",
													"nameLocations": [
														"1491:8:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1494,
													"src": "1491:8:6"
												},
												"referencedDeclaration": 1494,
												"src": "1491:8:6",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
													"typeString": "Currency"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 715,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1531:4:6",
											"nodeType": "VariableDeclaration",
											"scope": 720,
											"src": "1521:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_PathKey_$1034_storage_$dyn_storage_ptr",
												"typeString": "struct PathKey[]"
											},
											"typeName": {
												"baseType": {
													"id": 713,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 712,
														"name": "PathKey",
														"nameLocations": [
															"1521:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1034,
														"src": "1521:7:6"
													},
													"referencedDeclaration": 1034,
													"src": "1521:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PathKey_$1034_storage_ptr",
														"typeString": "struct PathKey"
													}
												},
												"id": 714,
												"nodeType": "ArrayTypeName",
												"src": "1521:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PathKey_$1034_storage_$dyn_storage_ptr",
													"typeString": "struct PathKey[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 717,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1553:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 720,
											"src": "1545:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 716,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1545:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 719,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1580:15:6",
											"nodeType": "VariableDeclaration",
											"scope": 720,
											"src": "1572:23:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 718,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1572:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "1463:17:6",
									"nodeType": "StructDefinition",
									"scope": 721,
									"src": "1456:146:6",
									"visibility": "public"
								}
							],
							"scope": 722,
							"src": "326:1278:6",
							"usedErrors": [
								661,
								668
							],
							"usedEvents": []
						}
					],
					"src": "32:1572:6"
				},
				"id": 6
			},
			"UniswapV4/interfaces/external/IERC20Minimal.sol": {
				"ast": {
					"absolutePath": "UniswapV4/interfaces/external/IERC20Minimal.sol",
					"exportedSymbols": {
						"IERC20Minimal": [
							793
						]
					},
					"id": 794,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 723,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Minimal",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 724,
								"nodeType": "StructuredDocumentation",
								"src": "57:132:7",
								"text": "@title Minimal ERC20 interface for Uniswap\n @notice Contains a subset of the full ERC20 interface that is used in Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 793,
							"linearizedBaseContracts": [
								793
							],
							"name": "IERC20Minimal",
							"nameLocation": "199:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "219:212:7",
										"text": "@notice Returns an account's balance in the token\n @param account The account for which to look up the number of tokens it has, i.e. its balance\n @return The number of tokens held by the account"
									},
									"functionSelector": "70a08231",
									"id": 732,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "445:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "463:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "455:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "454:17:7"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "495:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:9:7"
									},
									"scope": 793,
									"src": "436:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "510:333:7",
										"text": "@notice Transfers the amount of token from the `msg.sender` to the recipient\n @param recipient The account that will receive the amount transferred\n @param amount The number of tokens to send from the sender to the recipient\n @return Returns true for a successful transfer, false for an unsuccessful transfer"
									},
									"functionSelector": "a9059cbb",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "857:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "874:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "866:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "893:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "885:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "865:35:7"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "919:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 739,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "919:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "918:6:7"
									},
									"scope": 793,
									"src": "848:77:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "931:250:7",
										"text": "@notice Returns the current allowance given to a spender by an owner\n @param owner The account of the token owner\n @param spender The account of the token spender\n @return The current allowance granted by `owner` to `spender`"
									},
									"functionSelector": "dd62ed3e",
									"id": 752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1195:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1213:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "1205:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1228:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "1220:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:32:7"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "1260:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1259:9:7"
									},
									"scope": 793,
									"src": "1186:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "1275:343:7",
										"text": "@notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\n @param spender The account which will be allowed to spend a given amount of the owners tokens\n @param amount The amount of tokens allowed to be used by `spender`\n @return Returns true for a successful approval, false for unsuccessful"
									},
									"functionSelector": "095ea7b3",
									"id": 762,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1632:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1648:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "1640:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1640:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1665:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "1657:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1639:33:7"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "1691:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 759,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1691:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1690:6:7"
									},
									"scope": 793,
									"src": "1623:74:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "1703:371:7",
										"text": "@notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\n @param sender The account from which the transfer will be initiated\n @param recipient The recipient of the transfer\n @param amount The amount of the transfer\n @return Returns true for a successful transfer, false for unsuccessful"
									},
									"functionSelector": "23b872dd",
									"id": 774,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2088:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2109:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "2101:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2125:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "2117:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2117:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2144:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "2136:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2136:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:51:7"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "2170:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2170:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2169:6:7"
									},
									"scope": 793,
									"src": "2079:97:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "2182:369:7",
										"text": "@notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\n @param from The account from which the tokens were sent, i.e. the balance decreased\n @param to The account to which the tokens were sent, i.e. the balance increased\n @param value The amount of tokens that were transferred"
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 783,
									"name": "Transfer",
									"nameLocation": "2562:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2587:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "2571:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2609:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "2593:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2593:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2621:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "2613:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2613:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2570:57:7"
									},
									"src": "2556:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "2634:321:7",
										"text": "@notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\n @param owner The account that approved spending of its tokens\n @param spender The account for which the spending allowance was modified\n @param value The new allowance from the owner to the spender"
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 792,
									"name": "Approval",
									"nameLocation": "2966:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2991:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "2975:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2975:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3014:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "2998:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3031:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "3023:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2974:63:7"
									},
									"src": "2960:78:7"
								}
							],
							"scope": 794,
							"src": "189:2851:7",
							"usedErrors": [],
							"usedEvents": [
								783,
								792
							]
						}
					],
					"src": "32:3009:7"
				},
				"id": 7
			},
			"UniswapV4/interfaces/external/IERC6909Claims.sol": {
				"ast": {
					"absolutePath": "UniswapV4/interfaces/external/IERC6909Claims.sol",
					"exportedSymbols": {
						"IERC6909Claims": [
							907
						]
					},
					"id": 908,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 795,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC6909Claims",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 796,
								"nodeType": "StructuredDocumentation",
								"src": "57:79:8",
								"text": "@notice Interface for claims over a contract balance, wrapped as a ERC6909"
							},
							"fullyImplemented": false,
							"id": 907,
							"linearizedBaseContracts": [
								907
							],
							"name": "IERC6909Claims",
							"nameLocation": "146:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "ceb576d9f15e4e200fdb5096d64d5dfd667e16def20c1eefd14256d8e3faa267",
									"id": 804,
									"name": "OperatorSet",
									"nameLocation": "352:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "380:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "364:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "364:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "403:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "387:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "418:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "413:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 801,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "413:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "363:64:8"
									},
									"src": "346:82:8"
								},
								{
									"anonymous": false,
									"eventSelector": "b3fd5071835887567a0671151121894ddccc2842f1d10bedad13e0d17cace9a7",
									"id": 814,
									"name": "Approval",
									"nameLocation": "440:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "465:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "449:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "488:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "472:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "472:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "513:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "497:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "497:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "525:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "517:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:84:8"
									},
									"src": "434:99:8"
								},
								{
									"anonymous": false,
									"eventSelector": "1b3d7edb2e9c0b0e7c525b20aaaef0f5940d2ed71663c7d39266ecafac728859",
									"id": 826,
									"name": "Transfer",
									"nameLocation": "545:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"indexed": false,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "562:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "554:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "586:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "570:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "570:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "608:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "592:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "628:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "612:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "640:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "632:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "553:94:8"
									},
									"src": "539:109:8"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:170:8",
										"text": "@notice Owner balance of an id.\n @param owner The address of the owner.\n @param id The id of the token.\n @return amount The balance of the token."
									},
									"functionSelector": "00fdd58e",
									"id": 836,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1020:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1038:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "1030:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1053:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "1045:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1045:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1029:27:8"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1088:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "1080:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1080:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1079:16:8"
									},
									"scope": 907,
									"src": "1011:85:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "1102:227:8",
										"text": "@notice Spender allowance of an id.\n @param owner The address of the owner.\n @param spender The address of the spender.\n @param id The id of the token.\n @return amount The allowance of the token."
									},
									"functionSelector": "598af9e7",
									"id": 848,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1343:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1361:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "1353:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1353:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1376:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "1368:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1368:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1393:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "1385:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1385:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1352:44:8"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1428:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "1420:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1420:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1419:16:8"
									},
									"scope": 907,
									"src": "1334:102:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "1442:214:8",
										"text": "@notice Checks if a spender is approved by an owner as an operator\n @param owner The address of the owner.\n @param spender The address of the spender.\n @return approved The approval status."
									},
									"functionSelector": "b6363cf2",
									"id": 858,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isOperator",
									"nameLocation": "1670:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1689:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "1681:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1704:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "1696:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1696:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:32:8"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1741:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "1736:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 855,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1736:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1735:15:8"
									},
									"scope": 907,
									"src": "1661:90:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "1757:273:8",
										"text": "@notice Transfers an amount of an id from the caller to a receiver.\n @param receiver The address of the receiver.\n @param id The id of the token.\n @param amount The amount of the token.\n @return bool True, always, unless the function reverts"
									},
									"functionSelector": "095bcdb6",
									"id": 870,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2044:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "2061:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "2053:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2053:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2079:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "2071:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2071:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2091:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "2083:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2083:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:46:8"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "2117:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 867,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2117:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2116:6:8"
									},
									"scope": 907,
									"src": "2035:88:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "2129:320:8",
										"text": "@notice Transfers an amount of an id from a sender to a receiver.\n @param sender The address of the sender.\n @param receiver The address of the receiver.\n @param id The id of the token.\n @param amount The amount of the token.\n @return bool True, always, unless the function reverts"
									},
									"functionSelector": "fe99049a",
									"id": 884,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2463:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2484:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "2476:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2476:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "2500:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "2492:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2518:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "2510:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2510:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2530:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "2522:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2475:62:8"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "2556:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 881,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2556:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2555:6:8"
									},
									"scope": 907,
									"src": "2454:108:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "2568:224:8",
										"text": "@notice Approves an amount of an id to a spender.\n @param spender The address of the spender.\n @param id The id of the token.\n @param amount The amount of the token.\n @return bool True, always"
									},
									"functionSelector": "426a8493",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2806:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2822:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "2814:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2814:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2839:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "2831:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2831:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2851:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "2843:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2843:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2813:45:8"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "2877:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 893,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2877:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:6:8"
									},
									"scope": 907,
									"src": "2797:86:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "2889:187:8",
										"text": "@notice Sets or removes an operator for the caller.\n @param operator The address of the operator.\n @param approved The approval status.\n @return bool True, always"
									},
									"functionSelector": "558a7297",
									"id": 906,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setOperator",
									"nameLocation": "3090:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3110:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "3102:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3102:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3125:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "3120:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 900,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3120:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3101:33:8"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "3153:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 903,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3153:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3152:6:8"
									},
									"scope": 907,
									"src": "3081:78:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 908,
							"src": "136:3025:8",
							"usedErrors": [],
							"usedEvents": [
								804,
								814,
								826
							]
						}
					],
					"src": "32:3130:8"
				},
				"id": 8
			},
			"UniswapV4/libraries/CustomRevert.sol": {
				"ast": {
					"absolutePath": "UniswapV4/libraries/CustomRevert.sol",
					"exportedSymbols": {
						"CustomRevert": [
							1013
						]
					},
					"id": 1014,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 909,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CustomRevert",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 910,
								"nodeType": "StructuredDocumentation",
								"src": "57:444:9",
								"text": "@title Library for reverting with custom errors efficiently\n @notice Contains functions for reverting with custom errors with different argument types efficiently\n @dev To use this library, declare `using CustomRevert for bytes4;` and replace `revert CustomError()` with\n `CustomError.selector.revertWith()`\n @dev The functions may tamper with the free memory pointer but it is fine since the call context is exited immediately"
							},
							"fullyImplemented": true,
							"id": 1013,
							"linearizedBaseContracts": [
								1013
							],
							"name": "CustomRevert",
							"nameLocation": "509:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "528:55:9",
										"text": "@dev ERC-7751 error for wrapping bubbled up reverts"
									},
									"errorSelector": "90bfb865",
									"id": 921,
									"name": "WrappedError",
									"nameLocation": "594:12:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "615:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "607:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "selector",
												"nameLocation": "630:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "623:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 914,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "623:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "646:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "640:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 916,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "640:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "details",
												"nameLocation": "660:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "654:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 918,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "654:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "606:62:9"
									},
									"src": "588:81:9"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "804:112:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "839:71:9",
													"nodeType": "YulBlock",
													"src": "839:71:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "860:1:9",
																		"nodeType": "YulLiteral",
																		"src": "860:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "selector",
																		"nativeSrc": "863:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "863:8:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "853:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "853:6:9"
																},
																"nativeSrc": "853:19:9",
																"nodeType": "YulFunctionCall",
																"src": "853:19:9"
															},
															"nativeSrc": "853:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "853:19:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "892:1:9",
																		"nodeType": "YulLiteral",
																		"src": "892:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "895:4:9",
																		"nodeType": "YulLiteral",
																		"src": "895:4:9",
																		"type": "",
																		"value": "0x04"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "885:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "885:6:9"
																},
																"nativeSrc": "885:15:9",
																"nodeType": "YulFunctionCall",
																"src": "885:15:9"
															},
															"nativeSrc": "885:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "885:15:9"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 924,
														"isOffset": false,
														"isSlot": false,
														"src": "863:8:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 927,
												"nodeType": "InlineAssembly",
												"src": "814:96:9"
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "675:73:9",
										"text": "@dev Reverts with the selector of a custom error in the scratch space"
									},
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revertWith",
									"nameLocation": "762:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "selector",
												"nameLocation": "780:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "773:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 923,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "773:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "772:17:9"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "804:0:9"
									},
									"scope": 1013,
									"src": "753:163:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 938,
										"nodeType": "Block",
										"src": "1074:192:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1109:151:9",
													"nodeType": "YulBlock",
													"src": "1109:151:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1130:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1130:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "selector",
																		"nativeSrc": "1133:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "1133:8:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1123:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1123:6:9"
																},
																"nativeSrc": "1123:19:9",
																"nodeType": "YulFunctionCall",
																"src": "1123:19:9"
															},
															"nativeSrc": "1123:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "1123:19:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1162:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1162:4:9",
																		"type": "",
																		"value": "0x04"
																	},
																	{
																		"arguments": [
																			{
																				"name": "addr",
																				"nativeSrc": "1172:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1172:4:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1178:42:9",
																				"nodeType": "YulLiteral",
																				"src": "1178:42:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1168:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1168:3:9"
																		},
																		"nativeSrc": "1168:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1168:53:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1155:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1155:6:9"
																},
																"nativeSrc": "1155:67:9",
																"nodeType": "YulFunctionCall",
																"src": "1155:67:9"
															},
															"nativeSrc": "1155:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "1155:67:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1242:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1242:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1245:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1245:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1235:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1235:6:9"
																},
																"nativeSrc": "1235:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1235:15:9"
															},
															"nativeSrc": "1235:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1235:15:9"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 934,
														"isOffset": false,
														"isSlot": false,
														"src": "1172:4:9",
														"valueSize": 1
													},
													{
														"declaration": 932,
														"isOffset": false,
														"isSlot": false,
														"src": "1133:8:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 937,
												"nodeType": "InlineAssembly",
												"src": "1084:176:9"
											}
										]
									},
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "922:82:9",
										"text": "@dev Reverts with a custom error with an address argument in the scratch space"
									},
									"id": 939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revertWith",
									"nameLocation": "1018:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "selector",
												"nameLocation": "1036:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "1029:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 931,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1029:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "1054:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "1046:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1028:31:9"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1074:0:9"
									},
									"scope": 1013,
									"src": "1009:257:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "1421:159:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1456:118:9",
													"nodeType": "YulBlock",
													"src": "1456:118:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1477:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1477:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "selector",
																		"nativeSrc": "1480:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "1480:8:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1470:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1470:6:9"
																},
																"nativeSrc": "1470:19:9",
																"nodeType": "YulFunctionCall",
																"src": "1470:19:9"
															},
															"nativeSrc": "1470:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "1470:19:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1509:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1509:4:9",
																		"type": "",
																		"value": "0x04"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1526:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1526:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "value",
																				"nativeSrc": "1529:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1529:5:9"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nativeSrc": "1515:10:9",
																			"nodeType": "YulIdentifier",
																			"src": "1515:10:9"
																		},
																		"nativeSrc": "1515:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1515:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1502:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1502:6:9"
																},
																"nativeSrc": "1502:34:9",
																"nodeType": "YulFunctionCall",
																"src": "1502:34:9"
															},
															"nativeSrc": "1502:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "1502:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1556:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1556:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1559:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1559:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1549:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1549:6:9"
																},
																"nativeSrc": "1549:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1549:15:9"
															},
															"nativeSrc": "1549:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1549:15:9"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 942,
														"isOffset": false,
														"isSlot": false,
														"src": "1480:8:9",
														"valueSize": 1
													},
													{
														"declaration": 944,
														"isOffset": false,
														"isSlot": false,
														"src": "1529:5:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 947,
												"nodeType": "InlineAssembly",
												"src": "1431:143:9"
											}
										]
									},
									"documentation": {
										"id": 940,
										"nodeType": "StructuredDocumentation",
										"src": "1272:80:9",
										"text": "@dev Reverts with a custom error with an int24 argument in the scratch space"
									},
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revertWith",
									"nameLocation": "1366:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "selector",
												"nameLocation": "1384:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "1377:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 941,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1377:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1400:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "1394:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 943,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1394:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1376:30:9"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1421:0:9"
									},
									"scope": 1013,
									"src": "1357:223:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 958,
										"nodeType": "Block",
										"src": "1738:193:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1773:152:9",
													"nodeType": "YulBlock",
													"src": "1773:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1794:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1794:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "selector",
																		"nativeSrc": "1797:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "1797:8:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1787:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1787:6:9"
																},
																"nativeSrc": "1787:19:9",
																"nodeType": "YulFunctionCall",
																"src": "1787:19:9"
															},
															"nativeSrc": "1787:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "1787:19:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1826:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1826:4:9",
																		"type": "",
																		"value": "0x04"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1836:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1836:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1843:42:9",
																				"nodeType": "YulLiteral",
																				"src": "1843:42:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1832:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1832:3:9"
																		},
																		"nativeSrc": "1832:54:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1832:54:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1819:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1819:6:9"
																},
																"nativeSrc": "1819:68:9",
																"nodeType": "YulFunctionCall",
																"src": "1819:68:9"
															},
															"nativeSrc": "1819:68:9",
															"nodeType": "YulExpressionStatement",
															"src": "1819:68:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1907:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1907:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1910:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1910:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1900:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1900:6:9"
																},
																"nativeSrc": "1900:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1900:15:9"
															},
															"nativeSrc": "1900:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1900:15:9"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 952,
														"isOffset": false,
														"isSlot": false,
														"src": "1797:8:9",
														"valueSize": 1
													},
													{
														"declaration": 954,
														"isOffset": false,
														"isSlot": false,
														"src": "1836:5:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 957,
												"nodeType": "InlineAssembly",
												"src": "1748:177:9"
											}
										]
									},
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "1586:81:9",
										"text": "@dev Reverts with a custom error with a uint160 argument in the scratch space"
									},
									"id": 959,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revertWith",
									"nameLocation": "1681:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "selector",
												"nameLocation": "1699:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "1692:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 951,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1692:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1717:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "1709:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 953,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1709:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1691:32:9"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1738:0:9"
									},
									"scope": 1013,
									"src": "1672:259:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "2082:267:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2117:226:9",
													"nodeType": "YulBlock",
													"src": "2117:226:9",
													"statements": [
														{
															"nativeSrc": "2131:22:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2131:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2148:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2148:4:9",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2142:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2142:5:9"
																},
																"nativeSrc": "2142:11:9",
																"nodeType": "YulFunctionCall",
																"src": "2142:11:9"
															},
															"variables": [
																{
																	"name": "fmp",
																	"nativeSrc": "2135:3:9",
																	"nodeType": "YulTypedName",
																	"src": "2135:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fmp",
																		"nativeSrc": "2173:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2173:3:9"
																	},
																	{
																		"name": "selector",
																		"nativeSrc": "2178:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "2178:8:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2166:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2166:6:9"
																},
																"nativeSrc": "2166:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2166:21:9"
															},
															"nativeSrc": "2166:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "2166:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "2211:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2211:3:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2216:4:9",
																				"nodeType": "YulLiteral",
																				"src": "2216:4:9",
																				"type": "",
																				"value": "0x04"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2207:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2207:3:9"
																		},
																		"nativeSrc": "2207:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2207:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2234:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2234:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "value1",
																				"nativeSrc": "2237:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2237:6:9"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nativeSrc": "2223:10:9",
																			"nodeType": "YulIdentifier",
																			"src": "2223:10:9"
																		},
																		"nativeSrc": "2223:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2223:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2200:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2200:6:9"
																},
																"nativeSrc": "2200:45:9",
																"nodeType": "YulFunctionCall",
																"src": "2200:45:9"
															},
															"nativeSrc": "2200:45:9",
															"nodeType": "YulExpressionStatement",
															"src": "2200:45:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "2269:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2269:3:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2274:4:9",
																				"nodeType": "YulLiteral",
																				"src": "2274:4:9",
																				"type": "",
																				"value": "0x24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2265:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2265:3:9"
																		},
																		"nativeSrc": "2265:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2265:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2292:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2292:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "value2",
																				"nativeSrc": "2295:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2295:6:9"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nativeSrc": "2281:10:9",
																			"nodeType": "YulIdentifier",
																			"src": "2281:10:9"
																		},
																		"nativeSrc": "2281:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2281:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2258:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2258:6:9"
																},
																"nativeSrc": "2258:45:9",
																"nodeType": "YulFunctionCall",
																"src": "2258:45:9"
															},
															"nativeSrc": "2258:45:9",
															"nodeType": "YulExpressionStatement",
															"src": "2258:45:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fmp",
																		"nativeSrc": "2323:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2323:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2328:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2328:4:9",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2316:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2316:6:9"
																},
																"nativeSrc": "2316:17:9",
																"nodeType": "YulFunctionCall",
																"src": "2316:17:9"
															},
															"nativeSrc": "2316:17:9",
															"nodeType": "YulExpressionStatement",
															"src": "2316:17:9"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 962,
														"isOffset": false,
														"isSlot": false,
														"src": "2178:8:9",
														"valueSize": 1
													},
													{
														"declaration": 964,
														"isOffset": false,
														"isSlot": false,
														"src": "2237:6:9",
														"valueSize": 1
													},
													{
														"declaration": 966,
														"isOffset": false,
														"isSlot": false,
														"src": "2295:6:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 969,
												"nodeType": "InlineAssembly",
												"src": "2092:251:9"
											}
										]
									},
									"documentation": {
										"id": 960,
										"nodeType": "StructuredDocumentation",
										"src": "1937:61:9",
										"text": "@dev Reverts with a custom error with two int24 arguments"
									},
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revertWith",
									"nameLocation": "2012:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "selector",
												"nameLocation": "2030:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "2023:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 961,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2023:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "value1",
												"nameLocation": "2046:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "2040:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 963,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2040:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "value2",
												"nameLocation": "2060:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "2054:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 965,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2054:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:45:9"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2082:0:9"
									},
									"scope": 1013,
									"src": "2003:346:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 982,
										"nodeType": "Block",
										"src": "2506:335:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2541:294:9",
													"nodeType": "YulBlock",
													"src": "2541:294:9",
													"statements": [
														{
															"nativeSrc": "2555:22:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2555:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2572:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2572:4:9",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2566:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:9"
																},
																"nativeSrc": "2566:11:9",
																"nodeType": "YulFunctionCall",
																"src": "2566:11:9"
															},
															"variables": [
																{
																	"name": "fmp",
																	"nativeSrc": "2559:3:9",
																	"nodeType": "YulTypedName",
																	"src": "2559:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fmp",
																		"nativeSrc": "2597:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2597:3:9"
																	},
																	{
																		"name": "selector",
																		"nativeSrc": "2602:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "2602:8:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2590:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2590:6:9"
																},
																"nativeSrc": "2590:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2590:21:9"
															},
															"nativeSrc": "2590:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "2590:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "2635:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2635:3:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2640:4:9",
																				"nodeType": "YulLiteral",
																				"src": "2640:4:9",
																				"type": "",
																				"value": "0x04"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2631:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2631:3:9"
																		},
																		"nativeSrc": "2631:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2631:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "2651:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2651:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2659:42:9",
																				"nodeType": "YulLiteral",
																				"src": "2659:42:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2647:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2647:3:9"
																		},
																		"nativeSrc": "2647:55:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2647:55:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2624:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2624:6:9"
																},
																"nativeSrc": "2624:79:9",
																"nodeType": "YulFunctionCall",
																"src": "2624:79:9"
															},
															"nativeSrc": "2624:79:9",
															"nodeType": "YulExpressionStatement",
															"src": "2624:79:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "2727:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2727:3:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2732:4:9",
																				"nodeType": "YulLiteral",
																				"src": "2732:4:9",
																				"type": "",
																				"value": "0x24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2723:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2723:3:9"
																		},
																		"nativeSrc": "2723:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2723:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "2743:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2743:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2751:42:9",
																				"nodeType": "YulLiteral",
																				"src": "2751:42:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2739:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2739:3:9"
																		},
																		"nativeSrc": "2739:55:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2739:55:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2716:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2716:6:9"
																},
																"nativeSrc": "2716:79:9",
																"nodeType": "YulFunctionCall",
																"src": "2716:79:9"
															},
															"nativeSrc": "2716:79:9",
															"nodeType": "YulExpressionStatement",
															"src": "2716:79:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fmp",
																		"nativeSrc": "2815:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2815:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2820:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2820:4:9",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2808:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2808:6:9"
																},
																"nativeSrc": "2808:17:9",
																"nodeType": "YulFunctionCall",
																"src": "2808:17:9"
															},
															"nativeSrc": "2808:17:9",
															"nodeType": "YulExpressionStatement",
															"src": "2808:17:9"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 974,
														"isOffset": false,
														"isSlot": false,
														"src": "2602:8:9",
														"valueSize": 1
													},
													{
														"declaration": 976,
														"isOffset": false,
														"isSlot": false,
														"src": "2651:6:9",
														"valueSize": 1
													},
													{
														"declaration": 978,
														"isOffset": false,
														"isSlot": false,
														"src": "2743:6:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 981,
												"nodeType": "InlineAssembly",
												"src": "2516:319:9"
											}
										]
									},
									"documentation": {
										"id": 972,
										"nodeType": "StructuredDocumentation",
										"src": "2355:63:9",
										"text": "@dev Reverts with a custom error with two uint160 arguments"
									},
									"id": 983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revertWith",
									"nameLocation": "2432:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "selector",
												"nameLocation": "2450:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "2443:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 973,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2443:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "value1",
												"nameLocation": "2468:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "2460:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 975,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "value2",
												"nameLocation": "2484:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "2476:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 977,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2476:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:49:9"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2506:0:9"
									},
									"scope": 1013,
									"src": "2423:418:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "2998:335:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3033:294:9",
													"nodeType": "YulBlock",
													"src": "3033:294:9",
													"statements": [
														{
															"nativeSrc": "3047:22:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3047:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3064:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3064:4:9",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3058:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3058:5:9"
																},
																"nativeSrc": "3058:11:9",
																"nodeType": "YulFunctionCall",
																"src": "3058:11:9"
															},
															"variables": [
																{
																	"name": "fmp",
																	"nativeSrc": "3051:3:9",
																	"nodeType": "YulTypedName",
																	"src": "3051:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fmp",
																		"nativeSrc": "3089:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3089:3:9"
																	},
																	{
																		"name": "selector",
																		"nativeSrc": "3094:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "3094:8:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3082:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:9"
																},
																"nativeSrc": "3082:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:9"
															},
															"nativeSrc": "3082:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "3082:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "3127:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3127:3:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3132:4:9",
																				"nodeType": "YulLiteral",
																				"src": "3132:4:9",
																				"type": "",
																				"value": "0x04"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3123:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3123:3:9"
																		},
																		"nativeSrc": "3123:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3123:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "3143:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3143:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3151:42:9",
																				"nodeType": "YulLiteral",
																				"src": "3151:42:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3139:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3139:3:9"
																		},
																		"nativeSrc": "3139:55:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3139:55:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3116:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3116:6:9"
																},
																"nativeSrc": "3116:79:9",
																"nodeType": "YulFunctionCall",
																"src": "3116:79:9"
															},
															"nativeSrc": "3116:79:9",
															"nodeType": "YulExpressionStatement",
															"src": "3116:79:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "3219:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3219:3:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3224:4:9",
																				"nodeType": "YulLiteral",
																				"src": "3224:4:9",
																				"type": "",
																				"value": "0x24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3215:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3215:3:9"
																		},
																		"nativeSrc": "3215:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3215:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "3235:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3235:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3243:42:9",
																				"nodeType": "YulLiteral",
																				"src": "3243:42:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3231:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3231:3:9"
																		},
																		"nativeSrc": "3231:55:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3231:55:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3208:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3208:6:9"
																},
																"nativeSrc": "3208:79:9",
																"nodeType": "YulFunctionCall",
																"src": "3208:79:9"
															},
															"nativeSrc": "3208:79:9",
															"nodeType": "YulExpressionStatement",
															"src": "3208:79:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fmp",
																		"nativeSrc": "3307:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3307:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3312:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3312:4:9",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3300:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3300:6:9"
																},
																"nativeSrc": "3300:17:9",
																"nodeType": "YulFunctionCall",
																"src": "3300:17:9"
															},
															"nativeSrc": "3300:17:9",
															"nodeType": "YulExpressionStatement",
															"src": "3300:17:9"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 986,
														"isOffset": false,
														"isSlot": false,
														"src": "3094:8:9",
														"valueSize": 1
													},
													{
														"declaration": 988,
														"isOffset": false,
														"isSlot": false,
														"src": "3143:6:9",
														"valueSize": 1
													},
													{
														"declaration": 990,
														"isOffset": false,
														"isSlot": false,
														"src": "3235:6:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 993,
												"nodeType": "InlineAssembly",
												"src": "3008:319:9"
											}
										]
									},
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "2847:63:9",
										"text": "@dev Reverts with a custom error with two address arguments"
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revertWith",
									"nameLocation": "2924:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "selector",
												"nameLocation": "2942:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "2935:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 985,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2935:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "value1",
												"nameLocation": "2960:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "2952:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "value2",
												"nameLocation": "2976:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "2968:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2968:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2934:49:9"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2998:0:9"
									},
									"scope": 1013,
									"src": "2915:418:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "3670:1501:9",
										"statements": [
											{
												"assignments": [
													1006
												],
												"declarations": [
													{
														"constant": false,
														"id": 1006,
														"mutability": "mutable",
														"name": "wrappedErrorSelector",
														"nameLocation": "3687:20:9",
														"nodeType": "VariableDeclaration",
														"scope": 1011,
														"src": "3680:27:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"typeName": {
															"id": 1005,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "3680:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1009,
												"initialValue": {
													"expression": {
														"id": 1007,
														"name": "WrappedError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "3710:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes4_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_error_$",
															"typeString": "function (address,bytes4,bytes memory,bytes memory) pure returns (error)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3723:8:9",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "3710:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3680:51:9"
											},
											{
												"AST": {
													"nativeSrc": "3766:1399:9",
													"nodeType": "YulBlock",
													"src": "3766:1399:9",
													"statements": [
														{
															"nativeSrc": "3856:66:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3856:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nativeSrc": "3891:14:9",
																							"nodeType": "YulIdentifier",
																							"src": "3891:14:9"
																						},
																						"nativeSrc": "3891:16:9",
																						"nodeType": "YulFunctionCall",
																						"src": "3891:16:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3909:2:9",
																						"nodeType": "YulLiteral",
																						"src": "3909:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3887:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3887:3:9"
																				},
																				"nativeSrc": "3887:25:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3887:25:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3914:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3914:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3883:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3883:3:9"
																		},
																		"nativeSrc": "3883:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3883:34:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3919:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3919:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3879:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3879:3:9"
																},
																"nativeSrc": "3879:43:9",
																"nodeType": "YulFunctionCall",
																"src": "3879:43:9"
															},
															"variables": [
																{
																	"name": "encodedDataSize",
																	"nativeSrc": "3860:15:9",
																	"nodeType": "YulTypedName",
																	"src": "3860:15:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3936:22:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3953:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3953:4:9",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3947:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3947:5:9"
																},
																"nativeSrc": "3947:11:9",
																"nodeType": "YulFunctionCall",
																"src": "3947:11:9"
															},
															"variables": [
																{
																	"name": "fmp",
																	"nativeSrc": "3940:3:9",
																	"nodeType": "YulTypedName",
																	"src": "3940:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fmp",
																		"nativeSrc": "4101:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4101:3:9"
																	},
																	{
																		"name": "wrappedErrorSelector",
																		"nativeSrc": "4106:20:9",
																		"nodeType": "YulIdentifier",
																		"src": "4106:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4094:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4094:6:9"
																},
																"nativeSrc": "4094:33:9",
																"nodeType": "YulFunctionCall",
																"src": "4094:33:9"
															},
															"nativeSrc": "4094:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "4094:33:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "4151:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4151:3:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4156:4:9",
																				"nodeType": "YulLiteral",
																				"src": "4156:4:9",
																				"type": "",
																				"value": "0x04"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4147:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:9"
																		},
																		"nativeSrc": "4147:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4147:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "revertingContract",
																				"nativeSrc": "4167:17:9",
																				"nodeType": "YulIdentifier",
																				"src": "4167:17:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4186:42:9",
																				"nodeType": "YulLiteral",
																				"src": "4186:42:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4163:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4163:3:9"
																		},
																		"nativeSrc": "4163:66:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4163:66:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4140:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4140:6:9"
																},
																"nativeSrc": "4140:90:9",
																"nodeType": "YulFunctionCall",
																"src": "4140:90:9"
															},
															"nativeSrc": "4140:90:9",
															"nodeType": "YulExpressionStatement",
															"src": "4140:90:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "4271:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4271:3:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4276:4:9",
																				"nodeType": "YulLiteral",
																				"src": "4276:4:9",
																				"type": "",
																				"value": "0x24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4267:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4267:3:9"
																		},
																		"nativeSrc": "4267:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4267:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "revertingFunctionSelector",
																				"nativeSrc": "4303:25:9",
																				"nodeType": "YulIdentifier",
																				"src": "4303:25:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4330:66:9",
																				"nodeType": "YulLiteral",
																				"src": "4330:66:9",
																				"type": "",
																				"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4299:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4299:3:9"
																		},
																		"nativeSrc": "4299:98:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4299:98:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4243:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4243:6:9"
																},
																"nativeSrc": "4243:168:9",
																"nodeType": "YulFunctionCall",
																"src": "4243:168:9"
															},
															"nativeSrc": "4243:168:9",
															"nodeType": "YulExpressionStatement",
															"src": "4243:168:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "4471:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4471:3:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4476:4:9",
																				"nodeType": "YulLiteral",
																				"src": "4476:4:9",
																				"type": "",
																				"value": "0x44"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4467:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4467:3:9"
																		},
																		"nativeSrc": "4467:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4467:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4483:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4483:4:9",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4460:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4460:6:9"
																},
																"nativeSrc": "4460:28:9",
																"nodeType": "YulFunctionCall",
																"src": "4460:28:9"
															},
															"nativeSrc": "4460:28:9",
															"nodeType": "YulExpressionStatement",
															"src": "4460:28:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "4553:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4553:3:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4558:4:9",
																				"nodeType": "YulLiteral",
																				"src": "4558:4:9",
																				"type": "",
																				"value": "0x64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4549:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4549:3:9"
																		},
																		"nativeSrc": "4549:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4549:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4569:4:9",
																				"nodeType": "YulLiteral",
																				"src": "4569:4:9",
																				"type": "",
																				"value": "0xa0"
																			},
																			{
																				"name": "encodedDataSize",
																				"nativeSrc": "4575:15:9",
																				"nodeType": "YulIdentifier",
																				"src": "4575:15:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4565:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4565:3:9"
																		},
																		"nativeSrc": "4565:26:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4565:26:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4542:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4542:6:9"
																},
																"nativeSrc": "4542:50:9",
																"nodeType": "YulFunctionCall",
																"src": "4542:50:9"
															},
															"nativeSrc": "4542:50:9",
															"nodeType": "YulExpressionStatement",
															"src": "4542:50:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "4650:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4650:3:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4655:4:9",
																				"nodeType": "YulLiteral",
																				"src": "4655:4:9",
																				"type": "",
																				"value": "0x84"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4646:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4646:3:9"
																		},
																		"nativeSrc": "4646:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4646:14:9"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nativeSrc": "4662:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "4662:14:9"
																		},
																		"nativeSrc": "4662:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4662:16:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4639:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4639:6:9"
																},
																"nativeSrc": "4639:40:9",
																"nodeType": "YulFunctionCall",
																"src": "4639:40:9"
															},
															"nativeSrc": "4639:40:9",
															"nodeType": "YulExpressionStatement",
															"src": "4639:40:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "4740:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4740:3:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4745:4:9",
																				"nodeType": "YulLiteral",
																				"src": "4745:4:9",
																				"type": "",
																				"value": "0xa4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4736:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4736:3:9"
																		},
																		"nativeSrc": "4736:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4736:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4752:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4752:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nativeSrc": "4755:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "4755:14:9"
																		},
																		"nativeSrc": "4755:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4755:16:9"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nativeSrc": "4721:14:9",
																	"nodeType": "YulIdentifier",
																	"src": "4721:14:9"
																},
																"nativeSrc": "4721:51:9",
																"nodeType": "YulFunctionCall",
																"src": "4721:51:9"
															},
															"nativeSrc": "4721:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "4721:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "4835:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4835:3:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4844:4:9",
																						"nodeType": "YulLiteral",
																						"src": "4844:4:9",
																						"type": "",
																						"value": "0xa4"
																					},
																					{
																						"name": "encodedDataSize",
																						"nativeSrc": "4850:15:9",
																						"nodeType": "YulIdentifier",
																						"src": "4850:15:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4840:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4840:3:9"
																				},
																				"nativeSrc": "4840:26:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4840:26:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4831:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4831:3:9"
																		},
																		"nativeSrc": "4831:36:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4831:36:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4869:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4869:4:9",
																		"type": "",
																		"value": "0x04"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4824:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4824:6:9"
																},
																"nativeSrc": "4824:50:9",
																"nodeType": "YulFunctionCall",
																"src": "4824:50:9"
															},
															"nativeSrc": "4824:50:9",
															"nodeType": "YulExpressionStatement",
															"src": "4824:50:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "fmp",
																				"nativeSrc": "4949:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4949:3:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4958:4:9",
																						"nodeType": "YulLiteral",
																						"src": "4958:4:9",
																						"type": "",
																						"value": "0xc4"
																					},
																					{
																						"name": "encodedDataSize",
																						"nativeSrc": "4964:15:9",
																						"nodeType": "YulIdentifier",
																						"src": "4964:15:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4954:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4954:3:9"
																				},
																				"nativeSrc": "4954:26:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4954:26:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4945:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4945:3:9"
																		},
																		"nativeSrc": "4945:36:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4945:36:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "additionalContext",
																				"nativeSrc": "5003:17:9",
																				"nodeType": "YulIdentifier",
																				"src": "5003:17:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5022:66:9",
																				"nodeType": "YulLiteral",
																				"src": "5022:66:9",
																				"type": "",
																				"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4999:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4999:3:9"
																		},
																		"nativeSrc": "4999:90:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4999:90:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4921:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4921:6:9"
																},
																"nativeSrc": "4921:182:9",
																"nodeType": "YulFunctionCall",
																"src": "4921:182:9"
															},
															"nativeSrc": "4921:182:9",
															"nodeType": "YulExpressionStatement",
															"src": "4921:182:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fmp",
																		"nativeSrc": "5123:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5123:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5132:4:9",
																				"nodeType": "YulLiteral",
																				"src": "5132:4:9",
																				"type": "",
																				"value": "0xe4"
																			},
																			{
																				"name": "encodedDataSize",
																				"nativeSrc": "5138:15:9",
																				"nodeType": "YulIdentifier",
																				"src": "5138:15:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5128:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5128:3:9"
																		},
																		"nativeSrc": "5128:26:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5128:26:9"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5116:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5116:6:9"
																},
																"nativeSrc": "5116:39:9",
																"nodeType": "YulFunctionCall",
																"src": "5116:39:9"
															},
															"nativeSrc": "5116:39:9",
															"nodeType": "YulExpressionStatement",
															"src": "5116:39:9"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1002,
														"isOffset": false,
														"isSlot": false,
														"src": "5003:17:9",
														"valueSize": 1
													},
													{
														"declaration": 998,
														"isOffset": false,
														"isSlot": false,
														"src": "4167:17:9",
														"valueSize": 1
													},
													{
														"declaration": 1000,
														"isOffset": false,
														"isSlot": false,
														"src": "4303:25:9",
														"valueSize": 1
													},
													{
														"declaration": 1006,
														"isOffset": false,
														"isSlot": false,
														"src": "4106:20:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1010,
												"nodeType": "InlineAssembly",
												"src": "3741:1424:9"
											}
										]
									},
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "3339:164:9",
										"text": "@notice bubble up the revert message returned by a call and revert with a wrapped ERC-7751 error\n @dev this method can be vulnerable to revert data bombs"
									},
									"id": 1012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bubbleUpAndRevertWith",
									"nameLocation": "3517:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "revertingContract",
												"nameLocation": "3556:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "3548:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "revertingFunctionSelector",
												"nameLocation": "3590:25:9",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "3583:32:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 999,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3583:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "additionalContext",
												"nameLocation": "3632:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "3625:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1001,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3625:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:117:9"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3670:0:9"
									},
									"scope": 1013,
									"src": "3508:1663:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1014,
							"src": "501:4672:9",
							"usedErrors": [
								921
							],
							"usedEvents": []
						}
					],
					"src": "32:5142:9"
				},
				"id": 9
			},
			"UniswapV4/libraries/PathKey.sol": {
				"ast": {
					"absolutePath": "UniswapV4/libraries/PathKey.sol",
					"exportedSymbols": {
						"Currency": [
							1494
						],
						"IHooks": [
							252
						],
						"PathKey": [
							1034
						],
						"PathKeyLibrary": [
							1098
						],
						"PoolKey": [
							1840
						]
					},
					"id": 1099,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1015,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31:23:10"
						},
						{
							"absolutePath": "UniswapV4/types/Currency.sol",
							"file": "../types/Currency.sol",
							"id": 1017,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1099,
							"sourceUnit": 1789,
							"src": "56:47:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1016,
										"name": "Currency",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1494,
										"src": "64:8:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "UniswapV4/interfaces/IHooks.sol",
							"file": "../interfaces/IHooks.sol",
							"id": 1019,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1099,
							"sourceUnit": 253,
							"src": "104:48:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1018,
										"name": "IHooks",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 252,
										"src": "112:6:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "UniswapV4/types/PoolKey.sol",
							"file": "../types/PoolKey.sol",
							"id": 1021,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1099,
							"sourceUnit": 1841,
							"src": "153:45:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1020,
										"name": "PoolKey",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1840,
										"src": "161:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "PathKey",
							"id": 1034,
							"members": [
								{
									"constant": false,
									"id": 1024,
									"mutability": "mutable",
									"name": "intermediateCurrency",
									"nameLocation": "230:20:10",
									"nodeType": "VariableDeclaration",
									"scope": 1034,
									"src": "221:29:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
										"typeString": "Currency"
									},
									"typeName": {
										"id": 1023,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1022,
											"name": "Currency",
											"nameLocations": [
												"221:8:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1494,
											"src": "221:8:10"
										},
										"referencedDeclaration": 1494,
										"src": "221:8:10",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
											"typeString": "Currency"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1026,
									"mutability": "mutable",
									"name": "fee",
									"nameLocation": "263:3:10",
									"nodeType": "VariableDeclaration",
									"scope": 1034,
									"src": "256:10:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint24",
										"typeString": "uint24"
									},
									"typeName": {
										"id": 1025,
										"name": "uint24",
										"nodeType": "ElementaryTypeName",
										"src": "256:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint24",
											"typeString": "uint24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1028,
									"mutability": "mutable",
									"name": "tickSpacing",
									"nameLocation": "278:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1034,
									"src": "272:17:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 1027,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "272:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1031,
									"mutability": "mutable",
									"name": "hooks",
									"nameLocation": "302:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 1034,
									"src": "295:12:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IHooks_$252",
										"typeString": "contract IHooks"
									},
									"typeName": {
										"id": 1030,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1029,
											"name": "IHooks",
											"nameLocations": [
												"295:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 252,
											"src": "295:6:10"
										},
										"referencedDeclaration": 252,
										"src": "295:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IHooks_$252",
											"typeString": "contract IHooks"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1033,
									"mutability": "mutable",
									"name": "hookData",
									"nameLocation": "319:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 1034,
									"src": "313:14:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 1032,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "313:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "PathKey",
							"nameLocation": "207:7:10",
							"nodeType": "StructDefinition",
							"scope": 1099,
							"src": "200:130:10",
							"visibility": "public"
						},
						{
							"global": true,
							"id": 1038,
							"libraryName": {
								"id": 1035,
								"name": "PathKeyLibrary",
								"nameLocations": [
									"338:14:10"
								],
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1098,
								"src": "338:14:10"
							},
							"nodeType": "UsingForDirective",
							"src": "332:40:10",
							"typeName": {
								"id": 1037,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 1036,
									"name": "PathKey",
									"nameLocations": [
										"357:7:10"
									],
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 1034,
									"src": "357:7:10"
								},
								"referencedDeclaration": 1034,
								"src": "357:7:10",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_PathKey_$1034_storage_ptr",
									"typeString": "struct PathKey"
								}
							}
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PathKeyLibrary",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1039,
								"nodeType": "StructuredDocumentation",
								"src": "374:75:10",
								"text": "@title PathKey Library\n @notice Functions for working with PathKeys"
							},
							"fullyImplemented": true,
							"id": 1098,
							"linearizedBaseContracts": [
								1098
							],
							"name": "PathKeyLibrary",
							"nameLocation": "457:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "954:354:10",
										"statements": [
											{
												"assignments": [
													1056
												],
												"declarations": [
													{
														"constant": false,
														"id": 1056,
														"mutability": "mutable",
														"name": "currencyOut",
														"nameLocation": "973:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 1096,
														"src": "964:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
															"typeString": "Currency"
														},
														"typeName": {
															"id": 1055,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1054,
																"name": "Currency",
																"nameLocations": [
																	"964:8:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1494,
																"src": "964:8:10"
															},
															"referencedDeclaration": 1494,
															"src": "964:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																"typeString": "Currency"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1059,
												"initialValue": {
													"expression": {
														"id": 1057,
														"name": "params",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "987:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PathKey_$1034_calldata_ptr",
															"typeString": "struct PathKey calldata"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "994:20:10",
													"memberName": "intermediateCurrency",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1024,
													"src": "987:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
														"typeString": "Currency"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "964:50:10"
											},
											{
												"assignments": [
													1062,
													1065
												],
												"declarations": [
													{
														"constant": false,
														"id": 1062,
														"mutability": "mutable",
														"name": "currency0",
														"nameLocation": "1034:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1096,
														"src": "1025:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
															"typeString": "Currency"
														},
														"typeName": {
															"id": 1061,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1060,
																"name": "Currency",
																"nameLocations": [
																	"1025:8:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1494,
																"src": "1025:8:10"
															},
															"referencedDeclaration": 1494,
															"src": "1025:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																"typeString": "Currency"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1065,
														"mutability": "mutable",
														"name": "currency1",
														"nameLocation": "1054:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1096,
														"src": "1045:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
															"typeString": "Currency"
														},
														"typeName": {
															"id": 1064,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1063,
																"name": "Currency",
																"nameLocations": [
																	"1045:8:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1494,
																"src": "1045:8:10"
															},
															"referencedDeclaration": 1494,
															"src": "1045:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																"typeString": "Currency"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1076,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
															"typeString": "Currency"
														},
														"function": 1571,
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1066,
															"name": "currencyIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "1079:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																"typeString": "Currency"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1067,
															"name": "currencyOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "1092:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																"typeString": "Currency"
															}
														},
														"src": "1079:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"id": 1072,
																"name": "currencyOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "1135:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																	"typeString": "Currency"
																}
															},
															{
																"id": 1073,
																"name": "currencyIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1046,
																"src": "1148:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																	"typeString": "Currency"
																}
															}
														],
														"id": 1074,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1134:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_userDefinedValueType$_Currency_$1494_$_t_userDefinedValueType$_Currency_$1494_$",
															"typeString": "tuple(Currency,Currency)"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1079:80:10",
													"trueExpression": {
														"components": [
															{
																"id": 1069,
																"name": "currencyIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1046,
																"src": "1107:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																	"typeString": "Currency"
																}
															},
															{
																"id": 1070,
																"name": "currencyOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "1119:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																	"typeString": "Currency"
																}
															}
														],
														"id": 1071,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1106:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_userDefinedValueType$_Currency_$1494_$_t_userDefinedValueType$_Currency_$1494_$",
															"typeString": "tuple(Currency,Currency)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_userDefinedValueType$_Currency_$1494_$_t_userDefinedValueType$_Currency_$1494_$",
														"typeString": "tuple(Currency,Currency)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1024:135:10"
											},
											{
												"expression": {
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1077,
														"name": "zeroForOne",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "1170:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
															"typeString": "Currency"
														},
														"function": 1527,
														"id": 1080,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1078,
															"name": "currencyIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "1183:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																"typeString": "Currency"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1079,
															"name": "currency0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "1197:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																"typeString": "Currency"
															}
														},
														"src": "1183:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1170:36:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "1170:36:10"
											},
											{
												"expression": {
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1083,
														"name": "poolKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "1216:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolKey_$1840_memory_ptr",
															"typeString": "struct PoolKey memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1085,
																"name": "currency0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "1234:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																	"typeString": "Currency"
																}
															},
															{
																"id": 1086,
																"name": "currency1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1065,
																"src": "1245:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																	"typeString": "Currency"
																}
															},
															{
																"expression": {
																	"id": 1087,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1043,
																	"src": "1256:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PathKey_$1034_calldata_ptr",
																		"typeString": "struct PathKey calldata"
																	}
																},
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1263:3:10",
																"memberName": "fee",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1026,
																"src": "1256:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															},
															{
																"expression": {
																	"id": 1089,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1043,
																	"src": "1268:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PathKey_$1034_calldata_ptr",
																		"typeString": "struct PathKey calldata"
																	}
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1275:11:10",
																"memberName": "tickSpacing",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1028,
																"src": "1268:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															{
																"expression": {
																	"id": 1091,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1043,
																	"src": "1288:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PathKey_$1034_calldata_ptr",
																		"typeString": "struct PathKey calldata"
																	}
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1295:5:10",
																"memberName": "hooks",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1031,
																"src": "1288:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IHooks_$252",
																	"typeString": "contract IHooks"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																	"typeString": "Currency"
																},
																{
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																	"typeString": "Currency"
																},
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																},
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																{
																	"typeIdentifier": "t_contract$_IHooks_$252",
																	"typeString": "contract IHooks"
																}
															],
															"id": 1084,
															"name": "PoolKey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1840,
															"src": "1226:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_PoolKey_$1840_storage_ptr_$",
																"typeString": "type(struct PoolKey storage pointer)"
															}
														},
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1226:75:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolKey_$1840_memory_ptr",
															"typeString": "struct PoolKey memory"
														}
													},
													"src": "1216:85:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1840_memory_ptr",
														"typeString": "struct PoolKey memory"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "1216:85:10"
											}
										]
									},
									"documentation": {
										"id": 1040,
										"nodeType": "StructuredDocumentation",
										"src": "478:300:10",
										"text": "@notice Get the pool and swap direction for a given PathKey\n @param params the given PathKey\n @param currencyIn the input currency\n @return poolKey the pool key of the swap\n @return zeroForOne the direction of the swap, true if currency0 is being swapped for currency1"
									},
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolAndSwapDirection",
									"nameLocation": "792:23:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "833:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "816:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PathKey_$1034_calldata_ptr",
													"typeString": "struct PathKey"
												},
												"typeName": {
													"id": 1042,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1041,
														"name": "PathKey",
														"nameLocations": [
															"816:7:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1034,
														"src": "816:7:10"
													},
													"referencedDeclaration": 1034,
													"src": "816:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PathKey_$1034_storage_ptr",
														"typeString": "struct PathKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "currencyIn",
												"nameLocation": "850:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "841:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 1045,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1044,
														"name": "Currency",
														"nameLocations": [
															"841:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1494,
														"src": "841:8:10"
													},
													"referencedDeclaration": 1494,
													"src": "841:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "815:46:10"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "poolKey",
												"nameLocation": "924:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "909:22:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1840_memory_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 1049,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1048,
														"name": "PoolKey",
														"nameLocations": [
															"909:7:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1840,
														"src": "909:7:10"
													},
													"referencedDeclaration": 1840,
													"src": "909:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1840_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "938:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "933:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1051,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "933:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "908:41:10"
									},
									"scope": 1098,
									"src": "783:525:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1099,
							"src": "449:861:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "31:1279:10"
				},
				"id": 10
			},
			"UniswapV4/libraries/SafeCast.sol": {
				"ast": {
					"absolutePath": "UniswapV4/libraries/SafeCast.sol",
					"exportedSymbols": {
						"CustomRevert": [
							1013
						],
						"SafeCast": [
							1274
						]
					},
					"id": 1275,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1100,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:11"
						},
						{
							"absolutePath": "UniswapV4/libraries/CustomRevert.sol",
							"file": "./CustomRevert.sol",
							"id": 1102,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1275,
							"sourceUnit": 1014,
							"src": "57:48:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1101,
										"name": "CustomRevert",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1013,
										"src": "65:12:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeCast",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1103,
								"nodeType": "StructuredDocumentation",
								"src": "107:94:11",
								"text": "@title Safe casting methods\n @notice Contains methods for safely casting between types"
							},
							"fullyImplemented": true,
							"id": 1274,
							"linearizedBaseContracts": [
								1274
							],
							"name": "SafeCast",
							"nameLocation": "209:8:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1106,
									"libraryName": {
										"id": 1104,
										"name": "CustomRevert",
										"nameLocations": [
											"230:12:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1013,
										"src": "230:12:11"
									},
									"nodeType": "UsingForDirective",
									"src": "224:30:11",
									"typeName": {
										"id": 1105,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "247:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									}
								},
								{
									"errorSelector": "93dafdf1",
									"id": 1108,
									"name": "SafeCastOverflow",
									"nameLocation": "266:16:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "282:2:11"
									},
									"src": "260:25:11"
								},
								{
									"body": {
										"id": 1134,
										"nodeType": "Block",
										"src": "524:91:11",
										"statements": [
											{
												"expression": {
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1116,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "534:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1119,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1111,
																"src": "546:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "538:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 1117,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "538:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "538:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "534:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 1122,
												"nodeType": "ExpressionStatement",
												"src": "534:14:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1123,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "562:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1124,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1111,
														"src": "567:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "562:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1133,
												"nodeType": "IfStatement",
												"src": "558:50:11",
												"trueBody": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"expression": {
																	"id": 1126,
																	"name": "SafeCastOverflow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "570:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "587:8:11",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "570:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "596:10:11",
															"memberName": "revertWith",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 929,
															"src": "570:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$attached_to$_t_bytes4_$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "570:38:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1132,
													"nodeType": "ExpressionStatement",
													"src": "570:38:11"
												}
											}
										]
									},
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "291:164:11",
										"text": "@notice Cast a uint256 to a uint160, revert on overflow\n @param x The uint256 to be downcasted\n @return y The downcasted integer, now type uint160"
									},
									"id": 1135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nameLocation": "469:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "487:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "479:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "478:11:11"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "521:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "513:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1113,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "513:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "512:11:11"
									},
									"scope": 1274,
									"src": "460:155:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "854:91:11",
										"statements": [
											{
												"expression": {
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1143,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "864:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1146,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1138,
																"src": "876:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "868:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint128_$",
																"typeString": "type(uint128)"
															},
															"typeName": {
																"id": 1144,
																"name": "uint128",
																"nodeType": "ElementaryTypeName",
																"src": "868:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 1147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "868:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "864:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "864:14:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1150,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "892:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1151,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "897:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "892:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1160,
												"nodeType": "IfStatement",
												"src": "888:50:11",
												"trueBody": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"expression": {
																	"id": 1153,
																	"name": "SafeCastOverflow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "900:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "917:8:11",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "900:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "926:10:11",
															"memberName": "revertWith",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 929,
															"src": "900:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$attached_to$_t_bytes4_$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "900:38:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1159,
													"nodeType": "ExpressionStatement",
													"src": "900:38:11"
												}
											}
										]
									},
									"documentation": {
										"id": 1136,
										"nodeType": "StructuredDocumentation",
										"src": "621:164:11",
										"text": "@notice Cast a uint256 to a uint128, revert on overflow\n @param x The uint256 to be downcasted\n @return y The downcasted integer, now type uint128"
									},
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "799:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "817:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "809:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "809:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:11:11"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "851:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "843:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1140,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "842:11:11"
									},
									"scope": 1274,
									"src": "790:155:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1188,
										"nodeType": "Block",
										"src": "1186:90:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1170,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "1200:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1204:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1200:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1180,
												"nodeType": "IfStatement",
												"src": "1196:49:11",
												"trueBody": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"expression": {
																	"id": 1173,
																	"name": "SafeCastOverflow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "1207:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1224:8:11",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "1207:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1233:10:11",
															"memberName": "revertWith",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 929,
															"src": "1207:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$attached_to$_t_bytes4_$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1207:38:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1179,
													"nodeType": "ExpressionStatement",
													"src": "1207:38:11"
												}
											},
											{
												"expression": {
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1181,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "1255:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1184,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "1267:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															],
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1259:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint128_$",
																"typeString": "type(uint128)"
															},
															"typeName": {
																"id": 1182,
																"name": "uint128",
																"nodeType": "ElementaryTypeName",
																"src": "1259:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1259:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "1255:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "1255:14:11"
											}
										]
									},
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "951:167:11",
										"text": "@notice Cast a int128 to a uint128, revert on overflow or underflow\n @param x The int128 to be casted\n @return y The casted integer, now type uint128"
									},
									"id": 1189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "1132:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1149:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "1142:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1164,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "1142:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:10:11"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1183:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "1175:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1167,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1174:11:11"
									},
									"scope": 1274,
									"src": "1123:153:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1215,
										"nodeType": "Block",
										"src": "1521:90:11",
										"statements": [
											{
												"expression": {
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1197,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "1531:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1200,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1192,
																"src": "1542:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1535:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int128_$",
																"typeString": "type(int128)"
															},
															"typeName": {
																"id": 1198,
																"name": "int128",
																"nodeType": "ElementaryTypeName",
																"src": "1535:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1535:9:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "1531:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 1203,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1204,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "1558:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1205,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "1563:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1558:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1214,
												"nodeType": "IfStatement",
												"src": "1554:50:11",
												"trueBody": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"expression": {
																	"id": 1207,
																	"name": "SafeCastOverflow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "1566:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1583:8:11",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "1566:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1592:10:11",
															"memberName": "revertWith",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 929,
															"src": "1566:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$attached_to$_t_bytes4_$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1566:38:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1213,
													"nodeType": "ExpressionStatement",
													"src": "1566:38:11"
												}
											}
										]
									},
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "1282:173:11",
										"text": "@notice Cast a int256 to a int128, revert on overflow or underflow\n @param x The int256 to be downcasted\n @return y The downcasted integer, now type int128"
									},
									"id": 1216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "1469:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1485:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "1478:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1191,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1478:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1477:10:11"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1518:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "1511:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1194,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "1511:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:10:11"
									},
									"scope": 1274,
									"src": "1460:151:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1242,
										"nodeType": "Block",
										"src": "1838:89:11",
										"statements": [
											{
												"expression": {
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1224,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "1848:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1227,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "1859:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1852:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 1225,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "1852:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 1228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1852:9:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1848:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "1848:13:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1231,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "1875:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 1232,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1879:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1875:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1241,
												"nodeType": "IfStatement",
												"src": "1871:49:11",
												"trueBody": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"expression": {
																	"id": 1234,
																	"name": "SafeCastOverflow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "1882:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1899:8:11",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "1882:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1908:10:11",
															"memberName": "revertWith",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 929,
															"src": "1882:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$attached_to$_t_bytes4_$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1882:38:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1240,
													"nodeType": "ExpressionStatement",
													"src": "1882:38:11"
												}
											}
										]
									},
									"documentation": {
										"id": 1217,
										"nodeType": "StructuredDocumentation",
										"src": "1617:154:11",
										"text": "@notice Cast a uint256 to a int256, revert on overflow\n @param x The uint256 to be casted\n @return y The casted integer, now type int256"
									},
									"id": 1243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nameLocation": "1785:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1802:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "1794:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1794:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1793:11:11"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1835:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "1828:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1221,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1828:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1827:10:11"
									},
									"scope": 1274,
									"src": "1776:151:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1272,
										"nodeType": "Block",
										"src": "2158:108:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1251,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "2172:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_170141183460469231731687303715884105728_by_1",
															"typeString": "int_const 1701...(31 digits omitted)...5728"
														},
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "31",
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2177:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "313237",
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_127_by_1",
																"typeString": "int_const 127"
															},
															"value": "127"
														},
														"src": "2177:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_170141183460469231731687303715884105728_by_1",
															"typeString": "int_const 1701...(31 digits omitted)...5728"
														}
													},
													"src": "2172:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1263,
												"nodeType": "IfStatement",
												"src": "2168:57:11",
												"trueBody": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"expression": {
																	"id": 1256,
																	"name": "SafeCastOverflow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "2187:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2204:8:11",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "2187:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2213:10:11",
															"memberName": "revertWith",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 929,
															"src": "2187:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$attached_to$_t_bytes4_$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2187:38:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1262,
													"nodeType": "ExpressionStatement",
													"src": "2187:38:11"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1268,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1246,
																	"src": "2256:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2249:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 1266,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2249:6:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2249:9:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2242:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int128_$",
															"typeString": "type(int128)"
														},
														"typeName": {
															"id": 1264,
															"name": "int128",
															"nodeType": "ElementaryTypeName",
															"src": "2242:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2242:17:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"functionReturnParameters": 1250,
												"id": 1271,
												"nodeType": "Return",
												"src": "2235:24:11"
											}
										]
									},
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "1933:160:11",
										"text": "@notice Cast a uint256 to a int128, revert on overflow\n @param x The uint256 to be downcasted\n @return The downcasted integer, now type int128"
									},
									"id": 1273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "2107:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "2124:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "2116:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:11:11"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "2150:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1248,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "2150:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2149:8:11"
									},
									"scope": 1274,
									"src": "2098:168:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1275,
							"src": "201:2067:11",
							"usedErrors": [
								1108
							],
							"usedEvents": []
						}
					],
					"src": "32:2237:11"
				},
				"id": 11
			},
			"UniswapV4/types/BalanceDelta.sol": {
				"ast": {
					"absolutePath": "UniswapV4/types/BalanceDelta.sol",
					"exportedSymbols": {
						"BalanceDelta": [
							1280
						],
						"BalanceDeltaLibrary": [
							1438
						],
						"SafeCast": [
							1274
						],
						"add": [
							1335
						],
						"eq": [
							1386
						],
						"neq": [
							1408
						],
						"sub": [
							1364
						],
						"toBalanceDelta": [
							1306
						]
					},
					"id": 1439,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1276,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:12"
						},
						{
							"absolutePath": "UniswapV4/libraries/SafeCast.sol",
							"file": "../libraries/SafeCast.sol",
							"id": 1278,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1439,
							"sourceUnit": 1275,
							"src": "57:51:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1277,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1274,
										"src": "65:8:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "BalanceDelta",
							"id": 1280,
							"name": "BalanceDelta",
							"nameLocation": "271:12:12",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "266:28:12",
							"underlyingType": {
								"id": 1279,
								"name": "int256",
								"nodeType": "ElementaryTypeName",
								"src": "287:6:12",
								"typeDescriptions": {
									"typeIdentifier": "t_int256",
									"typeString": "int256"
								}
							}
						},
						{
							"functionList": [
								{
									"definition": {
										"id": 1281,
										"name": "add",
										"nameLocations": [
											"303:3:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1335,
										"src": "303:3:12"
									},
									"operator": "+"
								},
								{
									"definition": {
										"id": 1282,
										"name": "sub",
										"nameLocations": [
											"313:3:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1364,
										"src": "313:3:12"
									},
									"operator": "-"
								},
								{
									"definition": {
										"id": 1283,
										"name": "eq",
										"nameLocations": [
											"323:2:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1386,
										"src": "323:2:12"
									},
									"operator": "=="
								},
								{
									"definition": {
										"id": 1284,
										"name": "neq",
										"nameLocations": [
											"333:3:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1408,
										"src": "333:3:12"
									},
									"operator": "!="
								}
							],
							"global": true,
							"id": 1287,
							"nodeType": "UsingForDirective",
							"src": "296:72:12",
							"typeName": {
								"id": 1286,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 1285,
									"name": "BalanceDelta",
									"nameLocations": [
										"348:12:12"
									],
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 1280,
									"src": "348:12:12"
								},
								"referencedDeclaration": 1280,
								"src": "348:12:12",
								"typeDescriptions": {
									"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
									"typeString": "BalanceDelta"
								}
							}
						},
						{
							"global": true,
							"id": 1291,
							"libraryName": {
								"id": 1288,
								"name": "BalanceDeltaLibrary",
								"nameLocations": [
									"375:19:12"
								],
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1438,
								"src": "375:19:12"
							},
							"nodeType": "UsingForDirective",
							"src": "369:50:12",
							"typeName": {
								"id": 1290,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 1289,
									"name": "BalanceDelta",
									"nameLocations": [
										"399:12:12"
									],
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 1280,
									"src": "399:12:12"
								},
								"referencedDeclaration": 1280,
								"src": "399:12:12",
								"typeDescriptions": {
									"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
									"typeString": "BalanceDelta"
								}
							}
						},
						{
							"global": false,
							"id": 1294,
							"libraryName": {
								"id": 1292,
								"name": "SafeCast",
								"nameLocations": [
									"426:8:12"
								],
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1274,
								"src": "426:8:12"
							},
							"nodeType": "UsingForDirective",
							"src": "420:26:12",
							"typeName": {
								"id": 1293,
								"name": "int256",
								"nodeType": "ElementaryTypeName",
								"src": "439:6:12",
								"typeDescriptions": {
									"typeIdentifier": "t_int256",
									"typeString": "int256"
								}
							}
						},
						{
							"body": {
								"id": 1305,
								"nodeType": "Block",
								"src": "547:123:12",
								"statements": [
									{
										"AST": {
											"nativeSrc": "578:90:12",
											"nodeType": "YulBlock",
											"src": "578:90:12",
											"statements": [
												{
													"nativeSrc": "588:74:12",
													"nodeType": "YulAssignment",
													"src": "588:74:12",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "611:3:12",
																		"nodeType": "YulLiteral",
																		"src": "611:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "_amount0",
																		"nativeSrc": "616:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "616:8:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "607:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:12"
																},
																"nativeSrc": "607:18:12",
																"nodeType": "YulFunctionCall",
																"src": "607:18:12"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "639:3:12",
																						"nodeType": "YulLiteral",
																						"src": "639:3:12",
																						"type": "",
																						"value": "128"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "644:1:12",
																						"nodeType": "YulLiteral",
																						"src": "644:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "635:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "635:3:12"
																				},
																				"nativeSrc": "635:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "635:11:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "648:1:12",
																				"nodeType": "YulLiteral",
																				"src": "648:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "631:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "631:3:12"
																		},
																		"nativeSrc": "631:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "631:19:12"
																	},
																	{
																		"name": "_amount1",
																		"nativeSrc": "652:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "652:8:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "627:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "627:3:12"
																},
																"nativeSrc": "627:34:12",
																"nodeType": "YulFunctionCall",
																"src": "627:34:12"
															}
														],
														"functionName": {
															"name": "or",
															"nativeSrc": "604:2:12",
															"nodeType": "YulIdentifier",
															"src": "604:2:12"
														},
														"nativeSrc": "604:58:12",
														"nodeType": "YulFunctionCall",
														"src": "604:58:12"
													},
													"variableNames": [
														{
															"name": "balanceDelta",
															"nativeSrc": "588:12:12",
															"nodeType": "YulIdentifier",
															"src": "588:12:12"
														}
													]
												}
											]
										},
										"evmVersion": "cancun",
										"externalReferences": [
											{
												"declaration": 1296,
												"isOffset": false,
												"isSlot": false,
												"src": "616:8:12",
												"valueSize": 1
											},
											{
												"declaration": 1298,
												"isOffset": false,
												"isSlot": false,
												"src": "652:8:12",
												"valueSize": 1
											},
											{
												"declaration": 1302,
												"isOffset": false,
												"isSlot": false,
												"src": "588:12:12",
												"valueSize": 1
											}
										],
										"flags": [
											"memory-safe"
										],
										"id": 1304,
										"nodeType": "InlineAssembly",
										"src": "553:115:12"
									}
								]
							},
							"id": 1306,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "toBalanceDelta",
							"nameLocation": "457:14:12",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 1299,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1296,
										"mutability": "mutable",
										"name": "_amount0",
										"nameLocation": "479:8:12",
										"nodeType": "VariableDeclaration",
										"scope": 1306,
										"src": "472:15:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int128",
											"typeString": "int128"
										},
										"typeName": {
											"id": 1295,
											"name": "int128",
											"nodeType": "ElementaryTypeName",
											"src": "472:6:12",
											"typeDescriptions": {
												"typeIdentifier": "t_int128",
												"typeString": "int128"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1298,
										"mutability": "mutable",
										"name": "_amount1",
										"nameLocation": "496:8:12",
										"nodeType": "VariableDeclaration",
										"scope": 1306,
										"src": "489:15:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int128",
											"typeString": "int128"
										},
										"typeName": {
											"id": 1297,
											"name": "int128",
											"nodeType": "ElementaryTypeName",
											"src": "489:6:12",
											"typeDescriptions": {
												"typeIdentifier": "t_int128",
												"typeString": "int128"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "471:34:12"
							},
							"returnParameters": {
								"id": 1303,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1302,
										"mutability": "mutable",
										"name": "balanceDelta",
										"nameLocation": "533:12:12",
										"nodeType": "VariableDeclaration",
										"scope": 1306,
										"src": "520:25:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
											"typeString": "BalanceDelta"
										},
										"typeName": {
											"id": 1301,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1300,
												"name": "BalanceDelta",
												"nameLocations": [
													"520:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1280,
												"src": "520:12:12"
											},
											"referencedDeclaration": 1280,
											"src": "520:12:12",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
												"typeString": "BalanceDelta"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "519:27:12"
							},
							"scope": 1439,
							"src": "448:222:12",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 1334,
								"nodeType": "Block",
								"src": "745:323:12",
								"statements": [
									{
										"assignments": [
											1319
										],
										"declarations": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "res0",
												"nameLocation": "758:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "751:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1318,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "751:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 1320,
										"nodeType": "VariableDeclarationStatement",
										"src": "751:11:12"
									},
									{
										"assignments": [
											1322
										],
										"declarations": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "res1",
												"nameLocation": "775:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "768:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1321,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "768:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 1323,
										"nodeType": "VariableDeclarationStatement",
										"src": "768:11:12"
									},
									{
										"AST": {
											"nativeSrc": "810:195:12",
											"nodeType": "YulBlock",
											"src": "810:195:12",
											"statements": [
												{
													"nativeSrc": "820:21:12",
													"nodeType": "YulVariableDeclaration",
													"src": "820:21:12",
													"value": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "834:3:12",
																"nodeType": "YulLiteral",
																"src": "834:3:12",
																"type": "",
																"value": "128"
															},
															{
																"name": "a",
																"nativeSrc": "839:1:12",
																"nodeType": "YulIdentifier",
																"src": "839:1:12"
															}
														],
														"functionName": {
															"name": "sar",
															"nativeSrc": "830:3:12",
															"nodeType": "YulIdentifier",
															"src": "830:3:12"
														},
														"nativeSrc": "830:11:12",
														"nodeType": "YulFunctionCall",
														"src": "830:11:12"
													},
													"variables": [
														{
															"name": "a0",
															"nativeSrc": "824:2:12",
															"nodeType": "YulTypedName",
															"src": "824:2:12",
															"type": ""
														}
													]
												},
												{
													"nativeSrc": "850:27:12",
													"nodeType": "YulVariableDeclaration",
													"src": "850:27:12",
													"value": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "871:2:12",
																"nodeType": "YulLiteral",
																"src": "871:2:12",
																"type": "",
																"value": "15"
															},
															{
																"name": "a",
																"nativeSrc": "875:1:12",
																"nodeType": "YulIdentifier",
																"src": "875:1:12"
															}
														],
														"functionName": {
															"name": "signextend",
															"nativeSrc": "860:10:12",
															"nodeType": "YulIdentifier",
															"src": "860:10:12"
														},
														"nativeSrc": "860:17:12",
														"nodeType": "YulFunctionCall",
														"src": "860:17:12"
													},
													"variables": [
														{
															"name": "a1",
															"nativeSrc": "854:2:12",
															"nodeType": "YulTypedName",
															"src": "854:2:12",
															"type": ""
														}
													]
												},
												{
													"nativeSrc": "886:21:12",
													"nodeType": "YulVariableDeclaration",
													"src": "886:21:12",
													"value": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "900:3:12",
																"nodeType": "YulLiteral",
																"src": "900:3:12",
																"type": "",
																"value": "128"
															},
															{
																"name": "b",
																"nativeSrc": "905:1:12",
																"nodeType": "YulIdentifier",
																"src": "905:1:12"
															}
														],
														"functionName": {
															"name": "sar",
															"nativeSrc": "896:3:12",
															"nodeType": "YulIdentifier",
															"src": "896:3:12"
														},
														"nativeSrc": "896:11:12",
														"nodeType": "YulFunctionCall",
														"src": "896:11:12"
													},
													"variables": [
														{
															"name": "b0",
															"nativeSrc": "890:2:12",
															"nodeType": "YulTypedName",
															"src": "890:2:12",
															"type": ""
														}
													]
												},
												{
													"nativeSrc": "916:27:12",
													"nodeType": "YulVariableDeclaration",
													"src": "916:27:12",
													"value": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "937:2:12",
																"nodeType": "YulLiteral",
																"src": "937:2:12",
																"type": "",
																"value": "15"
															},
															{
																"name": "b",
																"nativeSrc": "941:1:12",
																"nodeType": "YulIdentifier",
																"src": "941:1:12"
															}
														],
														"functionName": {
															"name": "signextend",
															"nativeSrc": "926:10:12",
															"nodeType": "YulIdentifier",
															"src": "926:10:12"
														},
														"nativeSrc": "926:17:12",
														"nodeType": "YulFunctionCall",
														"src": "926:17:12"
													},
													"variables": [
														{
															"name": "b1",
															"nativeSrc": "920:2:12",
															"nodeType": "YulTypedName",
															"src": "920:2:12",
															"type": ""
														}
													]
												},
												{
													"nativeSrc": "952:19:12",
													"nodeType": "YulAssignment",
													"src": "952:19:12",
													"value": {
														"arguments": [
															{
																"name": "a0",
																"nativeSrc": "964:2:12",
																"nodeType": "YulIdentifier",
																"src": "964:2:12"
															},
															{
																"name": "b0",
																"nativeSrc": "968:2:12",
																"nodeType": "YulIdentifier",
																"src": "968:2:12"
															}
														],
														"functionName": {
															"name": "add",
															"nativeSrc": "960:3:12",
															"nodeType": "YulIdentifier",
															"src": "960:3:12"
														},
														"nativeSrc": "960:11:12",
														"nodeType": "YulFunctionCall",
														"src": "960:11:12"
													},
													"variableNames": [
														{
															"name": "res0",
															"nativeSrc": "952:4:12",
															"nodeType": "YulIdentifier",
															"src": "952:4:12"
														}
													]
												},
												{
													"nativeSrc": "980:19:12",
													"nodeType": "YulAssignment",
													"src": "980:19:12",
													"value": {
														"arguments": [
															{
																"name": "a1",
																"nativeSrc": "992:2:12",
																"nodeType": "YulIdentifier",
																"src": "992:2:12"
															},
															{
																"name": "b1",
																"nativeSrc": "996:2:12",
																"nodeType": "YulIdentifier",
																"src": "996:2:12"
															}
														],
														"functionName": {
															"name": "add",
															"nativeSrc": "988:3:12",
															"nodeType": "YulIdentifier",
															"src": "988:3:12"
														},
														"nativeSrc": "988:11:12",
														"nodeType": "YulFunctionCall",
														"src": "988:11:12"
													},
													"variableNames": [
														{
															"name": "res1",
															"nativeSrc": "980:4:12",
															"nodeType": "YulIdentifier",
															"src": "980:4:12"
														}
													]
												}
											]
										},
										"evmVersion": "cancun",
										"externalReferences": [
											{
												"declaration": 1309,
												"isOffset": false,
												"isSlot": false,
												"src": "839:1:12",
												"valueSize": 1
											},
											{
												"declaration": 1309,
												"isOffset": false,
												"isSlot": false,
												"src": "875:1:12",
												"valueSize": 1
											},
											{
												"declaration": 1312,
												"isOffset": false,
												"isSlot": false,
												"src": "905:1:12",
												"valueSize": 1
											},
											{
												"declaration": 1312,
												"isOffset": false,
												"isSlot": false,
												"src": "941:1:12",
												"valueSize": 1
											},
											{
												"declaration": 1319,
												"isOffset": false,
												"isSlot": false,
												"src": "952:4:12",
												"valueSize": 1
											},
											{
												"declaration": 1322,
												"isOffset": false,
												"isSlot": false,
												"src": "980:4:12",
												"valueSize": 1
											}
										],
										"flags": [
											"memory-safe"
										],
										"id": 1324,
										"nodeType": "InlineAssembly",
										"src": "785:220:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1326,
															"name": "res0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "1032:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1037:8:12",
														"memberName": "toInt128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1216,
														"src": "1032:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int128_$attached_to$_t_int256_$",
															"typeString": "function (int256) pure returns (int128)"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1032:15:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1329,
															"name": "res1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "1049:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"id": 1330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1054:8:12",
														"memberName": "toInt128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1216,
														"src": "1049:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int128_$attached_to$_t_int256_$",
															"typeString": "function (int256) pure returns (int128)"
														}
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1049:15:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													},
													{
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												],
												"id": 1325,
												"name": "toBalanceDelta",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1306,
												"src": "1017:14:12",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_pure$_t_int128_$_t_int128_$returns$_t_userDefinedValueType$_BalanceDelta_$1280_$",
													"typeString": "function (int128,int128) pure returns (BalanceDelta)"
												}
											},
											"id": 1332,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "functionCall",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1017:48:12",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
												"typeString": "BalanceDelta"
											}
										},
										"functionReturnParameters": 1317,
										"id": 1333,
										"nodeType": "Return",
										"src": "1010:55:12"
									}
								]
							},
							"id": 1335,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "add",
							"nameLocation": "681:3:12",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 1313,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1309,
										"mutability": "mutable",
										"name": "a",
										"nameLocation": "698:1:12",
										"nodeType": "VariableDeclaration",
										"scope": 1335,
										"src": "685:14:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
											"typeString": "BalanceDelta"
										},
										"typeName": {
											"id": 1308,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1307,
												"name": "BalanceDelta",
												"nameLocations": [
													"685:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1280,
												"src": "685:12:12"
											},
											"referencedDeclaration": 1280,
											"src": "685:12:12",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
												"typeString": "BalanceDelta"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1312,
										"mutability": "mutable",
										"name": "b",
										"nameLocation": "714:1:12",
										"nodeType": "VariableDeclaration",
										"scope": 1335,
										"src": "701:14:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
											"typeString": "BalanceDelta"
										},
										"typeName": {
											"id": 1311,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1310,
												"name": "BalanceDelta",
												"nameLocations": [
													"701:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1280,
												"src": "701:12:12"
											},
											"referencedDeclaration": 1280,
											"src": "701:12:12",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
												"typeString": "BalanceDelta"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "684:32:12"
							},
							"returnParameters": {
								"id": 1317,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1316,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 1335,
										"src": "731:12:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
											"typeString": "BalanceDelta"
										},
										"typeName": {
											"id": 1315,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1314,
												"name": "BalanceDelta",
												"nameLocations": [
													"731:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1280,
												"src": "731:12:12"
											},
											"referencedDeclaration": 1280,
											"src": "731:12:12",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
												"typeString": "BalanceDelta"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "730:14:12"
							},
							"scope": 1439,
							"src": "672:396:12",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 1363,
								"nodeType": "Block",
								"src": "1143:323:12",
								"statements": [
									{
										"assignments": [
											1348
										],
										"declarations": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "res0",
												"nameLocation": "1156:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "1149:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1347,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1149:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 1349,
										"nodeType": "VariableDeclarationStatement",
										"src": "1149:11:12"
									},
									{
										"assignments": [
											1351
										],
										"declarations": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "res1",
												"nameLocation": "1173:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "1166:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1350,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1166:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 1352,
										"nodeType": "VariableDeclarationStatement",
										"src": "1166:11:12"
									},
									{
										"AST": {
											"nativeSrc": "1208:195:12",
											"nodeType": "YulBlock",
											"src": "1208:195:12",
											"statements": [
												{
													"nativeSrc": "1218:21:12",
													"nodeType": "YulVariableDeclaration",
													"src": "1218:21:12",
													"value": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "1232:3:12",
																"nodeType": "YulLiteral",
																"src": "1232:3:12",
																"type": "",
																"value": "128"
															},
															{
																"name": "a",
																"nativeSrc": "1237:1:12",
																"nodeType": "YulIdentifier",
																"src": "1237:1:12"
															}
														],
														"functionName": {
															"name": "sar",
															"nativeSrc": "1228:3:12",
															"nodeType": "YulIdentifier",
															"src": "1228:3:12"
														},
														"nativeSrc": "1228:11:12",
														"nodeType": "YulFunctionCall",
														"src": "1228:11:12"
													},
													"variables": [
														{
															"name": "a0",
															"nativeSrc": "1222:2:12",
															"nodeType": "YulTypedName",
															"src": "1222:2:12",
															"type": ""
														}
													]
												},
												{
													"nativeSrc": "1248:27:12",
													"nodeType": "YulVariableDeclaration",
													"src": "1248:27:12",
													"value": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "1269:2:12",
																"nodeType": "YulLiteral",
																"src": "1269:2:12",
																"type": "",
																"value": "15"
															},
															{
																"name": "a",
																"nativeSrc": "1273:1:12",
																"nodeType": "YulIdentifier",
																"src": "1273:1:12"
															}
														],
														"functionName": {
															"name": "signextend",
															"nativeSrc": "1258:10:12",
															"nodeType": "YulIdentifier",
															"src": "1258:10:12"
														},
														"nativeSrc": "1258:17:12",
														"nodeType": "YulFunctionCall",
														"src": "1258:17:12"
													},
													"variables": [
														{
															"name": "a1",
															"nativeSrc": "1252:2:12",
															"nodeType": "YulTypedName",
															"src": "1252:2:12",
															"type": ""
														}
													]
												},
												{
													"nativeSrc": "1284:21:12",
													"nodeType": "YulVariableDeclaration",
													"src": "1284:21:12",
													"value": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "1298:3:12",
																"nodeType": "YulLiteral",
																"src": "1298:3:12",
																"type": "",
																"value": "128"
															},
															{
																"name": "b",
																"nativeSrc": "1303:1:12",
																"nodeType": "YulIdentifier",
																"src": "1303:1:12"
															}
														],
														"functionName": {
															"name": "sar",
															"nativeSrc": "1294:3:12",
															"nodeType": "YulIdentifier",
															"src": "1294:3:12"
														},
														"nativeSrc": "1294:11:12",
														"nodeType": "YulFunctionCall",
														"src": "1294:11:12"
													},
													"variables": [
														{
															"name": "b0",
															"nativeSrc": "1288:2:12",
															"nodeType": "YulTypedName",
															"src": "1288:2:12",
															"type": ""
														}
													]
												},
												{
													"nativeSrc": "1314:27:12",
													"nodeType": "YulVariableDeclaration",
													"src": "1314:27:12",
													"value": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "1335:2:12",
																"nodeType": "YulLiteral",
																"src": "1335:2:12",
																"type": "",
																"value": "15"
															},
															{
																"name": "b",
																"nativeSrc": "1339:1:12",
																"nodeType": "YulIdentifier",
																"src": "1339:1:12"
															}
														],
														"functionName": {
															"name": "signextend",
															"nativeSrc": "1324:10:12",
															"nodeType": "YulIdentifier",
															"src": "1324:10:12"
														},
														"nativeSrc": "1324:17:12",
														"nodeType": "YulFunctionCall",
														"src": "1324:17:12"
													},
													"variables": [
														{
															"name": "b1",
															"nativeSrc": "1318:2:12",
															"nodeType": "YulTypedName",
															"src": "1318:2:12",
															"type": ""
														}
													]
												},
												{
													"nativeSrc": "1350:19:12",
													"nodeType": "YulAssignment",
													"src": "1350:19:12",
													"value": {
														"arguments": [
															{
																"name": "a0",
																"nativeSrc": "1362:2:12",
																"nodeType": "YulIdentifier",
																"src": "1362:2:12"
															},
															{
																"name": "b0",
																"nativeSrc": "1366:2:12",
																"nodeType": "YulIdentifier",
																"src": "1366:2:12"
															}
														],
														"functionName": {
															"name": "sub",
															"nativeSrc": "1358:3:12",
															"nodeType": "YulIdentifier",
															"src": "1358:3:12"
														},
														"nativeSrc": "1358:11:12",
														"nodeType": "YulFunctionCall",
														"src": "1358:11:12"
													},
													"variableNames": [
														{
															"name": "res0",
															"nativeSrc": "1350:4:12",
															"nodeType": "YulIdentifier",
															"src": "1350:4:12"
														}
													]
												},
												{
													"nativeSrc": "1378:19:12",
													"nodeType": "YulAssignment",
													"src": "1378:19:12",
													"value": {
														"arguments": [
															{
																"name": "a1",
																"nativeSrc": "1390:2:12",
																"nodeType": "YulIdentifier",
																"src": "1390:2:12"
															},
															{
																"name": "b1",
																"nativeSrc": "1394:2:12",
																"nodeType": "YulIdentifier",
																"src": "1394:2:12"
															}
														],
														"functionName": {
															"name": "sub",
															"nativeSrc": "1386:3:12",
															"nodeType": "YulIdentifier",
															"src": "1386:3:12"
														},
														"nativeSrc": "1386:11:12",
														"nodeType": "YulFunctionCall",
														"src": "1386:11:12"
													},
													"variableNames": [
														{
															"name": "res1",
															"nativeSrc": "1378:4:12",
															"nodeType": "YulIdentifier",
															"src": "1378:4:12"
														}
													]
												}
											]
										},
										"evmVersion": "cancun",
										"externalReferences": [
											{
												"declaration": 1338,
												"isOffset": false,
												"isSlot": false,
												"src": "1237:1:12",
												"valueSize": 1
											},
											{
												"declaration": 1338,
												"isOffset": false,
												"isSlot": false,
												"src": "1273:1:12",
												"valueSize": 1
											},
											{
												"declaration": 1341,
												"isOffset": false,
												"isSlot": false,
												"src": "1303:1:12",
												"valueSize": 1
											},
											{
												"declaration": 1341,
												"isOffset": false,
												"isSlot": false,
												"src": "1339:1:12",
												"valueSize": 1
											},
											{
												"declaration": 1348,
												"isOffset": false,
												"isSlot": false,
												"src": "1350:4:12",
												"valueSize": 1
											},
											{
												"declaration": 1351,
												"isOffset": false,
												"isSlot": false,
												"src": "1378:4:12",
												"valueSize": 1
											}
										],
										"flags": [
											"memory-safe"
										],
										"id": 1353,
										"nodeType": "InlineAssembly",
										"src": "1183:220:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1355,
															"name": "res0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1348,
															"src": "1430:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1435:8:12",
														"memberName": "toInt128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1216,
														"src": "1430:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int128_$attached_to$_t_int256_$",
															"typeString": "function (int256) pure returns (int128)"
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1430:15:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1358,
															"name": "res1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "1447:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"id": 1359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1452:8:12",
														"memberName": "toInt128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1216,
														"src": "1447:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int128_$attached_to$_t_int256_$",
															"typeString": "function (int256) pure returns (int128)"
														}
													},
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1447:15:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													},
													{
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												],
												"id": 1354,
												"name": "toBalanceDelta",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1306,
												"src": "1415:14:12",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_pure$_t_int128_$_t_int128_$returns$_t_userDefinedValueType$_BalanceDelta_$1280_$",
													"typeString": "function (int128,int128) pure returns (BalanceDelta)"
												}
											},
											"id": 1361,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "functionCall",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1415:48:12",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
												"typeString": "BalanceDelta"
											}
										},
										"functionReturnParameters": 1346,
										"id": 1362,
										"nodeType": "Return",
										"src": "1408:55:12"
									}
								]
							},
							"id": 1364,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "sub",
							"nameLocation": "1079:3:12",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 1342,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1338,
										"mutability": "mutable",
										"name": "a",
										"nameLocation": "1096:1:12",
										"nodeType": "VariableDeclaration",
										"scope": 1364,
										"src": "1083:14:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
											"typeString": "BalanceDelta"
										},
										"typeName": {
											"id": 1337,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1336,
												"name": "BalanceDelta",
												"nameLocations": [
													"1083:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1280,
												"src": "1083:12:12"
											},
											"referencedDeclaration": 1280,
											"src": "1083:12:12",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
												"typeString": "BalanceDelta"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1341,
										"mutability": "mutable",
										"name": "b",
										"nameLocation": "1112:1:12",
										"nodeType": "VariableDeclaration",
										"scope": 1364,
										"src": "1099:14:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
											"typeString": "BalanceDelta"
										},
										"typeName": {
											"id": 1340,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1339,
												"name": "BalanceDelta",
												"nameLocations": [
													"1099:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1280,
												"src": "1099:12:12"
											},
											"referencedDeclaration": 1280,
											"src": "1099:12:12",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
												"typeString": "BalanceDelta"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1082:32:12"
							},
							"returnParameters": {
								"id": 1346,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1345,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 1364,
										"src": "1129:12:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
											"typeString": "BalanceDelta"
										},
										"typeName": {
											"id": 1344,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1343,
												"name": "BalanceDelta",
												"nameLocations": [
													"1129:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1280,
												"src": "1129:12:12"
											},
											"referencedDeclaration": 1280,
											"src": "1129:12:12",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
												"typeString": "BalanceDelta"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1128:14:12"
							},
							"scope": 1439,
							"src": "1070:396:12",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 1385,
								"nodeType": "Block",
								"src": "1532:64:12",
								"statements": [
									{
										"expression": {
											"commonType": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"id": 1383,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"arguments": [
													{
														"id": 1377,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "1565:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
															"typeString": "BalanceDelta"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
															"typeString": "BalanceDelta"
														}
													],
													"expression": {
														"id": 1375,
														"name": "BalanceDelta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1280,
														"src": "1545:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_userDefinedValueType$_BalanceDelta_$1280_$",
															"typeString": "type(BalanceDelta)"
														}
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "1558:6:12",
													"memberName": "unwrap",
													"nodeType": "MemberAccess",
													"src": "1545:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_BalanceDelta_$1280_$returns$_t_int256_$",
														"typeString": "function (BalanceDelta) pure returns (int256)"
													}
												},
												"id": 1378,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "1545:22:12",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "==",
											"rightExpression": {
												"arguments": [
													{
														"id": 1381,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "1591:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
															"typeString": "BalanceDelta"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
															"typeString": "BalanceDelta"
														}
													],
													"expression": {
														"id": 1379,
														"name": "BalanceDelta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1280,
														"src": "1571:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_userDefinedValueType$_BalanceDelta_$1280_$",
															"typeString": "type(BalanceDelta)"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "1584:6:12",
													"memberName": "unwrap",
													"nodeType": "MemberAccess",
													"src": "1571:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_BalanceDelta_$1280_$returns$_t_int256_$",
														"typeString": "function (BalanceDelta) pure returns (int256)"
													}
												},
												"id": 1382,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "1571:22:12",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"src": "1545:48:12",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"functionReturnParameters": 1374,
										"id": 1384,
										"nodeType": "Return",
										"src": "1538:55:12"
									}
								]
							},
							"id": 1386,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "eq",
							"nameLocation": "1477:2:12",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 1371,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1367,
										"mutability": "mutable",
										"name": "a",
										"nameLocation": "1493:1:12",
										"nodeType": "VariableDeclaration",
										"scope": 1386,
										"src": "1480:14:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
											"typeString": "BalanceDelta"
										},
										"typeName": {
											"id": 1366,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1365,
												"name": "BalanceDelta",
												"nameLocations": [
													"1480:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1280,
												"src": "1480:12:12"
											},
											"referencedDeclaration": 1280,
											"src": "1480:12:12",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
												"typeString": "BalanceDelta"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1370,
										"mutability": "mutable",
										"name": "b",
										"nameLocation": "1509:1:12",
										"nodeType": "VariableDeclaration",
										"scope": 1386,
										"src": "1496:14:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
											"typeString": "BalanceDelta"
										},
										"typeName": {
											"id": 1369,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1368,
												"name": "BalanceDelta",
												"nameLocations": [
													"1496:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1280,
												"src": "1496:12:12"
											},
											"referencedDeclaration": 1280,
											"src": "1496:12:12",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
												"typeString": "BalanceDelta"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1479:32:12"
							},
							"returnParameters": {
								"id": 1374,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1373,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 1386,
										"src": "1526:4:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"typeName": {
											"id": 1372,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1526:4:12",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1525:6:12"
							},
							"scope": 1439,
							"src": "1468:128:12",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 1407,
								"nodeType": "Block",
								"src": "1663:64:12",
								"statements": [
									{
										"expression": {
											"commonType": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"id": 1405,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"arguments": [
													{
														"id": 1399,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1389,
														"src": "1696:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
															"typeString": "BalanceDelta"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
															"typeString": "BalanceDelta"
														}
													],
													"expression": {
														"id": 1397,
														"name": "BalanceDelta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1280,
														"src": "1676:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_userDefinedValueType$_BalanceDelta_$1280_$",
															"typeString": "type(BalanceDelta)"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "1689:6:12",
													"memberName": "unwrap",
													"nodeType": "MemberAccess",
													"src": "1676:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_BalanceDelta_$1280_$returns$_t_int256_$",
														"typeString": "function (BalanceDelta) pure returns (int256)"
													}
												},
												"id": 1400,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "1676:22:12",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "!=",
											"rightExpression": {
												"arguments": [
													{
														"id": 1403,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1392,
														"src": "1722:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
															"typeString": "BalanceDelta"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
															"typeString": "BalanceDelta"
														}
													],
													"expression": {
														"id": 1401,
														"name": "BalanceDelta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1280,
														"src": "1702:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_userDefinedValueType$_BalanceDelta_$1280_$",
															"typeString": "type(BalanceDelta)"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "1715:6:12",
													"memberName": "unwrap",
													"nodeType": "MemberAccess",
													"src": "1702:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_BalanceDelta_$1280_$returns$_t_int256_$",
														"typeString": "function (BalanceDelta) pure returns (int256)"
													}
												},
												"id": 1404,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "1702:22:12",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"src": "1676:48:12",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"functionReturnParameters": 1396,
										"id": 1406,
										"nodeType": "Return",
										"src": "1669:55:12"
									}
								]
							},
							"id": 1408,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "neq",
							"nameLocation": "1607:3:12",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 1393,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1389,
										"mutability": "mutable",
										"name": "a",
										"nameLocation": "1624:1:12",
										"nodeType": "VariableDeclaration",
										"scope": 1408,
										"src": "1611:14:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
											"typeString": "BalanceDelta"
										},
										"typeName": {
											"id": 1388,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1387,
												"name": "BalanceDelta",
												"nameLocations": [
													"1611:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1280,
												"src": "1611:12:12"
											},
											"referencedDeclaration": 1280,
											"src": "1611:12:12",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
												"typeString": "BalanceDelta"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1392,
										"mutability": "mutable",
										"name": "b",
										"nameLocation": "1640:1:12",
										"nodeType": "VariableDeclaration",
										"scope": 1408,
										"src": "1627:14:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
											"typeString": "BalanceDelta"
										},
										"typeName": {
											"id": 1391,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1390,
												"name": "BalanceDelta",
												"nameLocations": [
													"1627:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1280,
												"src": "1627:12:12"
											},
											"referencedDeclaration": 1280,
											"src": "1627:12:12",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
												"typeString": "BalanceDelta"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1610:32:12"
							},
							"returnParameters": {
								"id": 1396,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1395,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 1408,
										"src": "1657:4:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"typeName": {
											"id": 1394,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1657:4:12",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1656:6:12"
							},
							"scope": 1439,
							"src": "1598:129:12",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BalanceDeltaLibrary",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1409,
								"nodeType": "StructuredDocumentation",
								"src": "1729:90:12",
								"text": "@notice Library for getting the amount0 and amount1 deltas from the BalanceDelta type"
							},
							"fullyImplemented": true,
							"id": 1438,
							"linearizedBaseContracts": [
								1438
							],
							"name": "BalanceDeltaLibrary",
							"nameLocation": "1827:19:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 1410,
										"nodeType": "StructuredDocumentation",
										"src": "1853:31:12",
										"text": "@notice A BalanceDelta of 0"
									},
									"functionSelector": "91cb4669",
									"id": 1417,
									"mutability": "constant",
									"name": "ZERO_DELTA",
									"nameLocation": "1918:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1438,
									"src": "1889:62:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
										"typeString": "BalanceDelta"
									},
									"typeName": {
										"id": 1412,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1411,
											"name": "BalanceDelta",
											"nameLocations": [
												"1889:12:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1280,
											"src": "1889:12:12"
										},
										"referencedDeclaration": 1280,
										"src": "1889:12:12",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
											"typeString": "BalanceDelta"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30",
												"id": 1415,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1949:1:12",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"expression": {
												"id": 1413,
												"name": "BalanceDelta",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1280,
												"src": "1931:12:12",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_userDefinedValueType$_BalanceDelta_$1280_$",
													"typeString": "type(BalanceDelta)"
												}
											},
											"id": 1414,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"memberLocation": "1944:4:12",
											"memberName": "wrap",
											"nodeType": "MemberAccess",
											"src": "1931:17:12",
											"typeDescriptions": {
												"typeIdentifier": "t_function_wrap_pure$_t_int256_$returns$_t_userDefinedValueType$_BalanceDelta_$1280_$",
												"typeString": "function (int256) pure returns (BalanceDelta)"
											}
										},
										"id": 1416,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1931:20:12",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
											"typeString": "BalanceDelta"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1426,
										"nodeType": "Block",
										"src": "2042:99:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2077:58:12",
													"nodeType": "YulBlock",
													"src": "2077:58:12",
													"statements": [
														{
															"nativeSrc": "2091:34:12",
															"nodeType": "YulAssignment",
															"src": "2091:34:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2107:3:12",
																		"nodeType": "YulLiteral",
																		"src": "2107:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "balanceDelta",
																		"nativeSrc": "2112:12:12",
																		"nodeType": "YulIdentifier",
																		"src": "2112:12:12"
																	}
																],
																"functionName": {
																	"name": "sar",
																	"nativeSrc": "2103:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2103:3:12"
																},
																"nativeSrc": "2103:22:12",
																"nodeType": "YulFunctionCall",
																"src": "2103:22:12"
															},
															"variableNames": [
																{
																	"name": "_amount0",
																	"nativeSrc": "2091:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "2091:8:12"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1423,
														"isOffset": false,
														"isSlot": false,
														"src": "2091:8:12",
														"valueSize": 1
													},
													{
														"declaration": 1420,
														"isOffset": false,
														"isSlot": false,
														"src": "2112:12:12",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1425,
												"nodeType": "InlineAssembly",
												"src": "2052:83:12"
											}
										]
									},
									"id": 1427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "amount0",
									"nameLocation": "1967:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "balanceDelta",
												"nameLocation": "1988:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "1975:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
													"typeString": "BalanceDelta"
												},
												"typeName": {
													"id": 1419,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1418,
														"name": "BalanceDelta",
														"nameLocations": [
															"1975:12:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1280,
														"src": "1975:12:12"
													},
													"referencedDeclaration": 1280,
													"src": "1975:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
														"typeString": "BalanceDelta"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1974:27:12"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "_amount0",
												"nameLocation": "2032:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2025:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1422,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "2025:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:12"
									},
									"scope": 1438,
									"src": "1958:183:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1436,
										"nodeType": "Block",
										"src": "2231:105:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2266:64:12",
													"nodeType": "YulBlock",
													"src": "2266:64:12",
													"statements": [
														{
															"nativeSrc": "2280:40:12",
															"nodeType": "YulAssignment",
															"src": "2280:40:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2303:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2303:2:12",
																		"type": "",
																		"value": "15"
																	},
																	{
																		"name": "balanceDelta",
																		"nativeSrc": "2307:12:12",
																		"nodeType": "YulIdentifier",
																		"src": "2307:12:12"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "2292:10:12",
																	"nodeType": "YulIdentifier",
																	"src": "2292:10:12"
																},
																"nativeSrc": "2292:28:12",
																"nodeType": "YulFunctionCall",
																"src": "2292:28:12"
															},
															"variableNames": [
																{
																	"name": "_amount1",
																	"nativeSrc": "2280:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "2280:8:12"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1433,
														"isOffset": false,
														"isSlot": false,
														"src": "2280:8:12",
														"valueSize": 1
													},
													{
														"declaration": 1430,
														"isOffset": false,
														"isSlot": false,
														"src": "2307:12:12",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1435,
												"nodeType": "InlineAssembly",
												"src": "2241:89:12"
											}
										]
									},
									"id": 1437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "amount1",
									"nameLocation": "2156:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "balanceDelta",
												"nameLocation": "2177:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "2164:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
													"typeString": "BalanceDelta"
												},
												"typeName": {
													"id": 1429,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1428,
														"name": "BalanceDelta",
														"nameLocations": [
															"2164:12:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1280,
														"src": "2164:12:12"
													},
													"referencedDeclaration": 1280,
													"src": "2164:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$1280",
														"typeString": "BalanceDelta"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2163:27:12"
									},
									"returnParameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "_amount1",
												"nameLocation": "2221:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "2214:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1432,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "2214:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:17:12"
									},
									"scope": 1438,
									"src": "2147:189:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1439,
							"src": "1819:519:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2307:12"
				},
				"id": 12
			},
			"UniswapV4/types/BeforeSwapDelta.sol": {
				"ast": {
					"absolutePath": "UniswapV4/types/BeforeSwapDelta.sol",
					"exportedSymbols": {
						"BeforeSwapDelta": [
							1442
						],
						"BeforeSwapDeltaLibrary": [
							1486
						],
						"toBeforeSwapDelta": [
							1454
						]
					},
					"id": 1487,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1440,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:13"
						},
						{
							"canonicalName": "BeforeSwapDelta",
							"id": 1442,
							"name": "BeforeSwapDelta",
							"nameLocation": "229:15:13",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "224:31:13",
							"underlyingType": {
								"id": 1441,
								"name": "int256",
								"nodeType": "ElementaryTypeName",
								"src": "248:6:13",
								"typeDescriptions": {
									"typeIdentifier": "t_int256",
									"typeString": "int256"
								}
							}
						},
						{
							"body": {
								"id": 1453,
								"nodeType": "Block",
								"src": "447:140:13",
								"statements": [
									{
										"AST": {
											"nativeSrc": "478:107:13",
											"nodeType": "YulBlock",
											"src": "478:107:13",
											"statements": [
												{
													"nativeSrc": "488:91:13",
													"nodeType": "YulAssignment",
													"src": "488:91:13",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "514:3:13",
																		"nodeType": "YulLiteral",
																		"src": "514:3:13",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "deltaSpecified",
																		"nativeSrc": "519:14:13",
																		"nodeType": "YulIdentifier",
																		"src": "519:14:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "510:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "510:3:13"
																},
																"nativeSrc": "510:24:13",
																"nodeType": "YulFunctionCall",
																"src": "510:24:13"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "548:3:13",
																						"nodeType": "YulLiteral",
																						"src": "548:3:13",
																						"type": "",
																						"value": "128"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "553:1:13",
																						"nodeType": "YulLiteral",
																						"src": "553:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "544:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "544:3:13"
																				},
																				"nativeSrc": "544:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "544:11:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "557:1:13",
																				"nodeType": "YulLiteral",
																				"src": "557:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "540:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "540:3:13"
																		},
																		"nativeSrc": "540:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "540:19:13"
																	},
																	{
																		"name": "deltaUnspecified",
																		"nativeSrc": "561:16:13",
																		"nodeType": "YulIdentifier",
																		"src": "561:16:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "536:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "536:3:13"
																},
																"nativeSrc": "536:42:13",
																"nodeType": "YulFunctionCall",
																"src": "536:42:13"
															}
														],
														"functionName": {
															"name": "or",
															"nativeSrc": "507:2:13",
															"nodeType": "YulIdentifier",
															"src": "507:2:13"
														},
														"nativeSrc": "507:72:13",
														"nodeType": "YulFunctionCall",
														"src": "507:72:13"
													},
													"variableNames": [
														{
															"name": "beforeSwapDelta",
															"nativeSrc": "488:15:13",
															"nodeType": "YulIdentifier",
															"src": "488:15:13"
														}
													]
												}
											]
										},
										"evmVersion": "cancun",
										"externalReferences": [
											{
												"declaration": 1450,
												"isOffset": false,
												"isSlot": false,
												"src": "488:15:13",
												"valueSize": 1
											},
											{
												"declaration": 1444,
												"isOffset": false,
												"isSlot": false,
												"src": "519:14:13",
												"valueSize": 1
											},
											{
												"declaration": 1446,
												"isOffset": false,
												"isSlot": false,
												"src": "561:16:13",
												"valueSize": 1
											}
										],
										"flags": [
											"memory-safe"
										],
										"id": 1452,
										"nodeType": "InlineAssembly",
										"src": "453:132:13"
									}
								]
							},
							"id": 1454,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "toBeforeSwapDelta",
							"nameLocation": "326:17:13",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 1447,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1444,
										"mutability": "mutable",
										"name": "deltaSpecified",
										"nameLocation": "351:14:13",
										"nodeType": "VariableDeclaration",
										"scope": 1454,
										"src": "344:21:13",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int128",
											"typeString": "int128"
										},
										"typeName": {
											"id": 1443,
											"name": "int128",
											"nodeType": "ElementaryTypeName",
											"src": "344:6:13",
											"typeDescriptions": {
												"typeIdentifier": "t_int128",
												"typeString": "int128"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1446,
										"mutability": "mutable",
										"name": "deltaUnspecified",
										"nameLocation": "374:16:13",
										"nodeType": "VariableDeclaration",
										"scope": 1454,
										"src": "367:23:13",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int128",
											"typeString": "int128"
										},
										"typeName": {
											"id": 1445,
											"name": "int128",
											"nodeType": "ElementaryTypeName",
											"src": "367:6:13",
											"typeDescriptions": {
												"typeIdentifier": "t_int128",
												"typeString": "int128"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "343:48:13"
							},
							"returnParameters": {
								"id": 1451,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1450,
										"mutability": "mutable",
										"name": "beforeSwapDelta",
										"nameLocation": "430:15:13",
										"nodeType": "VariableDeclaration",
										"scope": 1454,
										"src": "414:31:13",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BeforeSwapDelta_$1442",
											"typeString": "BeforeSwapDelta"
										},
										"typeName": {
											"id": 1449,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1448,
												"name": "BeforeSwapDelta",
												"nameLocations": [
													"414:15:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1442,
												"src": "414:15:13"
											},
											"referencedDeclaration": 1442,
											"src": "414:15:13",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_BeforeSwapDelta_$1442",
												"typeString": "BeforeSwapDelta"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "413:33:13"
							},
							"scope": 1487,
							"src": "317:270:13",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BeforeSwapDeltaLibrary",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1455,
								"nodeType": "StructuredDocumentation",
								"src": "589:99:13",
								"text": "@notice Library for getting the specified and unspecified deltas from the BeforeSwapDelta type"
							},
							"fullyImplemented": true,
							"id": 1486,
							"linearizedBaseContracts": [
								1486
							],
							"name": "BeforeSwapDeltaLibrary",
							"nameLocation": "696:22:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 1456,
										"nodeType": "StructuredDocumentation",
										"src": "725:34:13",
										"text": "@notice A BeforeSwapDelta of 0"
									},
									"functionSelector": "91cb4669",
									"id": 1463,
									"mutability": "constant",
									"name": "ZERO_DELTA",
									"nameLocation": "796:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 1486,
									"src": "764:68:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_BeforeSwapDelta_$1442",
										"typeString": "BeforeSwapDelta"
									},
									"typeName": {
										"id": 1458,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1457,
											"name": "BeforeSwapDelta",
											"nameLocations": [
												"764:15:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1442,
											"src": "764:15:13"
										},
										"referencedDeclaration": 1442,
										"src": "764:15:13",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BeforeSwapDelta_$1442",
											"typeString": "BeforeSwapDelta"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30",
												"id": 1461,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "830:1:13",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"expression": {
												"id": 1459,
												"name": "BeforeSwapDelta",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1442,
												"src": "809:15:13",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_userDefinedValueType$_BeforeSwapDelta_$1442_$",
													"typeString": "type(BeforeSwapDelta)"
												}
											},
											"id": 1460,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"memberLocation": "825:4:13",
											"memberName": "wrap",
											"nodeType": "MemberAccess",
											"src": "809:20:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_wrap_pure$_t_int256_$returns$_t_userDefinedValueType$_BeforeSwapDelta_$1442_$",
												"typeString": "function (int256) pure returns (BeforeSwapDelta)"
											}
										},
										"id": 1462,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "809:23:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_BeforeSwapDelta_$1442",
											"typeString": "BeforeSwapDelta"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1473,
										"nodeType": "Block",
										"src": "1037:98:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1072:57:13",
													"nodeType": "YulBlock",
													"src": "1072:57:13",
													"statements": [
														{
															"nativeSrc": "1086:33:13",
															"nodeType": "YulAssignment",
															"src": "1086:33:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1108:3:13",
																		"nodeType": "YulLiteral",
																		"src": "1108:3:13",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "delta",
																		"nativeSrc": "1113:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1113:5:13"
																	}
																],
																"functionName": {
																	"name": "sar",
																	"nativeSrc": "1104:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1104:3:13"
																},
																"nativeSrc": "1104:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1104:15:13"
															},
															"variableNames": [
																{
																	"name": "deltaSpecified",
																	"nativeSrc": "1086:14:13",
																	"nodeType": "YulIdentifier",
																	"src": "1086:14:13"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "1113:5:13",
														"valueSize": 1
													},
													{
														"declaration": 1470,
														"isOffset": false,
														"isSlot": false,
														"src": "1086:14:13",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1472,
												"nodeType": "InlineAssembly",
												"src": "1047:82:13"
											}
										]
									},
									"documentation": {
										"id": 1464,
										"nodeType": "StructuredDocumentation",
										"src": "839:97:13",
										"text": "extracts int128 from the upper 128 bits of the BeforeSwapDelta\n returned by beforeSwap"
									},
									"id": 1474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSpecifiedDelta",
									"nameLocation": "950:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "delta",
												"nameLocation": "984:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "968:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BeforeSwapDelta_$1442",
													"typeString": "BeforeSwapDelta"
												},
												"typeName": {
													"id": 1466,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1465,
														"name": "BeforeSwapDelta",
														"nameLocations": [
															"968:15:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1442,
														"src": "968:15:13"
													},
													"referencedDeclaration": 1442,
													"src": "968:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BeforeSwapDelta_$1442",
														"typeString": "BeforeSwapDelta"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "967:23:13"
									},
									"returnParameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "deltaSpecified",
												"nameLocation": "1021:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "1014:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1469,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "1014:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1013:23:13"
									},
									"scope": 1486,
									"src": "941:194:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "1357:106:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1392:65:13",
													"nodeType": "YulBlock",
													"src": "1392:65:13",
													"statements": [
														{
															"nativeSrc": "1406:41:13",
															"nodeType": "YulAssignment",
															"src": "1406:41:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1437:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1437:2:13",
																		"type": "",
																		"value": "15"
																	},
																	{
																		"name": "delta",
																		"nativeSrc": "1441:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1441:5:13"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "1426:10:13",
																	"nodeType": "YulIdentifier",
																	"src": "1426:10:13"
																},
																"nativeSrc": "1426:21:13",
																"nodeType": "YulFunctionCall",
																"src": "1426:21:13"
															},
															"variableNames": [
																{
																	"name": "deltaUnspecified",
																	"nativeSrc": "1406:16:13",
																	"nodeType": "YulIdentifier",
																	"src": "1406:16:13"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1478,
														"isOffset": false,
														"isSlot": false,
														"src": "1441:5:13",
														"valueSize": 1
													},
													{
														"declaration": 1481,
														"isOffset": false,
														"isSlot": false,
														"src": "1406:16:13",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1483,
												"nodeType": "InlineAssembly",
												"src": "1367:90:13"
											}
										]
									},
									"documentation": {
										"id": 1475,
										"nodeType": "StructuredDocumentation",
										"src": "1141:111:13",
										"text": "extracts int128 from the lower 128 bits of the BeforeSwapDelta\n returned by beforeSwap and afterSwap"
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUnspecifiedDelta",
									"nameLocation": "1266:19:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "delta",
												"nameLocation": "1302:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "1286:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BeforeSwapDelta_$1442",
													"typeString": "BeforeSwapDelta"
												},
												"typeName": {
													"id": 1477,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1476,
														"name": "BeforeSwapDelta",
														"nameLocations": [
															"1286:15:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1442,
														"src": "1286:15:13"
													},
													"referencedDeclaration": 1442,
													"src": "1286:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BeforeSwapDelta_$1442",
														"typeString": "BeforeSwapDelta"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1285:23:13"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "deltaUnspecified",
												"nameLocation": "1339:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "1332:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1480,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "1332:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1331:25:13"
									},
									"scope": 1486,
									"src": "1257:206:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1487,
							"src": "688:777:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1434:13"
				},
				"id": 13
			},
			"UniswapV4/types/Currency.sol": {
				"ast": {
					"absolutePath": "UniswapV4/types/Currency.sol",
					"exportedSymbols": {
						"Currency": [
							1494
						],
						"CurrencyLibrary": [
							1788
						],
						"CustomRevert": [
							1013
						],
						"IERC20Minimal": [
							793
						],
						"equals": [
							1527
						],
						"greaterThan": [
							1549
						],
						"greaterThanOrEqualTo": [
							1593
						],
						"lessThan": [
							1571
						]
					},
					"id": 1789,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1488,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:14"
						},
						{
							"absolutePath": "UniswapV4/interfaces/external/IERC20Minimal.sol",
							"file": "../interfaces/external/IERC20Minimal.sol",
							"id": 1490,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1789,
							"sourceUnit": 794,
							"src": "57:71:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1489,
										"name": "IERC20Minimal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 793,
										"src": "65:13:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "UniswapV4/libraries/CustomRevert.sol",
							"file": "../libraries/CustomRevert.sol",
							"id": 1492,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1789,
							"sourceUnit": 1014,
							"src": "129:59:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1491,
										"name": "CustomRevert",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1013,
										"src": "137:12:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "Currency",
							"id": 1494,
							"name": "Currency",
							"nameLocation": "195:8:14",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "190:25:14",
							"underlyingType": {
								"id": 1493,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "207:7:14",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							}
						},
						{
							"functionList": [
								{
									"definition": {
										"id": 1495,
										"name": "greaterThan",
										"nameLocations": [
											"224:11:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1549,
										"src": "224:11:14"
									},
									"operator": ">"
								},
								{
									"definition": {
										"id": 1496,
										"name": "lessThan",
										"nameLocations": [
											"242:8:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1571,
										"src": "242:8:14"
									},
									"operator": "<"
								},
								{
									"definition": {
										"id": 1497,
										"name": "greaterThanOrEqualTo",
										"nameLocations": [
											"257:20:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1593,
										"src": "257:20:14"
									},
									"operator": ">="
								},
								{
									"definition": {
										"id": 1498,
										"name": "equals",
										"nameLocations": [
											"285:6:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1527,
										"src": "285:6:14"
									},
									"operator": "=="
								}
							],
							"global": true,
							"id": 1501,
							"nodeType": "UsingForDirective",
							"src": "217:102:14",
							"typeName": {
								"id": 1500,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 1499,
									"name": "Currency",
									"nameLocations": [
										"303:8:14"
									],
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 1494,
									"src": "303:8:14"
								},
								"referencedDeclaration": 1494,
								"src": "303:8:14",
								"typeDescriptions": {
									"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
									"typeString": "Currency"
								}
							}
						},
						{
							"global": true,
							"id": 1505,
							"libraryName": {
								"id": 1502,
								"name": "CurrencyLibrary",
								"nameLocations": [
									"326:15:14"
								],
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1788,
								"src": "326:15:14"
							},
							"nodeType": "UsingForDirective",
							"src": "320:42:14",
							"typeName": {
								"id": 1504,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 1503,
									"name": "Currency",
									"nameLocations": [
										"346:8:14"
									],
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 1494,
									"src": "346:8:14"
								},
								"referencedDeclaration": 1494,
								"src": "346:8:14",
								"typeDescriptions": {
									"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
									"typeString": "Currency"
								}
							}
						},
						{
							"body": {
								"id": 1526,
								"nodeType": "Block",
								"src": "435:67:14",
								"statements": [
									{
										"expression": {
											"commonType": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"id": 1524,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"arguments": [
													{
														"id": 1518,
														"name": "currency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1508,
														"src": "464:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
															"typeString": "Currency"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
															"typeString": "Currency"
														}
													],
													"expression": {
														"id": 1516,
														"name": "Currency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "448:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$1494_$",
															"typeString": "type(Currency)"
														}
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "457:6:14",
													"memberName": "unwrap",
													"nodeType": "MemberAccess",
													"src": "448:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$1494_$returns$_t_address_$",
														"typeString": "function (Currency) pure returns (address)"
													}
												},
												"id": 1519,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "448:25:14",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "==",
											"rightExpression": {
												"arguments": [
													{
														"id": 1522,
														"name": "other",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1511,
														"src": "493:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
															"typeString": "Currency"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
															"typeString": "Currency"
														}
													],
													"expression": {
														"id": 1520,
														"name": "Currency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "477:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$1494_$",
															"typeString": "type(Currency)"
														}
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "486:6:14",
													"memberName": "unwrap",
													"nodeType": "MemberAccess",
													"src": "477:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$1494_$returns$_t_address_$",
														"typeString": "function (Currency) pure returns (address)"
													}
												},
												"id": 1523,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "477:22:14",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"src": "448:51:14",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"functionReturnParameters": 1515,
										"id": 1525,
										"nodeType": "Return",
										"src": "441:58:14"
									}
								]
							},
							"id": 1527,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "equals",
							"nameLocation": "373:6:14",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 1512,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1508,
										"mutability": "mutable",
										"name": "currency",
										"nameLocation": "389:8:14",
										"nodeType": "VariableDeclaration",
										"scope": 1527,
										"src": "380:17:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
											"typeString": "Currency"
										},
										"typeName": {
											"id": 1507,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1506,
												"name": "Currency",
												"nameLocations": [
													"380:8:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1494,
												"src": "380:8:14"
											},
											"referencedDeclaration": 1494,
											"src": "380:8:14",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
												"typeString": "Currency"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1511,
										"mutability": "mutable",
										"name": "other",
										"nameLocation": "408:5:14",
										"nodeType": "VariableDeclaration",
										"scope": 1527,
										"src": "399:14:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
											"typeString": "Currency"
										},
										"typeName": {
											"id": 1510,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1509,
												"name": "Currency",
												"nameLocations": [
													"399:8:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1494,
												"src": "399:8:14"
											},
											"referencedDeclaration": 1494,
											"src": "399:8:14",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
												"typeString": "Currency"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "379:35:14"
							},
							"returnParameters": {
								"id": 1515,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1514,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 1527,
										"src": "429:4:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"typeName": {
											"id": 1513,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "429:4:14",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "428:6:14"
							},
							"scope": 1789,
							"src": "364:138:14",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 1548,
								"nodeType": "Block",
								"src": "580:66:14",
								"statements": [
									{
										"expression": {
											"commonType": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"id": 1546,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"arguments": [
													{
														"id": 1540,
														"name": "currency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1530,
														"src": "609:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
															"typeString": "Currency"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
															"typeString": "Currency"
														}
													],
													"expression": {
														"id": 1538,
														"name": "Currency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "593:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$1494_$",
															"typeString": "type(Currency)"
														}
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "602:6:14",
													"memberName": "unwrap",
													"nodeType": "MemberAccess",
													"src": "593:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$1494_$returns$_t_address_$",
														"typeString": "function (Currency) pure returns (address)"
													}
												},
												"id": 1541,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "593:25:14",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": ">",
											"rightExpression": {
												"arguments": [
													{
														"id": 1544,
														"name": "other",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "637:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
															"typeString": "Currency"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
															"typeString": "Currency"
														}
													],
													"expression": {
														"id": 1542,
														"name": "Currency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "621:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$1494_$",
															"typeString": "type(Currency)"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "630:6:14",
													"memberName": "unwrap",
													"nodeType": "MemberAccess",
													"src": "621:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$1494_$returns$_t_address_$",
														"typeString": "function (Currency) pure returns (address)"
													}
												},
												"id": 1545,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "621:22:14",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"src": "593:50:14",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"functionReturnParameters": 1537,
										"id": 1547,
										"nodeType": "Return",
										"src": "586:57:14"
									}
								]
							},
							"id": 1549,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "greaterThan",
							"nameLocation": "513:11:14",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 1534,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1530,
										"mutability": "mutable",
										"name": "currency",
										"nameLocation": "534:8:14",
										"nodeType": "VariableDeclaration",
										"scope": 1549,
										"src": "525:17:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
											"typeString": "Currency"
										},
										"typeName": {
											"id": 1529,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1528,
												"name": "Currency",
												"nameLocations": [
													"525:8:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1494,
												"src": "525:8:14"
											},
											"referencedDeclaration": 1494,
											"src": "525:8:14",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
												"typeString": "Currency"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1533,
										"mutability": "mutable",
										"name": "other",
										"nameLocation": "553:5:14",
										"nodeType": "VariableDeclaration",
										"scope": 1549,
										"src": "544:14:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
											"typeString": "Currency"
										},
										"typeName": {
											"id": 1532,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1531,
												"name": "Currency",
												"nameLocations": [
													"544:8:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1494,
												"src": "544:8:14"
											},
											"referencedDeclaration": 1494,
											"src": "544:8:14",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
												"typeString": "Currency"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "524:35:14"
							},
							"returnParameters": {
								"id": 1537,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1536,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 1549,
										"src": "574:4:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"typeName": {
											"id": 1535,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "574:4:14",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "573:6:14"
							},
							"scope": 1789,
							"src": "504:142:14",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 1570,
								"nodeType": "Block",
								"src": "721:66:14",
								"statements": [
									{
										"expression": {
											"commonType": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"id": 1568,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"arguments": [
													{
														"id": 1562,
														"name": "currency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1552,
														"src": "750:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
															"typeString": "Currency"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
															"typeString": "Currency"
														}
													],
													"expression": {
														"id": 1560,
														"name": "Currency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "734:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$1494_$",
															"typeString": "type(Currency)"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "743:6:14",
													"memberName": "unwrap",
													"nodeType": "MemberAccess",
													"src": "734:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$1494_$returns$_t_address_$",
														"typeString": "function (Currency) pure returns (address)"
													}
												},
												"id": 1563,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "734:25:14",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "<",
											"rightExpression": {
												"arguments": [
													{
														"id": 1566,
														"name": "other",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1555,
														"src": "778:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
															"typeString": "Currency"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
															"typeString": "Currency"
														}
													],
													"expression": {
														"id": 1564,
														"name": "Currency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "762:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$1494_$",
															"typeString": "type(Currency)"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "771:6:14",
													"memberName": "unwrap",
													"nodeType": "MemberAccess",
													"src": "762:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$1494_$returns$_t_address_$",
														"typeString": "function (Currency) pure returns (address)"
													}
												},
												"id": 1567,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "762:22:14",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"src": "734:50:14",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"functionReturnParameters": 1559,
										"id": 1569,
										"nodeType": "Return",
										"src": "727:57:14"
									}
								]
							},
							"id": 1571,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "lessThan",
							"nameLocation": "657:8:14",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 1556,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1552,
										"mutability": "mutable",
										"name": "currency",
										"nameLocation": "675:8:14",
										"nodeType": "VariableDeclaration",
										"scope": 1571,
										"src": "666:17:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
											"typeString": "Currency"
										},
										"typeName": {
											"id": 1551,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1550,
												"name": "Currency",
												"nameLocations": [
													"666:8:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1494,
												"src": "666:8:14"
											},
											"referencedDeclaration": 1494,
											"src": "666:8:14",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
												"typeString": "Currency"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1555,
										"mutability": "mutable",
										"name": "other",
										"nameLocation": "694:5:14",
										"nodeType": "VariableDeclaration",
										"scope": 1571,
										"src": "685:14:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
											"typeString": "Currency"
										},
										"typeName": {
											"id": 1554,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1553,
												"name": "Currency",
												"nameLocations": [
													"685:8:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1494,
												"src": "685:8:14"
											},
											"referencedDeclaration": 1494,
											"src": "685:8:14",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
												"typeString": "Currency"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "665:35:14"
							},
							"returnParameters": {
								"id": 1559,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1558,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 1571,
										"src": "715:4:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"typeName": {
											"id": 1557,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "715:4:14",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "714:6:14"
							},
							"scope": 1789,
							"src": "648:139:14",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 1592,
								"nodeType": "Block",
								"src": "874:67:14",
								"statements": [
									{
										"expression": {
											"commonType": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"id": 1590,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"arguments": [
													{
														"id": 1584,
														"name": "currency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "903:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
															"typeString": "Currency"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
															"typeString": "Currency"
														}
													],
													"expression": {
														"id": 1582,
														"name": "Currency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "887:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$1494_$",
															"typeString": "type(Currency)"
														}
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "896:6:14",
													"memberName": "unwrap",
													"nodeType": "MemberAccess",
													"src": "887:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$1494_$returns$_t_address_$",
														"typeString": "function (Currency) pure returns (address)"
													}
												},
												"id": 1585,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "887:25:14",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": ">=",
											"rightExpression": {
												"arguments": [
													{
														"id": 1588,
														"name": "other",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1577,
														"src": "932:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
															"typeString": "Currency"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
															"typeString": "Currency"
														}
													],
													"expression": {
														"id": 1586,
														"name": "Currency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "916:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$1494_$",
															"typeString": "type(Currency)"
														}
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "925:6:14",
													"memberName": "unwrap",
													"nodeType": "MemberAccess",
													"src": "916:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$1494_$returns$_t_address_$",
														"typeString": "function (Currency) pure returns (address)"
													}
												},
												"id": 1589,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "916:22:14",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"src": "887:51:14",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"functionReturnParameters": 1581,
										"id": 1591,
										"nodeType": "Return",
										"src": "880:58:14"
									}
								]
							},
							"id": 1593,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "greaterThanOrEqualTo",
							"nameLocation": "798:20:14",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 1578,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1574,
										"mutability": "mutable",
										"name": "currency",
										"nameLocation": "828:8:14",
										"nodeType": "VariableDeclaration",
										"scope": 1593,
										"src": "819:17:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
											"typeString": "Currency"
										},
										"typeName": {
											"id": 1573,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1572,
												"name": "Currency",
												"nameLocations": [
													"819:8:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1494,
												"src": "819:8:14"
											},
											"referencedDeclaration": 1494,
											"src": "819:8:14",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
												"typeString": "Currency"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1577,
										"mutability": "mutable",
										"name": "other",
										"nameLocation": "847:5:14",
										"nodeType": "VariableDeclaration",
										"scope": 1593,
										"src": "838:14:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
											"typeString": "Currency"
										},
										"typeName": {
											"id": 1576,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1575,
												"name": "Currency",
												"nameLocations": [
													"838:8:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1494,
												"src": "838:8:14"
											},
											"referencedDeclaration": 1494,
											"src": "838:8:14",
											"typeDescriptions": {
												"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
												"typeString": "Currency"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "818:35:14"
							},
							"returnParameters": {
								"id": 1581,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1580,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 1593,
										"src": "868:4:14",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"typeName": {
											"id": 1579,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "868:4:14",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "867:6:14"
							},
							"scope": 1789,
							"src": "789:152:14",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CurrencyLibrary",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1594,
								"nodeType": "StructuredDocumentation",
								"src": "943:116:14",
								"text": "@title CurrencyLibrary\n @dev This library allows for transferring and holding native tokens and ERC20 tokens"
							},
							"fullyImplemented": true,
							"id": 1788,
							"linearizedBaseContracts": [
								1788
							],
							"name": "CurrencyLibrary",
							"nameLocation": "1067:15:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1595,
										"nodeType": "StructuredDocumentation",
										"src": "1089:86:14",
										"text": "@notice Additional context for ERC-7751 wrapped error when a native transfer fails"
									},
									"errorSelector": "f4b3b1bc",
									"id": 1597,
									"name": "NativeTransferFailed",
									"nameLocation": "1186:20:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1206:2:14"
									},
									"src": "1180:29:14"
								},
								{
									"documentation": {
										"id": 1598,
										"nodeType": "StructuredDocumentation",
										"src": "1215:86:14",
										"text": "@notice Additional context for ERC-7751 wrapped error when an ERC20 transfer fails"
									},
									"errorSelector": "f27f64e4",
									"id": 1600,
									"name": "ERC20TransferFailed",
									"nameLocation": "1312:19:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1331:2:14"
									},
									"src": "1306:28:14"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1601,
										"nodeType": "StructuredDocumentation",
										"src": "1340:55:14",
										"text": "@notice A constant to represent the native currency"
									},
									"functionSelector": "66e79509",
									"id": 1611,
									"mutability": "constant",
									"name": "ADDRESS_ZERO",
									"nameLocation": "1425:12:14",
									"nodeType": "VariableDeclaration",
									"scope": 1788,
									"src": "1400:65:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
										"typeString": "Currency"
									},
									"typeName": {
										"id": 1603,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1602,
											"name": "Currency",
											"nameLocations": [
												"1400:8:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1494,
											"src": "1400:8:14"
										},
										"referencedDeclaration": 1494,
										"src": "1400:8:14",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
											"typeString": "Currency"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "30",
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1462:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														}
													],
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "1454:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 1606,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1454:7:14",
														"typeDescriptions": {}
													}
												},
												"id": 1609,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "1454:10:14",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"expression": {
												"id": 1604,
												"name": "Currency",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1494,
												"src": "1440:8:14",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$1494_$",
													"typeString": "type(Currency)"
												}
											},
											"id": 1605,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"memberLocation": "1449:4:14",
											"memberName": "wrap",
											"nodeType": "MemberAccess",
											"src": "1440:13:14",
											"typeDescriptions": {
												"typeIdentifier": "t_function_wrap_pure$_t_address_$returns$_t_userDefinedValueType$_Currency_$1494_$",
												"typeString": "function (address) pure returns (Currency)"
											}
										},
										"id": 1610,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1440:25:14",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
											"typeString": "Currency"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1666,
										"nodeType": "Block",
										"src": "1546:2799:14",
										"statements": [
											{
												"assignments": [
													1622
												],
												"declarations": [
													{
														"constant": false,
														"id": 1622,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1748:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 1666,
														"src": "1743:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1621,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1743:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1623,
												"nodeType": "VariableDeclarationStatement",
												"src": "1743:12:14"
											},
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1624,
															"name": "currency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "1769:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																"typeString": "Currency"
															}
														},
														"id": 1625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1778:13:14",
														"memberName": "isAddressZero",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1750,
														"src": "1769:22:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Currency_$1494_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_Currency_$1494_$",
															"typeString": "function (Currency) pure returns (bool)"
														}
													},
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1769:24:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1664,
													"nodeType": "Block",
													"src": "2224:2115:14",
													"statements": [
														{
															"AST": {
																"nativeSrc": "2263:1749:14",
																"nodeType": "YulBlock",
																"src": "2263:1749:14",
																"statements": [
																	{
																		"nativeSrc": "2335:22:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2335:22:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2352:4:14",
																					"nodeType": "YulLiteral",
																					"src": "2352:4:14",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2346:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2346:5:14"
																			},
																			"nativeSrc": "2346:11:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2346:11:14"
																		},
																		"variables": [
																			{
																				"name": "fmp",
																				"nativeSrc": "2339:3:14",
																				"nodeType": "YulTypedName",
																				"src": "2339:3:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "fmp",
																					"nativeSrc": "2483:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2483:3:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2488:66:14",
																					"nodeType": "YulLiteral",
																					"src": "2488:66:14",
																					"type": "",
																					"value": "0xa9059cbb00000000000000000000000000000000000000000000000000000000"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2476:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2476:6:14"
																			},
																			"nativeSrc": "2476:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2476:79:14"
																		},
																		"nativeSrc": "2476:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2476:79:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "fmp",
																							"nativeSrc": "2583:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "2583:3:14"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2588:1:14",
																							"nodeType": "YulLiteral",
																							"src": "2588:1:14",
																							"type": "",
																							"value": "4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2579:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "2579:3:14"
																					},
																					"nativeSrc": "2579:11:14",
																					"nodeType": "YulFunctionCall",
																					"src": "2579:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "to",
																							"nativeSrc": "2596:2:14",
																							"nodeType": "YulIdentifier",
																							"src": "2596:2:14"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2600:42:14",
																							"nodeType": "YulLiteral",
																							"src": "2600:42:14",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2592:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "2592:3:14"
																					},
																					"nativeSrc": "2592:51:14",
																					"nodeType": "YulFunctionCall",
																					"src": "2592:51:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2572:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2572:6:14"
																			},
																			"nativeSrc": "2572:72:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2572:72:14"
																		},
																		"nativeSrc": "2572:72:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2572:72:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "fmp",
																							"nativeSrc": "2710:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "2710:3:14"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2715:2:14",
																							"nodeType": "YulLiteral",
																							"src": "2715:2:14",
																							"type": "",
																							"value": "36"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2706:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "2706:3:14"
																					},
																					"nativeSrc": "2706:12:14",
																					"nodeType": "YulFunctionCall",
																					"src": "2706:12:14"
																				},
																				{
																					"name": "amount",
																					"nativeSrc": "2720:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "2720:6:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2699:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2699:6:14"
																			},
																			"nativeSrc": "2699:28:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2699:28:14"
																		},
																		"nativeSrc": "2699:28:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2699:28:14"
																	},
																	{
																		"nativeSrc": "2828:846:14",
																		"nodeType": "YulAssignment",
																		"src": "2828:846:14",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "3099:1:14",
																													"nodeType": "YulLiteral",
																													"src": "3099:1:14",
																													"type": "",
																													"value": "0"
																												}
																											],
																											"functionName": {
																												"name": "mload",
																												"nativeSrc": "3093:5:14",
																												"nodeType": "YulIdentifier",
																												"src": "3093:5:14"
																											},
																											"nativeSrc": "3093:8:14",
																											"nodeType": "YulFunctionCall",
																											"src": "3093:8:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "3103:1:14",
																											"nodeType": "YulLiteral",
																											"src": "3103:1:14",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "eq",
																										"nativeSrc": "3090:2:14",
																										"nodeType": "YulIdentifier",
																										"src": "3090:2:14"
																									},
																									"nativeSrc": "3090:15:14",
																									"nodeType": "YulFunctionCall",
																									"src": "3090:15:14"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [],
																											"functionName": {
																												"name": "returndatasize",
																												"nativeSrc": "3110:14:14",
																												"nodeType": "YulIdentifier",
																												"src": "3110:14:14"
																											},
																											"nativeSrc": "3110:16:14",
																											"nodeType": "YulFunctionCall",
																											"src": "3110:16:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "3128:2:14",
																											"nodeType": "YulLiteral",
																											"src": "3128:2:14",
																											"type": "",
																											"value": "31"
																										}
																									],
																									"functionName": {
																										"name": "gt",
																										"nativeSrc": "3107:2:14",
																										"nodeType": "YulIdentifier",
																										"src": "3107:2:14"
																									},
																									"nativeSrc": "3107:24:14",
																									"nodeType": "YulFunctionCall",
																									"src": "3107:24:14"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nativeSrc": "3086:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "3086:3:14"
																							},
																							"nativeSrc": "3086:46:14",
																							"nodeType": "YulFunctionCall",
																							"src": "3086:46:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [],
																									"functionName": {
																										"name": "returndatasize",
																										"nativeSrc": "3141:14:14",
																										"nodeType": "YulIdentifier",
																										"src": "3141:14:14"
																									},
																									"nativeSrc": "3141:16:14",
																									"nodeType": "YulFunctionCall",
																									"src": "3141:16:14"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nativeSrc": "3134:6:14",
																								"nodeType": "YulIdentifier",
																								"src": "3134:6:14"
																							},
																							"nativeSrc": "3134:24:14",
																							"nodeType": "YulFunctionCall",
																							"src": "3134:24:14"
																						}
																					],
																					"functionName": {
																						"name": "or",
																						"nativeSrc": "3083:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "3083:2:14"
																					},
																					"nativeSrc": "3083:76:14",
																					"nodeType": "YulFunctionCall",
																					"src": "3083:76:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "gas",
																								"nativeSrc": "3617:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "3617:3:14"
																							},
																							"nativeSrc": "3617:5:14",
																							"nodeType": "YulFunctionCall",
																							"src": "3617:5:14"
																						},
																						{
																							"name": "currency",
																							"nativeSrc": "3624:8:14",
																							"nodeType": "YulIdentifier",
																							"src": "3624:8:14"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3634:1:14",
																							"nodeType": "YulLiteral",
																							"src": "3634:1:14",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "fmp",
																							"nativeSrc": "3637:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "3637:3:14"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3642:2:14",
																							"nodeType": "YulLiteral",
																							"src": "3642:2:14",
																							"type": "",
																							"value": "68"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3646:1:14",
																							"nodeType": "YulLiteral",
																							"src": "3646:1:14",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3649:2:14",
																							"nodeType": "YulLiteral",
																							"src": "3649:2:14",
																							"type": "",
																							"value": "32"
																						}
																					],
																					"functionName": {
																						"name": "call",
																						"nativeSrc": "3612:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "3612:4:14"
																					},
																					"nativeSrc": "3612:40:14",
																					"nodeType": "YulFunctionCall",
																					"src": "3612:40:14"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2859:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2859:3:14"
																			},
																			"nativeSrc": "2859:815:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2859:815:14"
																		},
																		"variableNames": [
																			{
																				"name": "success",
																				"nativeSrc": "2828:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2828:7:14"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "fmp",
																					"nativeSrc": "3747:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3747:3:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3752:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3752:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3740:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3740:6:14"
																			},
																			"nativeSrc": "3740:14:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3740:14:14"
																		},
																		"nativeSrc": "3740:14:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3740:14:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "fmp",
																							"nativeSrc": "3841:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "3841:3:14"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3846:4:14",
																							"nodeType": "YulLiteral",
																							"src": "3846:4:14",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3837:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "3837:3:14"
																					},
																					"nativeSrc": "3837:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "3837:14:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3853:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3853:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3830:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3830:6:14"
																			},
																			"nativeSrc": "3830:25:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3830:25:14"
																		},
																		"nativeSrc": "3830:25:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3830:25:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "fmp",
																							"nativeSrc": "3944:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "3944:3:14"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3949:4:14",
																							"nodeType": "YulLiteral",
																							"src": "3949:4:14",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3940:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "3940:3:14"
																					},
																					"nativeSrc": "3940:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "3940:14:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3956:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3956:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3933:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3933:6:14"
																			},
																			"nativeSrc": "3933:25:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3933:25:14"
																		},
																		"nativeSrc": "3933:25:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3933:25:14"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1618,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2720:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 1614,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "3624:8:14",
																	"valueSize": 1
																},
																{
																	"declaration": 1622,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2828:7:14",
																	"valueSize": 1
																},
																{
																	"declaration": 1616,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2596:2:14",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1645,
															"nodeType": "InlineAssembly",
															"src": "2238:1774:14"
														},
														{
															"condition": {
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4124:8:14",
																"subExpression": {
																	"id": 1646,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1622,
																	"src": "4125:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1663,
															"nodeType": "IfStatement",
															"src": "4120:209:14",
															"trueBody": {
																"id": 1662,
																"nodeType": "Block",
																"src": "4134:195:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1653,
																							"name": "currency",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1614,
																							"src": "4224:8:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																								"typeString": "Currency"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																								"typeString": "Currency"
																							}
																						],
																						"expression": {
																							"id": 1651,
																							"name": "Currency",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1494,
																							"src": "4208:8:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$1494_$",
																								"typeString": "type(Currency)"
																							}
																						},
																						"id": 1652,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "4217:6:14",
																						"memberName": "unwrap",
																						"nodeType": "MemberAccess",
																						"src": "4208:15:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$1494_$returns$_t_address_$",
																							"typeString": "function (Currency) pure returns (address)"
																						}
																					},
																					"id": 1654,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4208:25:14",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"expression": {
																							"id": 1655,
																							"name": "IERC20Minimal",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 793,
																							"src": "4235:13:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_IERC20Minimal_$793_$",
																								"typeString": "type(contract IERC20Minimal)"
																							}
																						},
																						"id": 1656,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "4249:8:14",
																						"memberName": "transfer",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 742,
																						"src": "4235:22:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																							"typeString": "function IERC20Minimal.transfer(address,uint256) returns (bool)"
																						}
																					},
																					"id": 1657,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "4258:8:14",
																					"memberName": "selector",
																					"nodeType": "MemberAccess",
																					"src": "4235:31:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				{
																					"expression": {
																						"id": 1658,
																						"name": "ERC20TransferFailed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1600,
																						"src": "4268:19:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																							"typeString": "function () pure returns (error)"
																						}
																					},
																					"id": 1659,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4288:8:14",
																					"memberName": "selector",
																					"nodeType": "MemberAccess",
																					"src": "4268:28:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					{
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				],
																				"expression": {
																					"id": 1648,
																					"name": "CustomRevert",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1013,
																					"src": "4152:12:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_CustomRevert_$1013_$",
																						"typeString": "type(library CustomRevert)"
																					}
																				},
																				"id": 1650,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4165:21:14",
																				"memberName": "bubbleUpAndRevertWith",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1012,
																				"src": "4152:34:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes4_$_t_bytes4_$returns$__$",
																					"typeString": "function (address,bytes4,bytes4) pure"
																				}
																			},
																			"id": 1660,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4152:162:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1661,
																		"nodeType": "ExpressionStatement",
																		"src": "4152:162:14"
																	}
																]
															}
														}
													]
												},
												"id": 1665,
												"nodeType": "IfStatement",
												"src": "1765:2574:14",
												"trueBody": {
													"id": 1644,
													"nodeType": "Block",
													"src": "1795:423:14",
													"statements": [
														{
															"AST": {
																"nativeSrc": "1834:138:14",
																"nodeType": "YulBlock",
																"src": "1834:138:14",
																"statements": [
																	{
																		"nativeSrc": "1912:46:14",
																		"nodeType": "YulAssignment",
																		"src": "1912:46:14",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "gas",
																						"nativeSrc": "1928:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "1928:3:14"
																					},
																					"nativeSrc": "1928:5:14",
																					"nodeType": "YulFunctionCall",
																					"src": "1928:5:14"
																				},
																				{
																					"name": "to",
																					"nativeSrc": "1935:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "1935:2:14"
																				},
																				{
																					"name": "amount",
																					"nativeSrc": "1939:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "1939:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1947:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1947:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1950:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1953:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1953:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1956:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1956:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "call",
																				"nativeSrc": "1923:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "1923:4:14"
																			},
																			"nativeSrc": "1923:35:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1923:35:14"
																		},
																		"variableNames": [
																			{
																				"name": "success",
																				"nativeSrc": "1912:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1912:7:14"
																			}
																		]
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1618,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1939:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 1622,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1912:7:14",
																	"valueSize": 1
																},
																{
																	"declaration": 1616,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1935:2:14",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1627,
															"nodeType": "InlineAssembly",
															"src": "1809:163:14"
														},
														{
															"condition": {
																"id": 1629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "2085:8:14",
																"subExpression": {
																	"id": 1628,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1622,
																	"src": "2086:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1643,
															"nodeType": "IfStatement",
															"src": "2081:127:14",
															"trueBody": {
																"id": 1642,
																"nodeType": "Block",
																"src": "2095:113:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1633,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1616,
																					"src": "2148:2:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1636,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2159:1:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1635,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2152:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes4_$",
																							"typeString": "type(bytes4)"
																						},
																						"typeName": {
																							"id": 1634,
																							"name": "bytes4",
																							"nodeType": "ElementaryTypeName",
																							"src": "2152:6:14",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1637,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2152:9:14",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				{
																					"expression": {
																						"id": 1638,
																						"name": "NativeTransferFailed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1597,
																						"src": "2163:20:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																							"typeString": "function () pure returns (error)"
																						}
																					},
																					"id": 1639,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2184:8:14",
																					"memberName": "selector",
																					"nodeType": "MemberAccess",
																					"src": "2163:29:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					{
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				],
																				"expression": {
																					"id": 1630,
																					"name": "CustomRevert",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1013,
																					"src": "2113:12:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_CustomRevert_$1013_$",
																						"typeString": "type(library CustomRevert)"
																					}
																				},
																				"id": 1632,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2126:21:14",
																				"memberName": "bubbleUpAndRevertWith",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1012,
																				"src": "2113:34:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes4_$_t_bytes4_$returns$__$",
																					"typeString": "function (address,bytes4,bytes4) pure"
																				}
																			},
																			"id": 1640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2113:80:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1641,
																		"nodeType": "ExpressionStatement",
																		"src": "2113:80:14"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 1667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1481:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "1499:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "1490:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 1613,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1612,
														"name": "Currency",
														"nameLocations": [
															"1490:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1494,
														"src": "1490:8:14"
													},
													"referencedDeclaration": 1494,
													"src": "1490:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1517:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "1509:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1529:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "1521:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1521:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1489:47:14"
									},
									"returnParameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1546:0:14"
									},
									"scope": 1788,
									"src": "1472:2873:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1700,
										"nodeType": "Block",
										"src": "4425:202:14",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1675,
															"name": "currency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1670,
															"src": "4439:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																"typeString": "Currency"
															}
														},
														"id": 1676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4448:13:14",
														"memberName": "isAddressZero",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1750,
														"src": "4439:22:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Currency_$1494_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_Currency_$1494_$",
															"typeString": "function (Currency) pure returns (bool)"
														}
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4439:24:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1698,
													"nodeType": "Block",
													"src": "4524:97:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1694,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4604:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_CurrencyLibrary_$1788",
																					"typeString": "library CurrencyLibrary"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_CurrencyLibrary_$1788",
																					"typeString": "library CurrencyLibrary"
																				}
																			],
																			"id": 1693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4596:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1692,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4596:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4596:13:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1688,
																						"name": "currency",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1670,
																						"src": "4575:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																							"typeString": "Currency"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																							"typeString": "Currency"
																						}
																					],
																					"expression": {
																						"id": 1686,
																						"name": "Currency",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1494,
																						"src": "4559:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$1494_$",
																							"typeString": "type(Currency)"
																						}
																					},
																					"id": 1687,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "4568:6:14",
																					"memberName": "unwrap",
																					"nodeType": "MemberAccess",
																					"src": "4559:15:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$1494_$returns$_t_address_$",
																						"typeString": "function (Currency) pure returns (address)"
																					}
																				},
																				"id": 1689,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4559:25:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1685,
																			"name": "IERC20Minimal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 793,
																			"src": "4545:13:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20Minimal_$793_$",
																				"typeString": "type(contract IERC20Minimal)"
																			}
																		},
																		"id": 1690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4545:40:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Minimal_$793",
																			"typeString": "contract IERC20Minimal"
																		}
																	},
																	"id": 1691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4586:9:14",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 732,
																	"src": "4545:50:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4545:65:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1674,
															"id": 1697,
															"nodeType": "Return",
															"src": "4538:72:14"
														}
													]
												},
												"id": 1699,
												"nodeType": "IfStatement",
												"src": "4435:186:14",
												"trueBody": {
													"id": 1684,
													"nodeType": "Block",
													"src": "4465:53:14",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1680,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4494:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_CurrencyLibrary_$1788",
																				"typeString": "library CurrencyLibrary"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_CurrencyLibrary_$1788",
																				"typeString": "library CurrencyLibrary"
																			}
																		],
																		"id": 1679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4486:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1678,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4486:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4486:13:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4500:7:14",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4486:21:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1674,
															"id": 1683,
															"nodeType": "Return",
															"src": "4479:28:14"
														}
													]
												}
											}
										]
									},
									"id": 1701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfSelf",
									"nameLocation": "4360:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "4383:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "4374:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 1669,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1668,
														"name": "Currency",
														"nameLocations": [
															"4374:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1494,
														"src": "4374:8:14"
													},
													"referencedDeclaration": 1494,
													"src": "4374:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:19:14"
									},
									"returnParameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "4416:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4416:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4415:9:14"
									},
									"scope": 1788,
									"src": "4351:276:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1730,
										"nodeType": "Block",
										"src": "4718:186:14",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1711,
															"name": "currency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1704,
															"src": "4732:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																"typeString": "Currency"
															}
														},
														"id": 1712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4741:13:14",
														"memberName": "isAddressZero",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1750,
														"src": "4732:22:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Currency_$1494_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_Currency_$1494_$",
															"typeString": "function (Currency) pure returns (bool)"
														}
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4732:24:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1728,
													"nodeType": "Block",
													"src": "4809:89:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1725,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1706,
																		"src": "4881:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1721,
																						"name": "currency",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1704,
																						"src": "4860:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																							"typeString": "Currency"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																							"typeString": "Currency"
																						}
																					],
																					"expression": {
																						"id": 1719,
																						"name": "Currency",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1494,
																						"src": "4844:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$1494_$",
																							"typeString": "type(Currency)"
																						}
																					},
																					"id": 1720,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "4853:6:14",
																					"memberName": "unwrap",
																					"nodeType": "MemberAccess",
																					"src": "4844:15:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$1494_$returns$_t_address_$",
																						"typeString": "function (Currency) pure returns (address)"
																					}
																				},
																				"id": 1722,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4844:25:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1718,
																			"name": "IERC20Minimal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 793,
																			"src": "4830:13:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20Minimal_$793_$",
																				"typeString": "type(contract IERC20Minimal)"
																			}
																		},
																		"id": 1723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4830:40:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Minimal_$793",
																			"typeString": "contract IERC20Minimal"
																		}
																	},
																	"id": 1724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4871:9:14",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 732,
																	"src": "4830:50:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4830:57:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1710,
															"id": 1727,
															"nodeType": "Return",
															"src": "4823:64:14"
														}
													]
												},
												"id": 1729,
												"nodeType": "IfStatement",
												"src": "4728:170:14",
												"trueBody": {
													"id": 1717,
													"nodeType": "Block",
													"src": "4758:45:14",
													"statements": [
														{
															"expression": {
																"expression": {
																	"id": 1714,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "4779:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4785:7:14",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4779:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1710,
															"id": 1716,
															"nodeType": "Return",
															"src": "4772:20:14"
														}
													]
												}
											}
										]
									},
									"id": 1731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4642:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "4661:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "4652:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 1703,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1702,
														"name": "Currency",
														"nameLocations": [
															"4652:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1494,
														"src": "4652:8:14"
													},
													"referencedDeclaration": 1494,
													"src": "4652:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4679:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "4671:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4671:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4651:34:14"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "4709:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4709:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4708:9:14"
									},
									"scope": 1788,
									"src": "4633:271:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1749,
										"nodeType": "Block",
										"src": "4981:82:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1741,
																"name": "currency",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1734,
																"src": "5014:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																	"typeString": "Currency"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																	"typeString": "Currency"
																}
															],
															"expression": {
																"id": 1739,
																"name": "Currency",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1494,
																"src": "4998:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$1494_$",
																	"typeString": "type(Currency)"
																}
															},
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5007:6:14",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "4998:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$1494_$returns$_t_address_$",
																"typeString": "function (Currency) pure returns (address)"
															}
														},
														"id": 1742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4998:25:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"id": 1745,
																"name": "ADDRESS_ZERO",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1611,
																"src": "5043:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																	"typeString": "Currency"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																	"typeString": "Currency"
																}
															],
															"expression": {
																"id": 1743,
																"name": "Currency",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1494,
																"src": "5027:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$1494_$",
																	"typeString": "type(Currency)"
																}
															},
															"id": 1744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5036:6:14",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "5027:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$1494_$returns$_t_address_$",
																"typeString": "function (Currency) pure returns (address)"
															}
														},
														"id": 1746,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5027:29:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4998:58:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1738,
												"id": 1748,
												"nodeType": "Return",
												"src": "4991:65:14"
											}
										]
									},
									"id": 1750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAddressZero",
									"nameLocation": "4919:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "4942:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "4933:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 1733,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1732,
														"name": "Currency",
														"nameLocations": [
															"4933:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1494,
														"src": "4933:8:14"
													},
													"referencedDeclaration": 1494,
													"src": "4933:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4932:19:14"
									},
									"returnParameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "4975:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1736,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4975:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4974:6:14"
									},
									"scope": 1788,
									"src": "4910:153:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1766,
										"nodeType": "Block",
										"src": "5134:58:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1762,
																	"name": "currency",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1753,
																	"src": "5175:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																		"typeString": "Currency"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
																		"typeString": "Currency"
																	}
																],
																"expression": {
																	"id": 1760,
																	"name": "Currency",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1494,
																	"src": "5159:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$1494_$",
																		"typeString": "type(Currency)"
																	}
																},
																"id": 1761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5168:6:14",
																"memberName": "unwrap",
																"nodeType": "MemberAccess",
																"src": "5159:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$1494_$returns$_t_address_$",
																	"typeString": "function (Currency) pure returns (address)"
																}
															},
															"id": 1763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5159:25:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1759,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5151:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 1758,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "5151:7:14",
															"typeDescriptions": {}
														}
													},
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5151:34:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 1757,
												"id": 1765,
												"nodeType": "Return",
												"src": "5144:41:14"
											}
										]
									},
									"id": 1767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toId",
									"nameLocation": "5078:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "5092:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "5083:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 1752,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1751,
														"name": "Currency",
														"nameLocations": [
															"5083:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1494,
														"src": "5083:8:14"
													},
													"referencedDeclaration": 1494,
													"src": "5083:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5082:19:14"
									},
									"returnParameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "5125:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5125:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:9:14"
									},
									"scope": 1788,
									"src": "5069:123:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1786,
										"nodeType": "Block",
										"src": "5396:59:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1781,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1769,
																			"src": "5443:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5435:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1779,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "5435:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5435:11:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5427:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1777,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5427:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 1783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5427:20:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1775,
															"name": "Currency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "5413:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$1494_$",
																"typeString": "type(Currency)"
															}
														},
														"id": 1776,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5422:4:14",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "5413:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_address_$returns$_t_userDefinedValueType$_Currency_$1494_$",
															"typeString": "function (address) pure returns (Currency)"
														}
													},
													"id": 1784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5413:35:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
														"typeString": "Currency"
													}
												},
												"functionReturnParameters": 1774,
												"id": 1785,
												"nodeType": "Return",
												"src": "5406:42:14"
											}
										]
									},
									"id": 1787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fromId",
									"nameLocation": "5344:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5359:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "5351:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5351:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5350:12:14"
									},
									"returnParameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "5386:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
													"typeString": "Currency"
												},
												"typeName": {
													"id": 1772,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1771,
														"name": "Currency",
														"nameLocations": [
															"5386:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1494,
														"src": "5386:8:14"
													},
													"referencedDeclaration": 1494,
													"src": "5386:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
														"typeString": "Currency"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5385:10:14"
									},
									"scope": 1788,
									"src": "5335:120:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1789,
							"src": "1059:4398:14",
							"usedErrors": [
								1597,
								1600
							],
							"usedEvents": []
						}
					],
					"src": "32:5426:14"
				},
				"id": 14
			},
			"UniswapV4/types/PoolId.sol": {
				"ast": {
					"absolutePath": "UniswapV4/types/PoolId.sol",
					"exportedSymbols": {
						"PoolId": [
							1794
						],
						"PoolIdLibrary": [
							1808
						],
						"PoolKey": [
							1840
						]
					},
					"id": 1809,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1790,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:15"
						},
						{
							"absolutePath": "UniswapV4/types/PoolKey.sol",
							"file": "./PoolKey.sol",
							"id": 1792,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1809,
							"sourceUnit": 1841,
							"src": "57:38:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1791,
										"name": "PoolKey",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1840,
										"src": "65:7:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "PoolId",
							"id": 1794,
							"name": "PoolId",
							"nameLocation": "102:6:15",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "97:23:15",
							"underlyingType": {
								"id": 1793,
								"name": "bytes32",
								"nodeType": "ElementaryTypeName",
								"src": "112:7:15",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								}
							}
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PoolIdLibrary",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1795,
								"nodeType": "StructuredDocumentation",
								"src": "122:51:15",
								"text": "@notice Library for computing the ID of a pool"
							},
							"fullyImplemented": true,
							"id": 1808,
							"linearizedBaseContracts": [
								1808
							],
							"name": "PoolIdLibrary",
							"nameLocation": "181:13:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1806,
										"nodeType": "Block",
										"src": "347:189:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "382:148:15",
													"nodeType": "YulBlock",
													"src": "382:148:15",
													"statements": [
														{
															"nativeSrc": "486:34:15",
															"nodeType": "YulAssignment",
															"src": "486:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "poolKey",
																		"nativeSrc": "506:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "506:7:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "515:4:15",
																		"nodeType": "YulLiteral",
																		"src": "515:4:15",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "496:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "496:9:15"
																},
																"nativeSrc": "496:24:15",
																"nodeType": "YulFunctionCall",
																"src": "496:24:15"
															},
															"variableNames": [
																{
																	"name": "poolId",
																	"nativeSrc": "486:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "486:6:15"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1803,
														"isOffset": false,
														"isSlot": false,
														"src": "486:6:15",
														"valueSize": 1
													},
													{
														"declaration": 1799,
														"isOffset": false,
														"isSlot": false,
														"src": "506:7:15",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1805,
												"nodeType": "InlineAssembly",
												"src": "357:173:15"
											}
										]
									},
									"documentation": {
										"id": 1796,
										"nodeType": "StructuredDocumentation",
										"src": "201:65:15",
										"text": "@notice Returns value equal to keccak256(abi.encode(poolKey))"
									},
									"id": 1807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toId",
									"nameLocation": "280:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "poolKey",
												"nameLocation": "300:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "285:22:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1840_memory_ptr",
													"typeString": "struct PoolKey"
												},
												"typeName": {
													"id": 1798,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1797,
														"name": "PoolKey",
														"nameLocations": [
															"285:7:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1840,
														"src": "285:7:15"
													},
													"referencedDeclaration": 1840,
													"src": "285:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1840_storage_ptr",
														"typeString": "struct PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "284:24:15"
									},
									"returnParameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "339:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "332:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_PoolId_$1794",
													"typeString": "PoolId"
												},
												"typeName": {
													"id": 1802,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1801,
														"name": "PoolId",
														"nameLocations": [
															"332:6:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1794,
														"src": "332:6:15"
													},
													"referencedDeclaration": 1794,
													"src": "332:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_PoolId_$1794",
														"typeString": "PoolId"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "331:15:15"
									},
									"scope": 1808,
									"src": "271:265:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1809,
							"src": "173:365:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:507:15"
				},
				"id": 15
			},
			"UniswapV4/types/PoolKey.sol": {
				"ast": {
					"absolutePath": "UniswapV4/types/PoolKey.sol",
					"exportedSymbols": {
						"Currency": [
							1494
						],
						"IHooks": [
							252
						],
						"PoolIdLibrary": [
							1808
						],
						"PoolKey": [
							1840
						]
					},
					"id": 1841,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1810,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:16"
						},
						{
							"absolutePath": "UniswapV4/types/Currency.sol",
							"file": "./Currency.sol",
							"id": 1812,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1841,
							"sourceUnit": 1789,
							"src": "57:40:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1811,
										"name": "Currency",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1494,
										"src": "65:8:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "UniswapV4/interfaces/IHooks.sol",
							"file": "../interfaces/IHooks.sol",
							"id": 1814,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1841,
							"sourceUnit": 253,
							"src": "98:48:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1813,
										"name": "IHooks",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 252,
										"src": "106:6:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "UniswapV4/types/PoolId.sol",
							"file": "./PoolId.sol",
							"id": 1816,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1841,
							"sourceUnit": 1809,
							"src": "147:43:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1815,
										"name": "PoolIdLibrary",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1808,
										"src": "155:13:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"global": true,
							"id": 1820,
							"libraryName": {
								"id": 1817,
								"name": "PoolIdLibrary",
								"nameLocations": [
									"198:13:16"
								],
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1808,
								"src": "198:13:16"
							},
							"nodeType": "UsingForDirective",
							"src": "192:39:16",
							"typeName": {
								"id": 1819,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 1818,
									"name": "PoolKey",
									"nameLocations": [
										"216:7:16"
									],
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 1840,
									"src": "216:7:16"
								},
								"referencedDeclaration": 1840,
								"src": "216:7:16",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_PoolKey_$1840_storage_ptr",
									"typeString": "struct PoolKey"
								}
							}
						},
						{
							"canonicalName": "PoolKey",
							"documentation": {
								"id": 1821,
								"nodeType": "StructuredDocumentation",
								"src": "233:51:16",
								"text": "@notice Returns the key for identifying a pool"
							},
							"id": 1840,
							"members": [
								{
									"constant": false,
									"id": 1825,
									"mutability": "mutable",
									"name": "currency0",
									"nameLocation": "381:9:16",
									"nodeType": "VariableDeclaration",
									"scope": 1840,
									"src": "372:18:16",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
										"typeString": "Currency"
									},
									"typeName": {
										"id": 1824,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1823,
											"name": "Currency",
											"nameLocations": [
												"372:8:16"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1494,
											"src": "372:8:16"
										},
										"referencedDeclaration": 1494,
										"src": "372:8:16",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
											"typeString": "Currency"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1829,
									"mutability": "mutable",
									"name": "currency1",
									"nameLocation": "473:9:16",
									"nodeType": "VariableDeclaration",
									"scope": 1840,
									"src": "464:18:16",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
										"typeString": "Currency"
									},
									"typeName": {
										"id": 1828,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1827,
											"name": "Currency",
											"nameLocations": [
												"464:8:16"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1494,
											"src": "464:8:16"
										},
										"referencedDeclaration": 1494,
										"src": "464:8:16",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_Currency_$1494",
											"typeString": "Currency"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1832,
									"mutability": "mutable",
									"name": "fee",
									"nameLocation": "639:3:16",
									"nodeType": "VariableDeclaration",
									"scope": 1840,
									"src": "632:10:16",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint24",
										"typeString": "uint24"
									},
									"typeName": {
										"id": 1831,
										"name": "uint24",
										"nodeType": "ElementaryTypeName",
										"src": "632:6:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint24",
											"typeString": "uint24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1835,
									"mutability": "mutable",
									"name": "tickSpacing",
									"nameLocation": "734:11:16",
									"nodeType": "VariableDeclaration",
									"scope": 1840,
									"src": "728:17:16",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 1834,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "728:5:16",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1839,
									"mutability": "mutable",
									"name": "hooks",
									"nameLocation": "796:5:16",
									"nodeType": "VariableDeclaration",
									"scope": 1840,
									"src": "789:12:16",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IHooks_$252",
										"typeString": "contract IHooks"
									},
									"typeName": {
										"id": 1838,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1837,
											"name": "IHooks",
											"nameLocations": [
												"789:6:16"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 252,
											"src": "789:6:16"
										},
										"referencedDeclaration": 252,
										"src": "789:6:16",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IHooks_$252",
											"typeString": "contract IHooks"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "PoolKey",
							"nameLocation": "291:7:16",
							"nodeType": "StructDefinition",
							"scope": 1841,
							"src": "284:520:16",
							"visibility": "public"
						}
					],
					"src": "32:773:16"
				},
				"id": 16
			}
		}
	}
}